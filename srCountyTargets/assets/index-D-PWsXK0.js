var Ls=Object.defineProperty;var As=(a,e,t)=>e in a?Ls(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var Xl=(a,e,t)=>As(a,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const l of i)if(l.type==="childList")for(const o of l.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(i){const l={};return i.integrity&&(l.integrity=i.integrity),i.referrerPolicy&&(l.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?l.credentials="include":i.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function n(i){if(i.ep)return;i.ep=!0;const l=t(i);fetch(i.href,l)}})();var zl={};/*! $Id: skipsBirdApi.js 95 2025-05-24 02:55:23Z skip $
 * Copyright (c) 2015 by Skip Russell
 */function Ws(a){const e=zl.VERSION||zl.version||"v1.0.0";let t={status:null,latLng:null,mapClickCallback:ge},n={el:{},qs:{},tgt:a},i="Barrow's Goldeneye",l="";["ApiTitle","ApiError","SettingsSummary","InfoPanel","ApiData","ApiSpecies","ApiStateChooser","ApiCountyChooser","ApiLatLngText","DaysBackChooser","HotspotCheckbox","ApiGoButton"].forEach(function(_){n.el[_]=document.getElementById("skips"+_)});var o=fe();n.qs.apiFn=o.apiFn?o.apiFn:null,n.qs.state=o.state?o.state:"US-OR",n.qs.county=o.county?o.county:null,n.qs.latLng=o.latLng?o.latLng:null,n.qs.species=o.species?o.species:null,n.qs.back=o.back?o.back:"7",n.qs.hotspot=o.hotspot?o.hotspot:null,console.log("skipsBirdApi: "+JSON.stringify(n.qs,null,null));try{k(),t.latLng=n.qs.latLng;let _=null;switch(u(""),n.qs.apiFn){case"notableByState":var h=d(n.qs.state,null,"notables");if(console.log("skipsBirdApi: "+n.qs.apiFn+": placeOb="+JSON.stringify(h,null,null)),h.parm)h.ob&&(t.latLng=h.ob.lat+","+h.ob.lon),_={apifn:n.qs.apiFn,locationCode:h.parm,back:n.qs.back},n.tgt.filteringLocationCode=locationCode,me(_,F);else throw new Error("state="+n.qs.state);break;case"recentByCounty":var h=d(null,n.qs.county,"targets");if(console.log("skipsBirdApi: "+n.qs.apiFn+": placeOb="+JSON.stringify(h,null,null)),h.parm)h.ob&&(t.latLng=h.ob.lat+","+h.ob.lon),_={apifn:n.qs.apiFn,locationCode:h.parm,back:n.qs.back},n.tgt.filteringLocationCode=_.locationCode,me(_,F);else throw new Error("county="+n.qs.county);break;case"recentByDistance":if(m(n.qs.latLng),console.log("skipsBirdApi: "+n.qs.apiFn+": latLng="+n.locOb.parm),n.locOb.lat)_={apifn:n.qs.apiFn,lat:n.locOb.lat,lng:n.locOb.lon,back:n.qs.back},n.tgt.filteringLocationCode=locationCode,me(_,F);else throw new Error("latLng="+n.qs.latLng);break;case"speciesByDistance":var r=null,s=K(n.qs.species);if(s&&(r=s.k,u("Nearby occurrences of "+s.n)),m(n.qs.latLng),console.log("skipsBirdApi: "+n.qs.apiFn+": speciesCode="+n.qs.species+", latLng="+n.locOb.parm),r&&n.locOb.lat)_={apifn:n.qs.apiFn,speciesCode:r,lat:n.locOb.lat,lng:n.locOb.lon,back:n.qs.back},n.tgt.filteringLocationCode=null,me(_,F);else throw new Error("speciesCode="+n.qs.species+", latLng="+n.qs.latLng);break;case"hotspotsByCounty":u("Nearby Hotspots");var h=d(null,n.qs.county,"hotspots");if(console.log("skipsBirdApi: "+n.qs.apiFn+": placeOb="+JSON.stringify(h,null,null)),h.parm)h.ob&&(t.latLng=h.ob.lat+","+h.ob.lon,m(t.latLng)),_={apifn:n.qs.apiFn,locationCode:h.parm},me(_,N);else throw new Error("county="+n.qs.county);break;case"hotspotsByDistance":if(u("Nearby Hotspots"),m(n.qs.latLng),console.log("skipsBirdApi: "+n.qs.apiFn+": latLng="+n.locOb.parm),n.locOb.lat)_={apifn:n.qs.apiFn,lat:n.locOb.lat,lng:n.locOb.lon},me(_,N);else throw new Error("latLng="+n.qs.latLng);break;default:if(n.qs.apiFn!=null)throw new Error("apiFn="+n.qs.apiFn);break}t.status="success"}catch(_){c(_.message),t.status="error"}return t;function c(_){n.el.ApiError.innerHTML=_}function u(_){var W="Skip's eBird Targets";_?W=_:W+=' <span style="font-size:xx-small">'+e+"</span>",n.el.ApiTitle.innerHTML=W}function d(_,W,T){if(M(),W||(W=W="US-OR-045"),W){if(console.log("skipsBirdApi: countyCode="+W),W.length!=9||W.search(/(US|CA)-/)!=0)return null;var R="County ("+W+")",x=window.top.regionsByKey[W];return x&&(R=x.name+" County"),u(R+" "+T),{ob:x,parm:W}}return null}function m(_){if(_){var W=_.split("%2C");W.length!=2&&(W=_.split(",")),W.length!=2&&alert('unable to parse latLng "'+_+'"'),n.locOb={lat:W[0],lon:W[1],lng:W[1],parm:"lat="+W[0]+"&lng="+W[1]}}else(!n.locOb||n.locOb.parm)&&(n.locOb={parm:null})}function y(_){const W=Date.parse(_);if(!isNaN(W))return new Date(W);var T=_.trim().replace(/\s+/g," ").split(/[\s-\/:]/);return new Date(T[0],T[1]-1,T[2]||1,T[3]||0,T[4]||0,T[5]||0)}function k(){n.el.ApiStateChooser.onchange=S,n.el.ApiCountyChooser.onchange=g,n.el.ApiGoButton.onclick=f;var _=E(),W=G();C(),v(),P(),D(),b(),O(_,W,n.qs.species,n.qs.latLng),i=_e(),console.log("skipsApiInitialize: complete")}function S(_){var W=_.currentTarget,T=W.options[W.selectedIndex];console.log("onChangedStateChooser: selectedState="+W.selectedIndex+":"+T.text+":"+T.value),n.qs.state=T.value;var R=window.top.regionsByKey[T.value];n.el.ApiLatLngText.value=R.lat+","+R.lon,G()}function g(_){var W=_.currentTarget,T=W.options[W.selectedIndex];console.log("onChangedCountyChooser: selectedCounty="+W.selectedIndex+":"+T.text+":"+T.value);var R=window.top.regionsByKey[T.value];n.el.ApiLatLngText.value=R.lat+","+R.lon;var x=!1;p(_.currentTarget.form,x)}function f(_){console.log("onClickGoButton: "+_.currentTarget.id);var W=!1;p(_.currentTarget.form,W)}function p(_,W){console.log("doFormSubmit: LatLng="+n.el.ApiLatLngText.value);var T=n.qs.apiFn;n.el.ApiSpecies.value?T="speciesByDistance":W?T="recentByDistance":n.el.ApiCountyChooser.selectedIndex>0?T="recentByCounty":n.el.ApiStateChooser.selectedIndex>0?T="notableByState":console.log("doFormSubmit: fall-thru="+T);var R=document.createElement("input");R.setAttribute("type","hidden"),R.setAttribute("name","apiFn"),R.setAttribute("value",T),_.appendChild(R),_.submit()}function C(){window.top.skipsEventGroups={}}function U(_,W){var T=window.top.skipsEventGroups;if(_ in T)throw new Error("internal error event group already exists for "+_);var R=new Array;T[_]=R,R.push(W),W.eventNodes=R,W.addEventListener("click",w,!1)}function L(_,W){var T=window.top.skipsEventGroups,R=T[_];R.length==1&&W.addEventListener("click",w,!1),R.push(W),W.eventNodes=R,W.classList.toggle("skipsDataTable_shaded"),W.classList.toggle("skipsDataRowHide")}function w(){for(var _=this.eventNodes,W=0,T=_.length;W<T;W++)_[W].classList.toggle("skipsDataRowHide")}function M(){if(window.top.completeListOfCounties==null&&(window.top.completeListOfCounties=ee()),window.top.regionsByKey==null){var _={};for(var W in window.top.completeListOfCounties){var T=window.top.completeListOfCounties[W];_[T.key]={name:T.name,lat:T.lat,lon:T.lon};for(var R in T.counties){var x=T.counties[R];_[x.key]=x}}window.top.regionsByKey=_}}function E(){console.log("renderStateListSelector: default="+n.qs.state);var _=n.el.ApiStateChooser;_.innerHTML="";var W="",T=0;_.selectedIndex=0,_.options[T++]=new Option("Select State",""),M();for(var R in window.top.completeListOfCounties){var x=window.top.completeListOfCounties[R];_.options[T]=new Option(x.name,x.key),x.key==n.qs.state&&(_.selectedIndex=T,W=x.name),T++}return W}function G(){var _=n.qs.state,W=n.qs.county;console.log("renderCountyListSelector: selectedStateKey="+_+", default="+W);var T=n.el.ApiCountyChooser;if(T.innerHTML="",M(),!(!_||!window.top.completeListOfCounties.hasOwnProperty(_))){var R=0,x=he(_,"CA-")?"Entire Province":"Entire State";T.options[R++]=new Option(x,"");var X="("+x+")",ie=window.top.completeListOfCounties[_];console.log("renderCountyListSelector: "+ie.name+", "+W);for(var B=ie.counties,le=0;le<B.length;le++){var ce=B[le];T.options[R]=new Option(ce.name,ce.key),ce.key==W&&(T.selectedIndex=R,X=ce.name),R++}return T.selectedIndex==0&&(T.selectedIndex=-1),X}}function P(){var _=n.qs.latLng;_&&(_=_.replace("%2C",",")),n.qs.latLng=_,n.el.ApiLatLngText.value=_}function D(){var _=n.el.DaysBackChooser;_.innerHTML="";var W=0;_.selectedIndex=0;for(var T=1;T<=30;T++){var R=T+" "+(T==1?"day":"days");_.options[W]=new Option(R,T),T==n.qs.back&&(_.selectedIndex=W),W++}}function b(){var _=n.qs.hotspot,W=_&&_!="false"&&_!="off";if(W){var T=n.qs.apiFn;T!="hotspotsByCounty"&&T!="hotspotsByDistance"&&(T=="notableByCounty"?T="hotspotsByCounty":T="hotspotsByDistance",n.qs.apiFn=T)}n.el.HotspotCheckbox.checked=W}function O(_,W,T,R){var x=K(T),X=x?x.n:"(all species)",ie=R||"(no lat/lon)",B="";n.qs.apiFn=="speciesByDistance"?B+="<li>Within 20 miles of</li>":n.qs.apiFn=="recentByDistance"?B+="<li>Within 50 miles of</li>":(B+="<li>"+_+"</li>",B+="<li>"+W+"</li>"),B+="<li>"+ie+"</li>",B+="<li>"+X+"</li>",n.el.SettingsSummary.innerHTML=B}function F(_){if(console.log("renderSightings: len="+_.length),typeof _=="string")throw new Error("unexpected return type");var W=n.el.ApiData,T=n.tgt.filteringLocationCode,R=new Array,x={},X=null;_.sort((Zn,Ie)=>{var ct=Ie.obsDt.localeCompare(Zn.obsDt);return ct==0?Zn.subId.localeCompare(Ie.subId):ct});for(var ie=0;ie<_.length;ie++){var B=_[ie];if(n.tgt.IsExcluded(T,B.comName)){console.log("renderSightings: skipping "+B.comName+" ("+T+")");continue}if(B.speciesCode||(B.speciesCode=B.comName),B.subId){if(X!=null&&B.speciesCode==X.speciesCode&&B.subId==X.subId)continue;X=B}else throw new Error("unexpected - no subid");var le;B.speciesCode in x?(le=x[B.speciesCode],le.length==1&&le.push(le[0])):(le=x[B.speciesCode]=new Array,R.push(B.speciesCode)),le.push(B)}var ce="▶",Ye="△";for(var ie in R){var Fe=R[ie],le=x[Fe],ue=le.length;for(var Ve in le){var B=le[Ve],ft="";B.userDisplayName&&(ft=B.userDisplayName);var Xe="";B.subnational1Code&&(Xe=B.subnational1Code.substring(3));var Pe=y(B.obsDt),jt=Pe.toDateString(),Ot="&nbsp;";Pe.getTime()!=Date.parse(jt)&&(Ot=Pe.toLocaleString("en-US",{hour:"numeric",minute:"2-digit",hour12:!0}));var gt=jt+"<br />"+Ot,Ct="X";B.howMany&&(Ct=B.howMany);var ht="";B.obsValid?ht='<span style="height:16px;color:green">&#x2714;</span>':B.obsReviewed&&(ht="X");var ze="unknown location";if(B.locName&&(ze=B.locName,B.locId&&!B.locationPrivate)){var fn="http://ebird.org/ebird/hotspot/"+B.locId;ze="<a href='"+fn+"'>"+B.locName+"</a>"}var Ut="";B.subnational2Code=="US-OR-067"||B.subnational2Code=="US-OR-051"||B.subnational2Code=="US-WA-011"?Ut="<span style='color:red'>"+B.subnational2Name+" County, "+Xe+"</span>":(B.subnational2Name&&(Ut=B.subnational2Name+" County, "),Xe&&(Ut+=Xe));var Qt="<a target='_blank' href='http://maps.google.com/?ie=UTF8&t=h&z=13&q="+B.lat+","+B.lng+"&ll="+B.lat+","+B.lng+"'> (map)</a>",gn="",Ea="";B.subId&&(gn="http://ebird.org/ebird/view/checklist/"+B.subId,Ea="<a href='"+gn+"'>Checklist</a>");var $t="",pt="";ue>1&&(Ve==0?($t="<br> &nbsp; "+ce,pt="<br><br> +"+(ue-2)+" more"):Ve==1&&($t="<br> &nbsp; "+Ye,pt="<br><br> (hide "+(ue-2)+" row"+(ue>3?"s":"")+")")),ie==0&&Ve==0&&(W.innerHTML="");var Ke=W.insertRow(),en=Ke.insertCell();en.innerHTML=Ct+"<br>"+ht+$t,Ke.insertCell().innerHTML="<b>"+B.comName+"</b><br>"+ft+pt,Ke.insertCell().innerHTML=gt,Ke.insertCell().innerHTML=ze+"<br>"+Ut+Qt,Ke.insertCell().innerHTML=Ea,ue>1&&(Ve==0?U(B.speciesCode,Ke):L(B.speciesCode,Ke));var Ra={name:B.comName,type:"S",checklist:gn,observer:ft,location:ze};Z({lat:B.lat,lng:B.lng},Ra)}}}function N(_){console.log("renderHotspots: len="+_.length);var W=n.el.ApiData;W.innerHTML="";for(var T=0;T<_.length;T++)_[T].dist=V(n.locOb.lat,n.locOb.lng,_[T].lat,_[T].lng);_.sort((Ut,Qt)=>Ut.dist-Qt.dist);for(var T=0;T<_.length;T++){var R=_[T],x="http://ebird.org/ebird/hotspot/"+R.locId,X="<a href='"+x+"'>"+Ce(R.locName)+"</a>",ie="";R.subnational1Code&&(ie=R.subnational1Code.substring(3));var B=R.subnational2Code,le=R.subnational2Code,ce=d(null,R.subnational2Code,"Hotspots");if(ce&&ce.ob){le=ce.ob.name+" County, "+ie;var Ye="https://ebird.org/region/"+R.subnational2Code;B="<a href='"+Ye+"'>"+Ce(le)+"</a>"}var Fe="";if(R.dist){var ue=Math.round(R.dist*10)/10;Fe=ue+" miles "}var Ve=Fe+"<a target='_blank' href='http://maps.google.com/?ie=UTF8&t=h&z=13&q="+R.lat+","+R.lng+"&ll="+R.lat+","+R.lng+"'> (map)</a>",ft=R.numSpeciesAllTime?R.numSpeciesAllTime+" species":"",Xe="";if(R.latestObsDt){var Pe=y(R.latestObsDt),jt=Pe.toDateString(),Ot="&nbsp;",gt="";if(Pe.getTime()!=Date.parse(jt)){Ot=Pe.toLocaleString("en-US",{hour:"numeric",minute:"2-digit",hour12:!0});var Ct=new Date;if(Pe.toDateString()==Ct.toDateString())gt=" &diam; today";else{var ht=(Ct-Pe)/1e3/60/60/24;ht=Math.round(ht),ht<2?gt=" &diam; yesterday":gt=" &diam; "+ht+" days ago"}}Xe="latest "+jt+" "+Ot+gt}var ze=W.insertRow();ze.insertCell().innerHTML=X,ze.insertCell().innerHTML=Ve,ze.insertCell().innerHTML=B,ze.insertCell().innerHTML=ft,ze.insertCell().innerHTML=Xe;var fn={name:R.locName,type:"H",hotspot:X,mapLink:Ve,region:B};if(Z({lat:R.lat,lng:R.lng},fn),T>49)break}}function V(_,W,T,R){var x=3958.765705195919,X=T-_,ie=X*Math.PI/180,B=R-W,le=B*Math.PI/180,ce=Math.sin(ie/2)*Math.sin(ie/2)+Math.cos(_*Math.PI/180)*Math.cos(T*Math.PI/180)*Math.sin(le/2)*Math.sin(le/2),Ye=2*Math.atan2(Math.sqrt(ce),Math.sqrt(1-ce)),Fe=x*Ye;return Fe}function v(){var _="IBP_Codes",W=n.el.ApiSpecies;if(W.list!=_){W.setAttribute("list",_);var T=document.getElementById("datalistID");T||(T=document.createElement("DATALIST"),T.id=_);var R=I();T.setAttribute("options",null);for(var x=0;x<R.length;x++){var X=R[x],ie=new Option(X.a+":"+X.n,X.a);T.appendChild(ie)}return W.appendChild(T),W.value=n.qs.species,T}}function K(_){if(_){for(var W=I(),T=_.toUpperCase(),R=0;R<W.length;R++){var x=W[R];if(T==x.a)return x}alert('unable to parse species "'+_+'"')}return null}function Z(_,W){var T=X(W.name),R;switch(W.type){case"H":R=W.hotspot+"<br/>"+W.mapLink+"<br/>"+W.region;break;case"S":var x=W.name;W.observer&&(x+="&nbsp;("+X(W.observer)+")"),R="<a href='"+W.checklist+"'>"+Ce(x)+"</a>";break;default:R="Error: "+W.type}document.skipsMap.markers.addMarker(_,T,R);function X(ie){var B="";if(ie)for(var le=0;le<ie.length;le++){var ce=ie.charAt(le);if(ce==ce.toUpperCase()&&ce!=ce.toLowerCase()&&(B+=ce),B.length>=3)break}return B}}function ee(){return JSON.parse(`{"US-AK":{"key":"US-AK","name":"Alaska","lon":"0.314","lat":"61.308","counties":[{"key":"US-AK-013","name":"Aleutians East","lat":"55.165","lon":"-161.767"},{"key":"US-AK-016","name":"Aleutians West","lat":"52.605","lon":"-98.989"},{"key":"US-AK-020","name":"Anchorage","lat":"61.151","lon":"-149.473"},{"key":"US-AK-050","name":"Bethel","lat":"60.652","lon":"-163.482"},{"key":"US-AK-060","name":"Bristol Bay","lat":"58.769","lon":"-157.249"},{"key":"US-AK-068","name":"Denali","lat":"63.889","lon":"-149.587"},{"key":"US-AK-070","name":"Dillingham","lat":"59.106","lon":"-159.192"},{"key":"US-AK-090","name":"Fairbanks North Star","lat":"64.831","lon":"-146.175"},{"key":"US-AK-100","name":"Haines","lat":"58.941","lon":"-135.617"},{"key":"US-AK-110","name":"Juneau","lat":"58.274","lon":"-134.484"},{"key":"US-AK-122","name":"Kenai Peninsula","lat":"59.909","lon":"-151.519"},{"key":"US-AK-130","name":"Ketchikan Gateway","lat":"55.701","lon":"-131.267"},{"key":"US-AK-150","name":"Kodiak Island","lat":"57.733","lon":"-153.832"},{"key":"US-AK-164","name":"Lake and Peninsula","lat":"57.064","lon":"-157.590"},{"key":"US-AK-170","name":"Matanuska-Susitna","lat":"61.841","lon":"-149.423"},{"key":"US-AK-180","name":"Nome","lat":"64.337","lon":"-165.203"},{"key":"US-AK-185","name":"North Slope","lat":"70.099","lon":"-154.325"},{"key":"US-AK-188","name":"Northwest Arctic","lat":"66.725","lon":"-161.701"},{"key":"US-AK-201","name":"Prince of Wales-Hyder","lat":"55.519","lon":"-132.688"},{"key":"US-AK-220","name":"Sitka","lat":"57.255","lon":"-135.433"},{"key":"US-AK-232","name":"Skagway-Hoonah-Angoon","lat":"58.830","lon":"-135.160"},{"key":"US-AK-240","name":"Southeast Fairbanks","lat":"64.482","lon":"-143.175"},{"key":"US-AK-261","name":"Valdez-Cordova","lat":"61.070","lon":"-146.249"},{"key":"US-AK-270","name":"Wade Hampton","lat":"61.739","lon":"-163.916"},{"key":"US-AK-280","name":"Wrangell-Petersburg","lat":"56.471","lon":"-132.670"},{"key":"US-AK-282","name":"Yakutat","lat":"59.765","lon":"-140.198"},{"key":"US-AK-290","name":"Yukon-Koyukuk","lat":"65.092","lon":"-145.597"}]},"US-AL":{"key":"US-AL","name":"Alabama","lon":"-86.681","lat":"32.576","counties":[{"key":"US-AL-001","name":"Autauga","lat":"32.471","lon":"-86.722"},{"key":"US-AL-003","name":"Baldwin","lat":"30.824","lon":"-87.749"},{"key":"US-AL-005","name":"Barbour","lat":"31.871","lon":"-85.408"},{"key":"US-AL-007","name":"Bibb","lat":"33.070","lon":"-87.123"},{"key":"US-AL-009","name":"Blount","lat":"33.996","lon":"-86.614"},{"key":"US-AL-011","name":"Bullock","lat":"32.097","lon":"-85.751"},{"key":"US-AL-013","name":"Butler","lat":"31.676","lon":"-86.730"},{"key":"US-AL-015","name":"Calhoun","lat":"33.746","lon":"-85.901"},{"key":"US-AL-017","name":"Chambers","lat":"32.844","lon":"-85.297"},{"key":"US-AL-019","name":"Cherokee","lat":"34.308","lon":"-85.618"},{"key":"US-AL-021","name":"Chilton","lat":"32.906","lon":"-86.606"},{"key":"US-AL-023","name":"Choctaw","lat":"32.043","lon":"-88.106"},{"key":"US-AL-025","name":"Clarke","lat":"31.486","lon":"-87.900"},{"key":"US-AL-027","name":"Clay","lat":"33.281","lon":"-85.867"},{"key":"US-AL-029","name":"Cleburne","lat":"33.646","lon":"-85.552"},{"key":"US-AL-031","name":"Coffee","lat":"31.375","lon":"-85.974"},{"key":"US-AL-033","name":"Colbert","lat":"34.727","lon":"-87.629"},{"key":"US-AL-035","name":"Conecuh","lat":"31.445","lon":"-86.948"},{"key":"US-AL-037","name":"Coosa","lat":"32.916","lon":"-86.314"},{"key":"US-AL-039","name":"Covington","lat":"31.358","lon":"-86.457"},{"key":"US-AL-041","name":"Crenshaw","lat":"31.676","lon":"-86.286"},{"key":"US-AL-043","name":"Cullman","lat":"34.072","lon":"-86.760"},{"key":"US-AL-045","name":"Dale","lat":"31.315","lon":"-85.609"},{"key":"US-AL-047","name":"Dallas","lat":"32.351","lon":"-87.093"},{"key":"US-AL-049","name":"DeKalb","lat":"34.480","lon":"-85.743"},{"key":"US-AL-051","name":"Elmore","lat":"32.505","lon":"-86.139"},{"key":"US-AL-053","name":"Escambia","lat":"31.140","lon":"-87.138"},{"key":"US-AL-055","name":"Etowah","lat":"33.989","lon":"-86.122"},{"key":"US-AL-057","name":"Fayette","lat":"33.764","lon":"-87.740"},{"key":"US-AL-059","name":"Franklin","lat":"34.446","lon":"-87.839"},{"key":"US-AL-061","name":"Geneva","lat":"31.103","lon":"-85.820"},{"key":"US-AL-063","name":"Greene","lat":"32.845","lon":"-87.935"},{"key":"US-AL-065","name":"Hale","lat":"32.775","lon":"-87.751"},{"key":"US-AL-067","name":"Henry","lat":"31.563","lon":"-85.167"},{"key":"US-AL-069","name":"Houston","lat":"31.205","lon":"-85.390"},{"key":"US-AL-071","name":"Jackson","lat":"34.738","lon":"-86.131"},{"key":"US-AL-073","name":"Jefferson","lat":"33.515","lon":"-86.900"},{"key":"US-AL-075","name":"Lamar","lat":"33.757","lon":"-88.109"},{"key":"US-AL-077","name":"Lauderdale","lat":"34.846","lon":"-87.662"},{"key":"US-AL-079","name":"Lawrence","lat":"34.638","lon":"-87.384"},{"key":"US-AL-081","name":"Lee","lat":"32.602","lon":"-85.237"},{"key":"US-AL-083","name":"Limestone","lat":"34.765","lon":"-86.985"},{"key":"US-AL-085","name":"Lowndes","lat":"32.281","lon":"-86.620"},{"key":"US-AL-087","name":"Macon","lat":"32.377","lon":"-85.888"},{"key":"US-AL-089","name":"Madison","lat":"34.726","lon":"-86.442"},{"key":"US-AL-091","name":"Marengo","lat":"32.275","lon":"-87.909"},{"key":"US-AL-093","name":"Marion","lat":"34.098","lon":"-87.825"},{"key":"US-AL-095","name":"Marshall","lat":"34.428","lon":"-86.291"},{"key":"US-AL-097","name":"Mobile","lat":"30.744","lon":"-88.092"},{"key":"US-AL-099","name":"Monroe","lat":"31.453","lon":"-87.434"},{"key":"US-AL-101","name":"Montgomery","lat":"32.351","lon":"-86.257"},{"key":"US-AL-103","name":"Morgan","lat":"34.514","lon":"-86.824"},{"key":"US-AL-105","name":"Perry","lat":"32.606","lon":"-87.178"},{"key":"US-AL-107","name":"Pickens","lat":"33.131","lon":"-88.025"},{"key":"US-AL-109","name":"Pike","lat":"31.783","lon":"-85.894"},{"key":"US-AL-111","name":"Randolph","lat":"33.350","lon":"-85.485"},{"key":"US-AL-113","name":"Russell","lat":"32.261","lon":"-85.099"},{"key":"US-AL-115","name":"St. Clair","lat":"33.751","lon":"-86.275"},{"key":"US-AL-117","name":"Shelby","lat":"33.274","lon":"-86.645"},{"key":"US-AL-119","name":"Sumter","lat":"32.660","lon":"-88.062"},{"key":"US-AL-121","name":"Talladega","lat":"33.441","lon":"-86.217"},{"key":"US-AL-123","name":"Tallapoosa","lat":"32.765","lon":"-85.873"},{"key":"US-AL-125","name":"Tuscaloosa","lat":"33.323","lon":"-87.394"},{"key":"US-AL-127","name":"Walker","lat":"33.800","lon":"-87.213"},{"key":"US-AL-129","name":"Washington","lat":"31.379","lon":"-88.017"},{"key":"US-AL-131","name":"Wilcox","lat":"32.117","lon":"-87.311"},{"key":"US-AL-133","name":"Winston","lat":"34.112","lon":"-87.400"}]},"US-AR":{"key":"US-AR","name":"Arkansas","lon":"-92.131","lat":"34.752","counties":[{"key":"US-AR-001","name":"Arkansas","lat":"34.218","lon":"-91.276"},{"key":"US-AR-003","name":"Ashley","lat":"33.207","lon":"-91.993"},{"key":"US-AR-005","name":"Baxter","lat":"36.263","lon":"-92.424"},{"key":"US-AR-007","name":"Benton","lat":"36.311","lon":"-94.109"},{"key":"US-AR-009","name":"Boone","lat":"36.308","lon":"-93.051"},{"key":"US-AR-011","name":"Bradley","lat":"33.365","lon":"-92.186"},{"key":"US-AR-013","name":"Calhoun","lat":"33.511","lon":"-92.515"},{"key":"US-AR-015","name":"Carroll","lat":"36.334","lon":"-93.687"},{"key":"US-AR-017","name":"Chicot","lat":"33.312","lon":"-91.192"},{"key":"US-AR-019","name":"Clark","lat":"33.961","lon":"-93.170"},{"key":"US-AR-021","name":"Clay","lat":"36.368","lon":"-90.413"},{"key":"US-AR-023","name":"Cleburne","lat":"35.532","lon":"-92.030"},{"key":"US-AR-025","name":"Cleveland","lat":"33.865","lon":"-92.318"},{"key":"US-AR-027","name":"Columbia","lat":"33.301","lon":"-93.303"},{"key":"US-AR-029","name":"Conway","lat":"35.190","lon":"-92.668"},{"key":"US-AR-031","name":"Craighead","lat":"35.846","lon":"-90.684"},{"key":"US-AR-033","name":"Crawford","lat":"35.506","lon":"-94.200"},{"key":"US-AR-035","name":"Crittenden","lat":"35.174","lon":"-90.219"},{"key":"US-AR-037","name":"Cross","lat":"35.273","lon":"-90.766"},{"key":"US-AR-039","name":"Dallas","lat":"33.966","lon":"-92.580"},{"key":"US-AR-041","name":"Desha","lat":"33.891","lon":"-91.172"},{"key":"US-AR-043","name":"Drew","lat":"33.557","lon":"-91.803"},{"key":"US-AR-045","name":"Faulkner","lat":"35.105","lon":"-92.445"},{"key":"US-AR-047","name":"Franklin","lat":"35.472","lon":"-93.932"},{"key":"US-AR-049","name":"Fulton","lat":"36.371","lon":"-91.779"},{"key":"US-AR-051","name":"Garland","lat":"34.552","lon":"-93.094"},{"key":"US-AR-053","name":"Grant","lat":"34.216","lon":"-92.445"},{"key":"US-AR-055","name":"Greene","lat":"36.095","lon":"-90.557"},{"key":"US-AR-057","name":"Hempstead","lat":"33.758","lon":"-93.729"},{"key":"US-AR-059","name":"Hot Spring","lat":"34.292","lon":"-93.004"},{"key":"US-AR-061","name":"Howard","lat":"33.973","lon":"-94.034"},{"key":"US-AR-063","name":"Independence","lat":"35.763","lon":"-91.400"},{"key":"US-AR-065","name":"Izard","lat":"36.051","lon":"-91.971"},{"key":"US-AR-067","name":"Jackson","lat":"35.711","lon":"-91.278"},{"key":"US-AR-069","name":"Jefferson","lat":"34.181","lon":"-91.656"},{"key":"US-AR-071","name":"Johnson","lat":"35.456","lon":"-93.480"},{"key":"US-AR-073","name":"Lafayette","lat":"33.287","lon":"-93.642"},{"key":"US-AR-075","name":"Lawrence","lat":"36.091","lon":"-91.024"},{"key":"US-AR-077","name":"Lee","lat":"34.758","lon":"-90.597"},{"key":"US-AR-079","name":"Lincoln","lat":"34.028","lon":"-91.649"},{"key":"US-AR-081","name":"Little River","lat":"33.695","lon":"-94.177"},{"key":"US-AR-083","name":"Logan","lat":"35.292","lon":"-93.631"},{"key":"US-AR-085","name":"Lonoke","lat":"34.835","lon":"-91.883"},{"key":"US-AR-087","name":"Madison","lat":"36.109","lon":"-93.679"},{"key":"US-AR-089","name":"Marion","lat":"36.275","lon":"-92.592"},{"key":"US-AR-091","name":"Miller","lat":"33.390","lon":"-93.829"},{"key":"US-AR-093","name":"Mississippi","lat":"35.690","lon":"-89.944"},{"key":"US-AR-095","name":"Monroe","lat":"34.601","lon":"-91.220"},{"key":"US-AR-097","name":"Montgomery","lat":"34.510","lon":"-93.624"},{"key":"US-AR-099","name":"Nevada","lat":"33.827","lon":"-93.300"},{"key":"US-AR-101","name":"Newton","lat":"35.942","lon":"-93.222"},{"key":"US-AR-103","name":"Ouachita","lat":"33.551","lon":"-92.766"},{"key":"US-AR-105","name":"Perry","lat":"34.989","lon":"-92.791"},{"key":"US-AR-107","name":"Phillips","lat":"34.310","lon":"-90.901"},{"key":"US-AR-109","name":"Pike","lat":"34.051","lon":"-93.516"},{"key":"US-AR-111","name":"Poinsett","lat":"35.608","lon":"-90.657"},{"key":"US-AR-113","name":"Polk","lat":"34.466","lon":"-94.238"},{"key":"US-AR-115","name":"Pope","lat":"35.319","lon":"-93.067"},{"key":"US-AR-117","name":"Prairie","lat":"34.837","lon":"-91.592"},{"key":"US-AR-119","name":"Pulaski","lat":"34.801","lon":"-92.354"},{"key":"US-AR-121","name":"Randolph","lat":"36.305","lon":"-91.002"},{"key":"US-AR-123","name":"St. Francis","lat":"35.034","lon":"-90.776"},{"key":"US-AR-125","name":"Saline","lat":"34.626","lon":"-92.645"},{"key":"US-AR-127","name":"Scott","lat":"34.925","lon":"-94.185"},{"key":"US-AR-129","name":"Searcy","lat":"35.931","lon":"-92.682"},{"key":"US-AR-131","name":"Sebastian","lat":"35.233","lon":"-94.281"},{"key":"US-AR-133","name":"Sevier","lat":"33.917","lon":"-94.162"},{"key":"US-AR-135","name":"Sharp","lat":"36.204","lon":"-91.494"},{"key":"US-AR-137","name":"Stone","lat":"35.929","lon":"-92.079"},{"key":"US-AR-139","name":"Union","lat":"33.247","lon":"-92.437"},{"key":"US-AR-141","name":"Van Buren","lat":"35.564","lon":"-92.472"},{"key":"US-AR-143","name":"Washington","lat":"36.075","lon":"-94.192"},{"key":"US-AR-145","name":"White","lat":"35.183","lon":"-91.656"},{"key":"US-AR-147","name":"Woodruff","lat":"35.223","lon":"-91.382"},{"key":"US-AR-149","name":"Yell","lat":"35.112","lon":"-93.197"}]},"US-AZ":{"key":"US-AZ","name":"Arizona","lon":"-111.931","lat":"34.168","counties":[{"key":"US-AZ-001","name":"Apache","lat":"34.271","lon":"-109.587"},{"key":"US-AZ-003","name":"Cochise","lat":"31.868","lon":"-109.885"},{"key":"US-AZ-005","name":"Coconino","lat":"35.382","lon":"-111.976"},{"key":"US-AZ-007","name":"Gila","lat":"34.006","lon":"-111.132"},{"key":"US-AZ-009","name":"Graham","lat":"33.381","lon":"-109.959"},{"key":"US-AZ-011","name":"Greenlee","lat":"33.467","lon":"-109.341"},{"key":"US-AZ-012","name":"La Paz","lat":"33.891","lon":"-114.153"},{"key":"US-AZ-013","name":"Maricopa","lat":"33.618","lon":"-111.809"},{"key":"US-AZ-015","name":"Mohave","lat":"35.745","lon":"-113.447"},{"key":"US-AZ-017","name":"Navajo","lat":"34.997","lon":"-110.132"},{"key":"US-AZ-019","name":"Pima","lat":"32.153","lon":"-111.314"},{"key":"US-AZ-021","name":"Pinal","lat":"33.068","lon":"-111.180"},{"key":"US-AZ-023","name":"Santa Cruz","lat":"31.567","lon":"-110.878"},{"key":"US-AZ-025","name":"Yavapai","lat":"34.470","lon":"-112.070"},{"key":"US-AZ-027","name":"Yuma","lat":"32.762","lon":"-114.504"}]},"US-CA":{"key":"US-CA","name":"California","lon":"-119.307","lat":"37.269","counties":[{"key":"US-CA-001","name":"Alameda","lat":"37.709","lon":"-122.069"},{"key":"US-CA-003","name":"Alpine","lat":"38.585","lon":"-119.717"},{"key":"US-CA-005","name":"Amador","lat":"38.477","lon":"-120.569"},{"key":"US-CA-007","name":"Butte","lat":"39.614","lon":"-121.668"},{"key":"US-CA-009","name":"Calaveras","lat":"38.244","lon":"-120.476"},{"key":"US-CA-011","name":"Colusa","lat":"39.158","lon":"-122.275"},{"key":"US-CA-013","name":"Contra Costa","lat":"37.943","lon":"-121.943"},{"key":"US-CA-015","name":"Del Norte","lat":"41.695","lon":"-123.845"},{"key":"US-CA-017","name":"El Dorado","lat":"38.767","lon":"-120.596"},{"key":"US-CA-019","name":"Fresno","lat":"36.814","lon":"-119.686"},{"key":"US-CA-021","name":"Glenn","lat":"39.589","lon":"-122.098"},{"key":"US-CA-023","name":"Humboldt","lat":"40.850","lon":"-123.834"},{"key":"US-CA-025","name":"Imperial","lat":"33.062","lon":"-114.953"},{"key":"US-CA-027","name":"Inyo","lat":"36.639","lon":"-118.219"},{"key":"US-CA-029","name":"Kern","lat":"35.363","lon":"-118.737"},{"key":"US-CA-031","name":"Kings","lat":"36.136","lon":"-119.861"},{"key":"US-CA-033","name":"Lake","lat":"39.070","lon":"-122.677"},{"key":"US-CA-035","name":"Lassen","lat":"40.336","lon":"-120.537"},{"key":"US-CA-037","name":"Los Angeles","lat":"33.937","lon":"-118.282"},{"key":"US-CA-039","name":"Madera","lat":"37.084","lon":"-119.891"},{"key":"US-CA-041","name":"Marin","lat":"38.048","lon":"-122.712"},{"key":"US-CA-043","name":"Mariposa","lat":"37.706","lon":"-119.975"},{"key":"US-CA-045","name":"Mendocino","lat":"39.370","lon":"-123.484"},{"key":"US-CA-047","name":"Merced","lat":"37.155","lon":"-120.680"},{"key":"US-CA-049","name":"Modoc","lat":"41.655","lon":"-120.826"},{"key":"US-CA-051","name":"Mono","lat":"38.038","lon":"-119.292"},{"key":"US-CA-053","name":"Monterey","lat":"36.329","lon":"-121.178"},{"key":"US-CA-055","name":"Napa","lat":"38.452","lon":"-122.324"},{"key":"US-CA-057","name":"Nevada","lat":"39.298","lon":"-120.871"},{"key":"US-CA-059","name":"Orange","lat":"33.731","lon":"-117.852"},{"key":"US-CA-061","name":"Placer","lat":"39.012","lon":"-120.870"},{"key":"US-CA-063","name":"Plumas","lat":"39.998","lon":"-120.983"},{"key":"US-CA-065","name":"Riverside","lat":"33.786","lon":"-116.128"},{"key":"US-CA-067","name":"Sacramento","lat":"38.347","lon":"-121.463"},{"key":"US-CA-069","name":"San Benito","lat":"36.534","lon":"-121.122"},{"key":"US-CA-071","name":"San Bernardino","lat":"34.466","lon":"-116.219"},{"key":"US-CA-073","name":"San Diego","lat":"32.975","lon":"-117.055"},{"key":"US-CA-075","name":"San Francisco","lat":"37.769","lon":"-122.479"},{"key":"US-CA-077","name":"San Joaquin","lat":"37.945","lon":"-121.333"},{"key":"US-CA-079","name":"San Luis Obispo","lat":"35.226","lon":"-120.494"},{"key":"US-CA-081","name":"San Mateo","lat":"37.421","lon":"-122.321"},{"key":"US-CA-083","name":"Santa Barbara","lat":"34.635","lon":"-120.117"},{"key":"US-CA-085","name":"Santa Clara","lat":"37.208","lon":"-121.715"},{"key":"US-CA-087","name":"Santa Cruz","lat":"37.030","lon":"-121.913"},{"key":"US-CA-089","name":"Shasta","lat":"40.542","lon":"-122.481"},{"key":"US-CA-091","name":"Sierra","lat":"39.564","lon":"-120.763"},{"key":"US-CA-093","name":"Siskiyou","lat":"41.416","lon":"-123.139"},{"key":"US-CA-095","name":"Solano","lat":"38.277","lon":"-121.987"},{"key":"US-CA-097","name":"Sonoma","lat":"38.473","lon":"-122.843"},{"key":"US-CA-099","name":"Stanislaus","lat":"37.519","lon":"-121.163"},{"key":"US-CA-101","name":"Sutter","lat":"39.007","lon":"-121.713"},{"key":"US-CA-103","name":"Tehama","lat":"40.252","lon":"-122.280"},{"key":"US-CA-105","name":"Trinity","lat":"40.845","lon":"-122.984"},{"key":"US-CA-107","name":"Tulare","lat":"36.277","lon":"-118.530"},{"key":"US-CA-109","name":"Tuolumne","lat":"37.964","lon":"-119.907"},{"key":"US-CA-111","name":"Ventura","lat":"34.199","lon":"-119.175"},{"key":"US-CA-113","name":"Yolo","lat":"38.670","lon":"-121.878"},{"key":"US-CA-115","name":"Yuba","lat":"39.268","lon":"-121.376"}]},"US-CO":{"key":"US-CO","name":"Colorado","lon":"-105.551","lat":"38.998","counties":[{"key":"US-CO-001","name":"Adams","lat":"39.849","lon":"-104.781"},{"key":"US-CO-003","name":"Alamosa","lat":"37.611","lon":"-105.639"},{"key":"US-CO-005","name":"Arapahoe","lat":"39.660","lon":"-104.851"},{"key":"US-CO-007","name":"Archuleta","lat":"37.155","lon":"-107.029"},{"key":"US-CO-009","name":"Baca","lat":"37.306","lon":"-102.479"},{"key":"US-CO-011","name":"Bent","lat":"38.005","lon":"-103.071"},{"key":"US-CO-013","name":"Boulder","lat":"40.060","lon":"-105.388"},{"key":"US-CO-014","name":"Broomfield","lat":"39.951","lon":"-105.058"},{"key":"US-CO-015","name":"Chaffee","lat":"38.772","lon":"-106.203"},{"key":"US-CO-017","name":"Cheyenne","lat":"38.834","lon":"-102.528"},{"key":"US-CO-019","name":"Clear Creek","lat":"39.732","lon":"-105.699"},{"key":"US-CO-021","name":"Conejos","lat":"37.188","lon":"-105.852"},{"key":"US-CO-023","name":"Costilla","lat":"37.370","lon":"-105.458"},{"key":"US-CO-025","name":"Crowley","lat":"38.227","lon":"-103.849"},{"key":"US-CO-027","name":"Custer","lat":"38.029","lon":"-105.414"},{"key":"US-CO-029","name":"Delta","lat":"39.031","lon":"-107.845"},{"key":"US-CO-031","name":"Denver","lat":"39.702","lon":"-104.942"},{"key":"US-CO-033","name":"Dolores","lat":"37.781","lon":"-108.174"},{"key":"US-CO-035","name":"Douglas","lat":"39.388","lon":"-105.091"},{"key":"US-CO-037","name":"Eagle","lat":"39.578","lon":"-106.385"},{"key":"US-CO-039","name":"Elbert","lat":"39.244","lon":"-104.189"},{"key":"US-CO-041","name":"El Paso","lat":"38.893","lon":"-104.712"},{"key":"US-CO-043","name":"Fremont","lat":"38.483","lon":"-105.747"},{"key":"US-CO-045","name":"Garfield","lat":"39.572","lon":"-107.887"},{"key":"US-CO-047","name":"Gilpin","lat":"39.839","lon":"-105.538"},{"key":"US-CO-049","name":"Grand","lat":"40.154","lon":"-106.017"},{"key":"US-CO-051","name":"Gunnison","lat":"38.842","lon":"-106.810"},{"key":"US-CO-053","name":"Hinsdale","lat":"37.926","lon":"-107.411"},{"key":"US-CO-055","name":"Huerfano","lat":"37.645","lon":"-105.167"},{"key":"US-CO-057","name":"Jackson","lat":"40.606","lon":"-106.366"},{"key":"US-CO-059","name":"Jefferson","lat":"39.563","lon":"-105.155"},{"key":"US-CO-061","name":"Kiowa","lat":"38.393","lon":"-102.666"},{"key":"US-CO-063","name":"Kit Carson","lat":"39.310","lon":"-102.573"},{"key":"US-CO-065","name":"Lake","lat":"39.247","lon":"-106.342"},{"key":"US-CO-067","name":"La Plata","lat":"37.311","lon":"-108.127"},{"key":"US-CO-069","name":"Larimer","lat":"40.573","lon":"-105.746"},{"key":"US-CO-071","name":"Las Animas","lat":"37.374","lon":"-104.628"},{"key":"US-CO-073","name":"Lincoln","lat":"38.959","lon":"-103.640"},{"key":"US-CO-075","name":"Logan","lat":"40.775","lon":"-103.140"},{"key":"US-CO-077","name":"Mesa","lat":"39.126","lon":"-107.834"},{"key":"US-CO-079","name":"Mineral","lat":"37.878","lon":"-106.944"},{"key":"US-CO-081","name":"Moffat","lat":"40.525","lon":"-107.993"},{"key":"US-CO-083","name":"Montezuma","lat":"37.322","lon":"-108.259"},{"key":"US-CO-085","name":"Montrose","lat":"38.317","lon":"-108.140"},{"key":"US-CO-087","name":"Morgan","lat":"40.270","lon":"-103.856"},{"key":"US-CO-089","name":"Otero","lat":"38.065","lon":"-103.807"},{"key":"US-CO-091","name":"Ouray","lat":"38.072","lon":"-107.699"},{"key":"US-CO-093","name":"Park","lat":"39.142","lon":"-105.977"},{"key":"US-CO-095","name":"Phillips","lat":"40.624","lon":"-102.377"},{"key":"US-CO-097","name":"Pitkin","lat":"39.161","lon":"-106.893"},{"key":"US-CO-099","name":"Prowers","lat":"37.976","lon":"-102.341"},{"key":"US-CO-101","name":"Pueblo","lat":"38.153","lon":"-104.633"},{"key":"US-CO-103","name":"Rio Blanco","lat":"39.983","lon":"-107.936"},{"key":"US-CO-105","name":"Rio Grande","lat":"37.619","lon":"-106.309"},{"key":"US-CO-107","name":"Routt","lat":"40.670","lon":"-106.767"},{"key":"US-CO-109","name":"Saguache","lat":"38.078","lon":"-105.966"},{"key":"US-CO-111","name":"San Juan","lat":"37.822","lon":"-107.705"},{"key":"US-CO-113","name":"San Miguel","lat":"37.908","lon":"-108.028"},{"key":"US-CO-115","name":"Sedgwick","lat":"40.899","lon":"-102.371"},{"key":"US-CO-117","name":"Summit","lat":"39.625","lon":"-106.105"},{"key":"US-CO-119","name":"Teller","lat":"38.887","lon":"-105.094"},{"key":"US-CO-121","name":"Washington","lat":"40.082","lon":"-103.231"},{"key":"US-CO-123","name":"Weld","lat":"40.346","lon":"-104.621"},{"key":"US-CO-125","name":"Yuma","lat":"40.006","lon":"-102.409"}]},"US-CT":{"key":"US-CT","name":"Connecticut","lon":"-72.758","lat":"41.501","counties":[{"key":"US-CT-001","name":"Fairfield","lat":"41.272","lon":"-73.387"},{"key":"US-CT-003","name":"Hartford","lat":"41.778","lon":"-72.721"},{"key":"US-CT-005","name":"Litchfield","lat":"41.672","lon":"-73.236"},{"key":"US-CT-007","name":"Middlesex","lat":"41.405","lon":"-72.548"},{"key":"US-CT-009","name":"New Haven","lat":"41.367","lon":"-72.898"},{"key":"US-CT-011","name":"New London","lat":"41.479","lon":"-72.192"},{"key":"US-CT-013","name":"Tolland","lat":"41.768","lon":"-72.322"},{"key":"US-CT-015","name":"Windham","lat":"41.785","lon":"-72.075"}]},"US-DC":{"key":"US-DC","name":"District of Columbia","lon":"-77.015","lat":"38.894","counties":[{"key":"US-DC-001","name":"District of Columbia","lat":"38.897","lon":"-77.019"}]},"US-DE":{"key":"US-DE","name":"Delaware","lon":"-75.387","lat":"39.145","counties":[{"key":"US-DE-001","name":"Kent","lat":"39.137","lon":"-75.500"},{"key":"US-DE-003","name":"New Castle","lat":"39.567","lon":"-75.595"},{"key":"US-DE-005","name":"Sussex","lat":"38.729","lon":"-75.349"}]},"US-FL":{"key":"US-FL","name":"Florida","lon":"-83.805","lat":"27.699","counties":[{"key":"US-FL-001","name":"Alachua","lat":"29.694","lon":"-82.323"},{"key":"US-FL-003","name":"Baker","lat":"30.369","lon":"-82.252"},{"key":"US-FL-005","name":"Bay","lat":"30.272","lon":"-85.700"},{"key":"US-FL-007","name":"Bradford","lat":"29.914","lon":"-82.240"},{"key":"US-FL-009","name":"Brevard","lat":"28.411","lon":"-80.797"},{"key":"US-FL-011","name":"Broward","lat":"26.129","lon":"-80.225"},{"key":"US-FL-013","name":"Calhoun","lat":"30.398","lon":"-85.083"},{"key":"US-FL-015","name":"Charlotte","lat":"26.909","lon":"-82.122"},{"key":"US-FL-017","name":"Citrus","lat":"28.925","lon":"-82.437"},{"key":"US-FL-019","name":"Clay","lat":"29.957","lon":"-81.821"},{"key":"US-FL-021","name":"Collier","lat":"26.099","lon":"-81.616"},{"key":"US-FL-023","name":"Columbia","lat":"30.176","lon":"-82.663"},{"key":"US-FL-027","name":"DeSoto","lat":"27.156","lon":"-81.837"},{"key":"US-FL-029","name":"Dixie","lat":"29.584","lon":"-83.086"},{"key":"US-FL-031","name":"Duval","lat":"30.428","lon":"-81.625"},{"key":"US-FL-033","name":"Escambia","lat":"30.665","lon":"-87.324"},{"key":"US-FL-035","name":"Flagler","lat":"29.511","lon":"-81.287"},{"key":"US-FL-037","name":"Franklin","lat":"29.839","lon":"-84.846"},{"key":"US-FL-039","name":"Gadsden","lat":"30.546","lon":"-84.473"},{"key":"US-FL-041","name":"Gilchrist","lat":"29.783","lon":"-82.843"},{"key":"US-FL-043","name":"Glades","lat":"27.048","lon":"-81.076"},{"key":"US-FL-045","name":"Gulf","lat":"29.926","lon":"-85.204"},{"key":"US-FL-047","name":"Hamilton","lat":"30.446","lon":"-82.938"},{"key":"US-FL-049","name":"Hardee","lat":"27.507","lon":"-81.730"},{"key":"US-FL-051","name":"Hendry","lat":"26.640","lon":"-81.228"},{"key":"US-FL-053","name":"Hernando","lat":"28.553","lon":"-82.374"},{"key":"US-FL-055","name":"Highlands","lat":"27.395","lon":"-81.148"},{"key":"US-FL-057","name":"Hillsborough","lat":"27.911","lon":"-82.423"},{"key":"US-FL-059","name":"Holmes","lat":"30.823","lon":"-85.716"},{"key":"US-FL-061","name":"Indian River","lat":"27.688","lon":"-80.499"},{"key":"US-FL-063","name":"Jackson","lat":"30.817","lon":"-85.196"},{"key":"US-FL-065","name":"Jefferson","lat":"30.358","lon":"-83.866"},{"key":"US-FL-067","name":"Lafayette","lat":"30.031","lon":"-83.078"},{"key":"US-FL-069","name":"Lake","lat":"28.910","lon":"-81.578"},{"key":"US-FL-071","name":"Lee","lat":"26.563","lon":"-82.033"},{"key":"US-FL-073","name":"Leon","lat":"30.500","lon":"-84.394"},{"key":"US-FL-075","name":"Levy","lat":"29.282","lon":"-82.844"},{"key":"US-FL-077","name":"Liberty","lat":"30.221","lon":"-84.878"},{"key":"US-FL-079","name":"Madison","lat":"30.444","lon":"-83.459"},{"key":"US-FL-081","name":"Manatee","lat":"27.478","lon":"-82.548"},{"key":"US-FL-083","name":"Marion","lat":"29.283","lon":"-82.120"},{"key":"US-FL-085","name":"Martin","lat":"27.087","lon":"-80.268"},{"key":"US-FL-086","name":"Miami-Dade","lat":"25.516","lon":"-80.390"},{"key":"US-FL-087","name":"Monroe","lat":"24.925","lon":"-80.929"},{"key":"US-FL-089","name":"Nassau","lat":"30.617","lon":"-81.734"},{"key":"US-FL-091","name":"Okaloosa","lat":"30.651","lon":"-86.566"},{"key":"US-FL-093","name":"Okeechobee","lat":"27.372","lon":"-81.041"},{"key":"US-FL-095","name":"Orange","lat":"28.549","lon":"-81.190"},{"key":"US-FL-097","name":"Osceola","lat":"27.978","lon":"-81.293"},{"key":"US-FL-099","name":"Palm Beach","lat":"26.616","lon":"-80.217"},{"key":"US-FL-101","name":"Pasco","lat":"28.273","lon":"-82.594"},{"key":"US-FL-103","name":"Pinellas","lat":"27.933","lon":"-82.741"},{"key":"US-FL-105","name":"Polk","lat":"27.967","lon":"-81.486"},{"key":"US-FL-107","name":"Putnam","lat":"29.550","lon":"-81.773"},{"key":"US-FL-109","name":"St. Johns","lat":"29.879","lon":"-81.431"},{"key":"US-FL-111","name":"St. Lucie","lat":"27.375","lon":"-80.375"},{"key":"US-FL-113","name":"Santa Rosa","lat":"30.710","lon":"-87.193"},{"key":"US-FL-115","name":"Sarasota","lat":"27.187","lon":"-82.392"},{"key":"US-FL-117","name":"Seminole","lat":"28.741","lon":"-81.249"},{"key":"US-FL-119","name":"Sumter","lat":"28.690","lon":"-82.140"},{"key":"US-FL-121","name":"Suwannee","lat":"30.203","lon":"-83.010"},{"key":"US-FL-123","name":"Taylor","lat":"30.039","lon":"-83.698"},{"key":"US-FL-125","name":"Union","lat":"30.010","lon":"-82.389"},{"key":"US-FL-127","name":"Volusia","lat":"29.010","lon":"-81.265"},{"key":"US-FL-129","name":"Wakulla","lat":"30.114","lon":"-84.534"},{"key":"US-FL-131","name":"Walton","lat":"30.570","lon":"-86.010"},{"key":"US-FL-133","name":"Washington","lat":"30.589","lon":"-85.816"}]},"US-GA":{"key":"US-GA","name":"Georgia","lon":"-83.178","lat":"32.678","counties":[{"key":"US-GA-001","name":"Appling","lat":"31.791","lon":"-82.276"},{"key":"US-GA-003","name":"Atkinson","lat":"31.301","lon":"-82.967"},{"key":"US-GA-005","name":"Bacon","lat":"31.595","lon":"-82.399"},{"key":"US-GA-007","name":"Baker","lat":"31.296","lon":"-84.377"},{"key":"US-GA-009","name":"Baldwin","lat":"33.063","lon":"-83.180"},{"key":"US-GA-011","name":"Banks","lat":"34.332","lon":"-83.519"},{"key":"US-GA-013","name":"Barrow","lat":"34.010","lon":"-83.728"},{"key":"US-GA-015","name":"Bartow","lat":"34.230","lon":"-84.856"},{"key":"US-GA-017","name":"Ben Hill","lat":"31.791","lon":"-83.209"},{"key":"US-GA-019","name":"Berrien","lat":"31.250","lon":"-83.199"},{"key":"US-GA-021","name":"Bibb","lat":"32.767","lon":"-83.693"},{"key":"US-GA-023","name":"Bleckley","lat":"32.418","lon":"-83.364"},{"key":"US-GA-025","name":"Brantley","lat":"31.227","lon":"-82.059"},{"key":"US-GA-027","name":"Brooks","lat":"30.865","lon":"-83.450"},{"key":"US-GA-029","name":"Bryan","lat":"31.984","lon":"-81.419"},{"key":"US-GA-031","name":"Bulloch","lat":"32.417","lon":"-81.690"},{"key":"US-GA-033","name":"Burke","lat":"33.067","lon":"-81.986"},{"key":"US-GA-035","name":"Butts","lat":"33.306","lon":"-83.921"},{"key":"US-GA-037","name":"Calhoun","lat":"31.526","lon":"-84.580"},{"key":"US-GA-039","name":"Camden","lat":"30.960","lon":"-81.718"},{"key":"US-GA-043","name":"Candler","lat":"32.399","lon":"-82.027"},{"key":"US-GA-045","name":"Carroll","lat":"33.571","lon":"-84.979"},{"key":"US-GA-047","name":"Catoosa","lat":"34.899","lon":"-85.142"},{"key":"US-GA-049","name":"Charlton","lat":"30.766","lon":"-82.012"},{"key":"US-GA-051","name":"Chatham","lat":"31.972","lon":"-81.172"},{"key":"US-GA-053","name":"Chattahoochee","lat":"32.409","lon":"-84.818"},{"key":"US-GA-055","name":"Chattooga","lat":"34.448","lon":"-85.293"},{"key":"US-GA-057","name":"Cherokee","lat":"34.176","lon":"-84.452"},{"key":"US-GA-059","name":"Clarke","lat":"33.940","lon":"-83.366"},{"key":"US-GA-061","name":"Clay","lat":"31.606","lon":"-85.010"},{"key":"US-GA-063","name":"Clayton","lat":"33.522","lon":"-84.365"},{"key":"US-GA-065","name":"Clinch","lat":"30.798","lon":"-82.668"},{"key":"US-GA-067","name":"Cobb","lat":"33.931","lon":"-84.536"},{"key":"US-GA-069","name":"Coffee","lat":"31.652","lon":"-82.934"},{"key":"US-GA-071","name":"Colquitt","lat":"31.186","lon":"-83.640"},{"key":"US-GA-073","name":"Columbia","lat":"33.576","lon":"-82.294"},{"key":"US-GA-075","name":"Cook","lat":"31.162","lon":"-83.443"},{"key":"US-GA-077","name":"Coweta","lat":"33.361","lon":"-84.693"},{"key":"US-GA-079","name":"Crawford","lat":"32.672","lon":"-83.963"},{"key":"US-GA-081","name":"Crisp","lat":"31.908","lon":"-83.872"},{"key":"US-GA-083","name":"Dade","lat":"34.850","lon":"-85.483"},{"key":"US-GA-085","name":"Dawson","lat":"34.483","lon":"-84.152"},{"key":"US-GA-087","name":"Decatur","lat":"30.840","lon":"-84.712"},{"key":"US-GA-089","name":"DeKalb","lat":"33.800","lon":"-84.239"},{"key":"US-GA-091","name":"Dodge","lat":"32.074","lon":"-83.235"},{"key":"US-GA-093","name":"Dooly","lat":"32.169","lon":"-83.911"},{"key":"US-GA-095","name":"Dougherty","lat":"31.552","lon":"-84.245"},{"key":"US-GA-097","name":"Douglas","lat":"33.717","lon":"-84.728"},{"key":"US-GA-099","name":"Early","lat":"31.337","lon":"-84.945"},{"key":"US-GA-101","name":"Echols","lat":"30.745","lon":"-82.838"},{"key":"US-GA-103","name":"Effingham","lat":"32.324","lon":"-81.386"},{"key":"US-GA-105","name":"Elbert","lat":"34.083","lon":"-82.824"},{"key":"US-GA-107","name":"Emanuel","lat":"32.616","lon":"-82.366"},{"key":"US-GA-109","name":"Evans","lat":"32.181","lon":"-81.831"},{"key":"US-GA-111","name":"Fannin","lat":"34.833","lon":"-84.221"},{"key":"US-GA-113","name":"Fayette","lat":"33.386","lon":"-84.480"},{"key":"US-GA-115","name":"Floyd","lat":"34.359","lon":"-85.196"},{"key":"US-GA-117","name":"Forsyth","lat":"34.184","lon":"-84.078"},{"key":"US-GA-119","name":"Franklin","lat":"34.337","lon":"-83.237"},{"key":"US-GA-121","name":"Fulton","lat":"33.858","lon":"-84.416"},{"key":"US-GA-123","name":"Gilmer","lat":"34.686","lon":"-84.420"},{"key":"US-GA-125","name":"Glascock","lat":"33.202","lon":"-82.662"},{"key":"US-GA-127","name":"Glynn","lat":"31.241","lon":"-81.532"},{"key":"US-GA-129","name":"Gordon","lat":"34.512","lon":"-84.901"},{"key":"US-GA-131","name":"Grady","lat":"30.900","lon":"-84.146"},{"key":"US-GA-133","name":"Greene","lat":"33.559","lon":"-83.221"},{"key":"US-GA-135","name":"Gwinnett","lat":"33.973","lon":"-84.065"},{"key":"US-GA-137","name":"Habersham","lat":"34.679","lon":"-83.562"},{"key":"US-GA-139","name":"Hall","lat":"34.302","lon":"-83.873"},{"key":"US-GA-141","name":"Hancock","lat":"33.271","lon":"-82.976"},{"key":"US-GA-143","name":"Haralson","lat":"33.779","lon":"-85.174"},{"key":"US-GA-145","name":"Harris","lat":"32.746","lon":"-84.988"},{"key":"US-GA-147","name":"Hart","lat":"34.358","lon":"-82.935"},{"key":"US-GA-149","name":"Heard","lat":"33.266","lon":"-85.092"},{"key":"US-GA-151","name":"Henry","lat":"33.474","lon":"-84.107"},{"key":"US-GA-153","name":"Houston","lat":"32.545","lon":"-83.598"},{"key":"US-GA-155","name":"Irwin","lat":"31.606","lon":"-83.297"},{"key":"US-GA-157","name":"Jackson","lat":"34.100","lon":"-83.597"},{"key":"US-GA-159","name":"Jasper","lat":"33.330","lon":"-83.784"},{"key":"US-GA-161","name":"Jeff Davis","lat":"31.880","lon":"-82.653"},{"key":"US-GA-163","name":"Jefferson","lat":"33.040","lon":"-82.475"},{"key":"US-GA-165","name":"Jenkins","lat":"32.837","lon":"-81.884"},{"key":"US-GA-167","name":"Johnson","lat":"32.671","lon":"-82.641"},{"key":"US-GA-169","name":"Jones","lat":"33.008","lon":"-83.656"},{"key":"US-GA-171","name":"Lamar","lat":"33.087","lon":"-84.164"},{"key":"US-GA-173","name":"Lanier","lat":"30.975","lon":"-83.045"},{"key":"US-GA-175","name":"Laurens","lat":"32.413","lon":"-82.787"},{"key":"US-GA-177","name":"Lee","lat":"31.784","lon":"-84.118"},{"key":"US-GA-179","name":"Liberty","lat":"31.851","lon":"-81.479"},{"key":"US-GA-181","name":"Lincoln","lat":"33.786","lon":"-82.438"},{"key":"US-GA-183","name":"Long","lat":"31.757","lon":"-81.808"},{"key":"US-GA-185","name":"Lowndes","lat":"30.846","lon":"-83.329"},{"key":"US-GA-187","name":"Lumpkin","lat":"34.615","lon":"-83.977"},{"key":"US-GA-189","name":"McDuffie","lat":"33.527","lon":"-82.480"},{"key":"US-GA-191","name":"McIntosh","lat":"31.482","lon":"-81.437"},{"key":"US-GA-193","name":"Macon","lat":"32.327","lon":"-84.009"},{"key":"US-GA-195","name":"Madison","lat":"34.124","lon":"-83.189"},{"key":"US-GA-197","name":"Marion","lat":"32.397","lon":"-84.537"},{"key":"US-GA-199","name":"Meriwether","lat":"33.062","lon":"-84.593"},{"key":"US-GA-201","name":"Miller","lat":"31.186","lon":"-84.721"},{"key":"US-GA-205","name":"Mitchell","lat":"31.259","lon":"-84.288"},{"key":"US-GA-207","name":"Monroe","lat":"33.047","lon":"-83.831"},{"key":"US-GA-209","name":"Montgomery","lat":"32.120","lon":"-82.587"},{"key":"US-GA-211","name":"Morgan","lat":"33.655","lon":"-83.418"},{"key":"US-GA-213","name":"Murray","lat":"34.775","lon":"-84.800"},{"key":"US-GA-215","name":"Muscogee","lat":"32.462","lon":"-84.850"},{"key":"US-GA-217","name":"Newton","lat":"33.519","lon":"-83.885"},{"key":"US-GA-219","name":"Oconee","lat":"33.840","lon":"-83.455"},{"key":"US-GA-221","name":"Oglethorpe","lat":"33.934","lon":"-83.000"},{"key":"US-GA-223","name":"Paulding","lat":"33.911","lon":"-84.838"},{"key":"US-GA-225","name":"Peach","lat":"32.552","lon":"-83.824"},{"key":"US-GA-227","name":"Pickens","lat":"34.479","lon":"-84.463"},{"key":"US-GA-229","name":"Pierce","lat":"31.304","lon":"-82.165"},{"key":"US-GA-231","name":"Pike","lat":"33.086","lon":"-84.463"},{"key":"US-GA-233","name":"Polk","lat":"34.017","lon":"-85.144"},{"key":"US-GA-235","name":"Pulaski","lat":"32.219","lon":"-83.457"},{"key":"US-GA-237","name":"Putnam","lat":"33.293","lon":"-83.277"},{"key":"US-GA-239","name":"Quitman","lat":"31.895","lon":"-85.071"},{"key":"US-GA-241","name":"Rabun","lat":"34.837","lon":"-83.434"},{"key":"US-GA-243","name":"Randolph","lat":"31.711","lon":"-84.645"},{"key":"US-GA-245","name":"Richmond","lat":"33.336","lon":"-82.028"},{"key":"US-GA-247","name":"Rockdale","lat":"33.631","lon":"-84.049"},{"key":"US-GA-249","name":"Schley","lat":"32.276","lon":"-84.333"},{"key":"US-GA-251","name":"Screven","lat":"32.676","lon":"-81.595"},{"key":"US-GA-253","name":"Seminole","lat":"30.866","lon":"-84.887"},{"key":"US-GA-255","name":"Spalding","lat":"33.260","lon":"-84.358"},{"key":"US-GA-257","name":"Stephens","lat":"34.579","lon":"-83.268"},{"key":"US-GA-259","name":"Stewart","lat":"32.079","lon":"-84.900"},{"key":"US-GA-261","name":"Sumter","lat":"32.040","lon":"-84.134"},{"key":"US-GA-263","name":"Talbot","lat":"32.692","lon":"-84.505"},{"key":"US-GA-265","name":"Taliaferro","lat":"33.566","lon":"-82.829"},{"key":"US-GA-267","name":"Tattnall","lat":"31.999","lon":"-82.067"},{"key":"US-GA-269","name":"Taylor","lat":"32.593","lon":"-84.170"},{"key":"US-GA-271","name":"Telfair","lat":"31.889","lon":"-82.901"},{"key":"US-GA-273","name":"Terrell","lat":"31.810","lon":"-84.408"},{"key":"US-GA-275","name":"Thomas","lat":"30.900","lon":"-84.008"},{"key":"US-GA-277","name":"Tift","lat":"31.469","lon":"-83.469"},{"key":"US-GA-279","name":"Toombs","lat":"32.127","lon":"-82.306"},{"key":"US-GA-281","name":"Towns","lat":"34.889","lon":"-83.737"},{"key":"US-GA-283","name":"Treutlen","lat":"32.396","lon":"-82.626"},{"key":"US-GA-285","name":"Troup","lat":"33.058","lon":"-85.021"},{"key":"US-GA-287","name":"Turner","lat":"31.702","lon":"-83.584"},{"key":"US-GA-289","name":"Twiggs","lat":"32.609","lon":"-83.531"},{"key":"US-GA-291","name":"Union","lat":"34.803","lon":"-84.001"},{"key":"US-GA-293","name":"Upson","lat":"32.844","lon":"-84.370"},{"key":"US-GA-295","name":"Walker","lat":"34.790","lon":"-85.273"},{"key":"US-GA-297","name":"Walton","lat":"33.835","lon":"-83.684"},{"key":"US-GA-299","name":"Ware","lat":"31.154","lon":"-82.436"},{"key":"US-GA-301","name":"Warren","lat":"33.411","lon":"-82.693"},{"key":"US-GA-303","name":"Washington","lat":"33.003","lon":"-82.841"},{"key":"US-GA-305","name":"Wayne","lat":"31.609","lon":"-81.877"},{"key":"US-GA-307","name":"Webster","lat":"32.092","lon":"-84.582"},{"key":"US-GA-309","name":"Wheeler","lat":"32.096","lon":"-82.682"},{"key":"US-GA-311","name":"White","lat":"34.659","lon":"-83.727"},{"key":"US-GA-313","name":"Whitfield","lat":"34.806","lon":"-84.913"},{"key":"US-GA-315","name":"Wilcox","lat":"31.983","lon":"-83.300"},{"key":"US-GA-317","name":"Wilkes","lat":"33.750","lon":"-82.718"},{"key":"US-GA-319","name":"Wilkinson","lat":"32.881","lon":"-83.073"},{"key":"US-GA-321","name":"Worth","lat":"31.683","lon":"-83.880"}]},"US-HI":{"key":"US-HI","name":"Hawaii","lon":"-166.600","lat":"23.691","counties":[{"key":"US-HI-001","name":"Hawaii","lat":"19.662","lon":"-155.519"},{"key":"US-HI-003","name":"Honolulu","lat":"22.419","lon":"-160.871"},{"key":"US-HI-005","name":"Kalawao","lat":"21.166","lon":"-156.954"},{"key":"US-HI-007","name":"Kauai","lat":"22.010","lon":"-159.717"},{"key":"US-HI-009","name":"Maui","lat":"20.911","lon":"-156.657"}]},"US-IA":{"key":"US-IA","name":"Iowa","lon":"-93.390","lat":"41.938","counties":[{"key":"US-IA-001","name":"Adair","lat":"41.372","lon":"-94.474"},{"key":"US-IA-003","name":"Adams","lat":"41.026","lon":"-94.700"},{"key":"US-IA-005","name":"Allamakee","lat":"43.304","lon":"-91.302"},{"key":"US-IA-007","name":"Appanoose","lat":"40.729","lon":"-92.824"},{"key":"US-IA-009","name":"Audubon","lat":"41.654","lon":"-94.861"},{"key":"US-IA-011","name":"Benton","lat":"42.053","lon":"-92.056"},{"key":"US-IA-013","name":"Black Hawk","lat":"42.501","lon":"-92.315"},{"key":"US-IA-015","name":"Boone","lat":"42.005","lon":"-93.892"},{"key":"US-IA-017","name":"Bremer","lat":"42.780","lon":"-92.300"},{"key":"US-IA-019","name":"Buchanan","lat":"42.486","lon":"-91.872"},{"key":"US-IA-021","name":"Buena Vista","lat":"42.722","lon":"-95.156"},{"key":"US-IA-023","name":"Butler","lat":"42.719","lon":"-92.793"},{"key":"US-IA-025","name":"Calhoun","lat":"42.399","lon":"-94.678"},{"key":"US-IA-027","name":"Carroll","lat":"41.991","lon":"-94.843"},{"key":"US-IA-029","name":"Cass","lat":"41.336","lon":"-94.944"},{"key":"US-IA-031","name":"Cedar","lat":"41.740","lon":"-91.121"},{"key":"US-IA-033","name":"Cerro Gordo","lat":"43.091","lon":"-93.227"},{"key":"US-IA-035","name":"Cherokee","lat":"42.713","lon":"-95.616"},{"key":"US-IA-037","name":"Chickasaw","lat":"43.054","lon":"-92.287"},{"key":"US-IA-039","name":"Clarke","lat":"41.023","lon":"-93.764"},{"key":"US-IA-041","name":"Clay","lat":"43.078","lon":"-95.155"},{"key":"US-IA-043","name":"Clayton","lat":"42.841","lon":"-91.219"},{"key":"US-IA-045","name":"Clinton","lat":"41.818","lon":"-90.493"},{"key":"US-IA-047","name":"Crawford","lat":"42.023","lon":"-95.417"},{"key":"US-IA-049","name":"Dallas","lat":"41.669","lon":"-93.975"},{"key":"US-IA-051","name":"Davis","lat":"40.736","lon":"-92.418"},{"key":"US-IA-053","name":"Decatur","lat":"40.682","lon":"-93.797"},{"key":"US-IA-055","name":"Delaware","lat":"42.456","lon":"-91.344"},{"key":"US-IA-057","name":"Des Moines","lat":"40.839","lon":"-91.175"},{"key":"US-IA-059","name":"Dickinson","lat":"43.431","lon":"-95.147"},{"key":"US-IA-061","name":"Dubuque","lat":"42.457","lon":"-90.796"},{"key":"US-IA-063","name":"Emmet","lat":"43.387","lon":"-94.685"},{"key":"US-IA-065","name":"Fayette","lat":"42.860","lon":"-91.849"},{"key":"US-IA-067","name":"Floyd","lat":"43.062","lon":"-92.832"},{"key":"US-IA-069","name":"Franklin","lat":"42.715","lon":"-93.265"},{"key":"US-IA-071","name":"Fremont","lat":"40.746","lon":"-95.704"},{"key":"US-IA-073","name":"Greene","lat":"42.024","lon":"-94.374"},{"key":"US-IA-075","name":"Grundy","lat":"42.399","lon":"-92.798"},{"key":"US-IA-077","name":"Guthrie","lat":"41.658","lon":"-94.509"},{"key":"US-IA-079","name":"Hamilton","lat":"42.389","lon":"-93.757"},{"key":"US-IA-081","name":"Hancock","lat":"43.081","lon":"-93.737"},{"key":"US-IA-083","name":"Hardin","lat":"42.372","lon":"-93.239"},{"key":"US-IA-085","name":"Harrison","lat":"41.667","lon":"-95.959"},{"key":"US-IA-087","name":"Henry","lat":"40.976","lon":"-91.584"},{"key":"US-IA-089","name":"Howard","lat":"43.365","lon":"-92.272"},{"key":"US-IA-091","name":"Humboldt","lat":"42.785","lon":"-94.213"},{"key":"US-IA-093","name":"Ida","lat":"42.350","lon":"-95.556"},{"key":"US-IA-095","name":"Iowa","lat":"41.691","lon":"-92.082"},{"key":"US-IA-097","name":"Jackson","lat":"42.186","lon":"-90.474"},{"key":"US-IA-099","name":"Jasper","lat":"41.671","lon":"-93.069"},{"key":"US-IA-101","name":"Jefferson","lat":"41.035","lon":"-91.886"},{"key":"US-IA-103","name":"Johnson","lat":"41.610","lon":"-91.554"},{"key":"US-IA-105","name":"Jones","lat":"42.148","lon":"-91.163"},{"key":"US-IA-107","name":"Keokuk","lat":"41.348","lon":"-92.181"},{"key":"US-IA-109","name":"Kossuth","lat":"43.165","lon":"-94.234"},{"key":"US-IA-111","name":"Lee","lat":"40.591","lon":"-91.407"},{"key":"US-IA-113","name":"Linn","lat":"42.059","lon":"-91.596"},{"key":"US-IA-115","name":"Louisa","lat":"41.217","lon":"-91.198"},{"key":"US-IA-117","name":"Lucas","lat":"41.009","lon":"-93.371"},{"key":"US-IA-119","name":"Lyon","lat":"43.362","lon":"-96.416"},{"key":"US-IA-121","name":"Madison","lat":"41.365","lon":"-93.992"},{"key":"US-IA-123","name":"Mahaska","lat":"41.323","lon":"-92.625"},{"key":"US-IA-125","name":"Marion","lat":"41.371","lon":"-93.081"},{"key":"US-IA-127","name":"Marshall","lat":"42.034","lon":"-92.968"},{"key":"US-IA-129","name":"Mills","lat":"41.035","lon":"-95.712"},{"key":"US-IA-131","name":"Mitchell","lat":"43.363","lon":"-92.781"},{"key":"US-IA-133","name":"Monona","lat":"42.038","lon":"-96.117"},{"key":"US-IA-135","name":"Monroe","lat":"41.016","lon":"-92.835"},{"key":"US-IA-137","name":"Montgomery","lat":"41.029","lon":"-95.181"},{"key":"US-IA-139","name":"Muscatine","lat":"41.481","lon":"-91.012"},{"key":"US-IA-141","name":"O'Brien","lat":"43.084","lon":"-95.610"},{"key":"US-IA-143","name":"Osceola","lat":"43.403","lon":"-95.586"},{"key":"US-IA-145","name":"Page","lat":"40.714","lon":"-95.131"},{"key":"US-IA-147","name":"Palo Alto","lat":"43.072","lon":"-94.637"},{"key":"US-IA-149","name":"Plymouth","lat":"42.726","lon":"-96.465"},{"key":"US-IA-151","name":"Pocahontas","lat":"42.751","lon":"-94.641"},{"key":"US-IA-153","name":"Polk","lat":"41.598","lon":"-93.551"},{"key":"US-IA-155","name":"Pottawattamie","lat":"41.326","lon":"-95.746"},{"key":"US-IA-157","name":"Poweshiek","lat":"41.689","lon":"-92.519"},{"key":"US-IA-159","name":"Ringgold","lat":"40.715","lon":"-94.254"},{"key":"US-IA-161","name":"Sac","lat":"42.395","lon":"-95.117"},{"key":"US-IA-163","name":"Scott","lat":"41.685","lon":"-90.563"},{"key":"US-IA-165","name":"Shelby","lat":"41.700","lon":"-95.344"},{"key":"US-IA-167","name":"Sioux","lat":"43.090","lon":"-96.384"},{"key":"US-IA-169","name":"Story","lat":"42.029","lon":"-93.508"},{"key":"US-IA-171","name":"Tama","lat":"42.042","lon":"-92.563"},{"key":"US-IA-173","name":"Taylor","lat":"40.714","lon":"-94.719"},{"key":"US-IA-175","name":"Union","lat":"40.998","lon":"-94.257"},{"key":"US-IA-177","name":"Van Buren","lat":"40.735","lon":"-91.965"},{"key":"US-IA-179","name":"Wapello","lat":"41.034","lon":"-92.435"},{"key":"US-IA-181","name":"Warren","lat":"41.443","lon":"-93.512"},{"key":"US-IA-183","name":"Washington","lat":"41.376","lon":"-91.637"},{"key":"US-IA-185","name":"Wayne","lat":"40.730","lon":"-93.338"},{"key":"US-IA-187","name":"Webster","lat":"42.442","lon":"-94.192"},{"key":"US-IA-189","name":"Winnebago","lat":"43.389","lon":"-93.701"},{"key":"US-IA-191","name":"Winneshiek","lat":"43.331","lon":"-91.806"},{"key":"US-IA-193","name":"Woodbury","lat":"42.399","lon":"-96.190"},{"key":"US-IA-195","name":"Worth","lat":"43.378","lon":"-93.296"},{"key":"US-IA-197","name":"Wright","lat":"42.731","lon":"-93.762"}]},"US-ID":{"key":"US-ID","name":"Idaho","lon":"-114.143","lat":"45.495","counties":[{"key":"US-ID-001","name":"Ada","lat":"43.423","lon":"-116.348"},{"key":"US-ID-003","name":"Adams","lat":"44.867","lon":"-116.298"},{"key":"US-ID-005","name":"Bannock","lat":"42.749","lon":"-112.349"},{"key":"US-ID-007","name":"Bear Lake","lat":"42.369","lon":"-111.436"},{"key":"US-ID-009","name":"Benewah","lat":"47.171","lon":"-116.780"},{"key":"US-ID-011","name":"Bingham","lat":"43.108","lon":"-112.473"},{"key":"US-ID-013","name":"Blaine","lat":"43.615","lon":"-114.313"},{"key":"US-ID-015","name":"Boise","lat":"43.975","lon":"-115.436"},{"key":"US-ID-017","name":"Bonner","lat":"48.160","lon":"-116.466"},{"key":"US-ID-019","name":"Bonneville","lat":"43.445","lon":"-111.475"},{"key":"US-ID-021","name":"Boundary","lat":"48.742","lon":"-116.566"},{"key":"US-ID-023","name":"Butte","lat":"43.716","lon":"-113.496"},{"key":"US-ID-025","name":"Camas","lat":"43.627","lon":"-114.763"},{"key":"US-ID-027","name":"Canyon","lat":"43.572","lon":"-116.732"},{"key":"US-ID-029","name":"Caribou","lat":"42.664","lon":"-111.655"},{"key":"US-ID-031","name":"Cassia","lat":"42.493","lon":"-113.627"},{"key":"US-ID-033","name":"Clark","lat":"44.417","lon":"-112.251"},{"key":"US-ID-035","name":"Clearwater","lat":"46.451","lon":"-115.780"},{"key":"US-ID-037","name":"Custer","lat":"44.310","lon":"-114.366"},{"key":"US-ID-039","name":"Elmore","lat":"43.591","lon":"-115.502"},{"key":"US-ID-041","name":"Franklin","lat":"42.231","lon":"-111.682"},{"key":"US-ID-043","name":"Fremont","lat":"44.111","lon":"-111.403"},{"key":"US-ID-045","name":"Gem","lat":"44.257","lon":"-116.338"},{"key":"US-ID-047","name":"Gooding","lat":"42.808","lon":"-114.856"},{"key":"US-ID-049","name":"Idaho","lat":"45.882","lon":"-115.745"},{"key":"US-ID-051","name":"Jefferson","lat":"43.728","lon":"-111.939"},{"key":"US-ID-053","name":"Jerome","lat":"42.598","lon":"-114.259"},{"key":"US-ID-055","name":"Kootenai","lat":"47.659","lon":"-116.781"},{"key":"US-ID-057","name":"Latah","lat":"46.847","lon":"-116.790"},{"key":"US-ID-059","name":"Lemhi","lat":"44.868","lon":"-114.210"},{"key":"US-ID-061","name":"Lewis","lat":"46.244","lon":"-116.375"},{"key":"US-ID-063","name":"Lincoln","lat":"42.948","lon":"-114.085"},{"key":"US-ID-065","name":"Madison","lat":"43.798","lon":"-111.719"},{"key":"US-ID-067","name":"Minidoka","lat":"42.645","lon":"-113.705"},{"key":"US-ID-069","name":"Nez Perce","lat":"46.306","lon":"-116.684"},{"key":"US-ID-071","name":"Oneida","lat":"42.308","lon":"-112.329"},{"key":"US-ID-073","name":"Owyhee","lat":"43.071","lon":"-116.262"},{"key":"US-ID-075","name":"Payette","lat":"43.977","lon":"-116.848"},{"key":"US-ID-077","name":"Power","lat":"42.840","lon":"-112.709"},{"key":"US-ID-079","name":"Shoshone","lat":"47.610","lon":"-115.858"},{"key":"US-ID-081","name":"Teton","lat":"43.789","lon":"-111.200"},{"key":"US-ID-083","name":"Twin Falls","lat":"42.624","lon":"-114.597"},{"key":"US-ID-085","name":"Valley","lat":"44.731","lon":"-115.463"},{"key":"US-ID-087","name":"Washington","lat":"44.397","lon":"-116.765"}]},"US-IL":{"key":"US-IL","name":"Illinois","lon":"-89.267","lat":"39.739","counties":[{"key":"US-IL-001","name":"Adams","lat":"39.967","lon":"-91.268"},{"key":"US-IL-003","name":"Alexander","lat":"37.163","lon":"-89.281"},{"key":"US-IL-005","name":"Bond","lat":"38.925","lon":"-89.467"},{"key":"US-IL-007","name":"Boone","lat":"42.320","lon":"-88.848"},{"key":"US-IL-009","name":"Brown","lat":"39.990","lon":"-90.662"},{"key":"US-IL-011","name":"Bureau","lat":"41.364","lon":"-89.430"},{"key":"US-IL-013","name":"Calhoun","lat":"39.146","lon":"-90.655"},{"key":"US-IL-015","name":"Carroll","lat":"42.074","lon":"-90.025"},{"key":"US-IL-017","name":"Cass","lat":"40.039","lon":"-90.234"},{"key":"US-IL-019","name":"Champaign","lat":"40.108","lon":"-88.199"},{"key":"US-IL-021","name":"Christian","lat":"39.664","lon":"-89.283"},{"key":"US-IL-023","name":"Clark","lat":"39.318","lon":"-87.759"},{"key":"US-IL-025","name":"Clay","lat":"38.715","lon":"-88.367"},{"key":"US-IL-027","name":"Clinton","lat":"38.511","lon":"-89.442"},{"key":"US-IL-029","name":"Coles","lat":"39.506","lon":"-88.241"},{"key":"US-IL-031","name":"Cook","lat":"41.861","lon":"-87.846"},{"key":"US-IL-033","name":"Crawford","lat":"39.017","lon":"-87.727"},{"key":"US-IL-035","name":"Cumberland","lat":"39.259","lon":"-88.247"},{"key":"US-IL-037","name":"DeKalb","lat":"41.810","lon":"-88.738"},{"key":"US-IL-039","name":"De Witt","lat":"40.173","lon":"-88.931"},{"key":"US-IL-041","name":"Douglas","lat":"39.776","lon":"-88.241"},{"key":"US-IL-043","name":"DuPage","lat":"41.838","lon":"-88.083"},{"key":"US-IL-045","name":"Edgar","lat":"39.695","lon":"-87.739"},{"key":"US-IL-047","name":"Edwards","lat":"38.420","lon":"-87.980"},{"key":"US-IL-049","name":"Effingham","lat":"39.058","lon":"-88.579"},{"key":"US-IL-051","name":"Fayette","lat":"38.994","lon":"-88.997"},{"key":"US-IL-053","name":"Ford","lat":"40.618","lon":"-88.172"},{"key":"US-IL-055","name":"Franklin","lat":"38.016","lon":"-89.047"},{"key":"US-IL-057","name":"Fulton","lat":"40.451","lon":"-90.128"},{"key":"US-IL-059","name":"Gallatin","lat":"37.765","lon":"-88.167"},{"key":"US-IL-061","name":"Greene","lat":"39.273","lon":"-90.492"},{"key":"US-IL-063","name":"Grundy","lat":"41.312","lon":"-88.363"},{"key":"US-IL-065","name":"Hamilton","lat":"38.094","lon":"-88.536"},{"key":"US-IL-067","name":"Hancock","lat":"40.409","lon":"-91.266"},{"key":"US-IL-069","name":"Hardin","lat":"37.492","lon":"-88.222"},{"key":"US-IL-071","name":"Henderson","lat":"40.818","lon":"-90.982"},{"key":"US-IL-073","name":"Henry","lat":"41.395","lon":"-90.165"},{"key":"US-IL-075","name":"Iroquois","lat":"40.771","lon":"-87.828"},{"key":"US-IL-077","name":"Jackson","lat":"37.723","lon":"-89.450"},{"key":"US-IL-079","name":"Jasper","lat":"39.010","lon":"-88.151"},{"key":"US-IL-081","name":"Jefferson","lat":"38.320","lon":"-88.943"},{"key":"US-IL-083","name":"Jersey","lat":"39.105","lon":"-90.438"},{"key":"US-IL-085","name":"Jo Daviess","lat":"42.385","lon":"-90.294"},{"key":"US-IL-087","name":"Johnson","lat":"37.420","lon":"-88.926"},{"key":"US-IL-089","name":"Kane","lat":"41.933","lon":"-88.347"},{"key":"US-IL-091","name":"Kankakee","lat":"41.113","lon":"-87.848"},{"key":"US-IL-093","name":"Kendall","lat":"41.624","lon":"-88.395"},{"key":"US-IL-095","name":"Knox","lat":"40.911","lon":"-90.234"},{"key":"US-IL-097","name":"Lake","lat":"42.292","lon":"-87.989"},{"key":"US-IL-099","name":"LaSalle","lat":"41.319","lon":"-88.881"},{"key":"US-IL-101","name":"Lawrence","lat":"38.718","lon":"-87.693"},{"key":"US-IL-103","name":"Lee","lat":"41.786","lon":"-89.288"},{"key":"US-IL-105","name":"Livingston","lat":"40.956","lon":"-88.617"},{"key":"US-IL-107","name":"Logan","lat":"40.116","lon":"-89.392"},{"key":"US-IL-109","name":"McDonough","lat":"40.453","lon":"-90.713"},{"key":"US-IL-111","name":"McHenry","lat":"42.297","lon":"-88.320"},{"key":"US-IL-113","name":"McLean","lat":"40.518","lon":"-88.912"},{"key":"US-IL-115","name":"Macon","lat":"39.857","lon":"-88.983"},{"key":"US-IL-117","name":"Macoupin","lat":"39.227","lon":"-89.905"},{"key":"US-IL-119","name":"Madison","lat":"38.817","lon":"-90.003"},{"key":"US-IL-121","name":"Marion","lat":"38.590","lon":"-88.972"},{"key":"US-IL-123","name":"Marshall","lat":"41.023","lon":"-89.330"},{"key":"US-IL-125","name":"Mason","lat":"40.145","lon":"-90.000"},{"key":"US-IL-127","name":"Massac","lat":"37.203","lon":"-88.750"},{"key":"US-IL-129","name":"Menard","lat":"40.105","lon":"-89.806"},{"key":"US-IL-131","name":"Mercer","lat":"41.200","lon":"-90.799"},{"key":"US-IL-133","name":"Monroe","lat":"38.298","lon":"-90.104"},{"key":"US-IL-135","name":"Montgomery","lat":"39.218","lon":"-89.501"},{"key":"US-IL-137","name":"Morgan","lat":"39.733","lon":"-90.271"},{"key":"US-IL-139","name":"Moultrie","lat":"39.638","lon":"-88.616"},{"key":"US-IL-141","name":"Ogle","lat":"42.002","lon":"-89.345"},{"key":"US-IL-143","name":"Peoria","lat":"40.745","lon":"-89.697"},{"key":"US-IL-145","name":"Perry","lat":"38.068","lon":"-89.228"},{"key":"US-IL-147","name":"Piatt","lat":"39.979","lon":"-88.586"},{"key":"US-IL-149","name":"Pike","lat":"39.614","lon":"-90.870"},{"key":"US-IL-151","name":"Pope","lat":"37.316","lon":"-88.501"},{"key":"US-IL-153","name":"Pulaski","lat":"37.202","lon":"-89.186"},{"key":"US-IL-155","name":"Putnam","lat":"41.239","lon":"-89.282"},{"key":"US-IL-157","name":"Randolph","lat":"38.001","lon":"-89.872"},{"key":"US-IL-159","name":"Richland","lat":"38.684","lon":"-88.203"},{"key":"US-IL-161","name":"Rock Island","lat":"41.549","lon":"-90.447"},{"key":"US-IL-163","name":"St. Clair","lat":"38.462","lon":"-89.981"},{"key":"US-IL-165","name":"Saline","lat":"37.772","lon":"-88.556"},{"key":"US-IL-167","name":"Sangamon","lat":"39.772","lon":"-89.506"},{"key":"US-IL-169","name":"Schuyler","lat":"40.077","lon":"-90.528"},{"key":"US-IL-171","name":"Scott","lat":"39.658","lon":"-90.510"},{"key":"US-IL-173","name":"Shelby","lat":"39.403","lon":"-88.832"},{"key":"US-IL-175","name":"Stark","lat":"41.113","lon":"-89.831"},{"key":"US-IL-177","name":"Stephenson","lat":"42.364","lon":"-89.665"},{"key":"US-IL-179","name":"Tazewell","lat":"40.556","lon":"-89.593"},{"key":"US-IL-181","name":"Union","lat":"37.482","lon":"-89.322"},{"key":"US-IL-183","name":"Vermilion","lat":"40.155","lon":"-87.731"},{"key":"US-IL-185","name":"Wabash","lat":"38.411","lon":"-87.922"},{"key":"US-IL-187","name":"Warren","lat":"40.843","lon":"-90.578"},{"key":"US-IL-189","name":"Washington","lat":"38.440","lon":"-89.449"},{"key":"US-IL-191","name":"Wayne","lat":"38.420","lon":"-88.391"},{"key":"US-IL-193","name":"White","lat":"38.081","lon":"-88.142"},{"key":"US-IL-195","name":"Whiteside","lat":"41.746","lon":"-90.070"},{"key":"US-IL-197","name":"Will","lat":"41.542","lon":"-87.981"},{"key":"US-IL-199","name":"Williamson","lat":"37.748","lon":"-88.926"},{"key":"US-IL-201","name":"Winnebago","lat":"42.353","lon":"-89.114"},{"key":"US-IL-203","name":"Woodford","lat":"40.759","lon":"-89.282"}]},"US-IN":{"key":"US-IN","name":"Indiana","lon":"-86.441","lat":"39.767","counties":[{"key":"US-IN-001","name":"Adams","lat":"40.716","lon":"-84.915"},{"key":"US-IN-003","name":"Allen","lat":"41.106","lon":"-85.097"},{"key":"US-IN-005","name":"Bartholomew","lat":"39.177","lon":"-85.898"},{"key":"US-IN-007","name":"Benton","lat":"40.605","lon":"-87.283"},{"key":"US-IN-009","name":"Blackford","lat":"40.433","lon":"-85.272"},{"key":"US-IN-011","name":"Boone","lat":"40.019","lon":"-86.438"},{"key":"US-IN-013","name":"Brown","lat":"39.212","lon":"-86.215"},{"key":"US-IN-015","name":"Carroll","lat":"40.630","lon":"-86.655"},{"key":"US-IN-017","name":"Cass","lat":"40.749","lon":"-86.322"},{"key":"US-IN-019","name":"Clark","lat":"38.412","lon":"-85.735"},{"key":"US-IN-021","name":"Clay","lat":"39.381","lon":"-87.112"},{"key":"US-IN-023","name":"Clinton","lat":"40.284","lon":"-86.461"},{"key":"US-IN-025","name":"Crawford","lat":"38.289","lon":"-86.324"},{"key":"US-IN-027","name":"Daviess","lat":"38.702","lon":"-87.167"},{"key":"US-IN-029","name":"Dearborn","lat":"39.046","lon":"-84.984"},{"key":"US-IN-031","name":"Decatur","lat":"39.319","lon":"-85.504"},{"key":"US-IN-033","name":"DeKalb","lat":"41.427","lon":"-84.987"},{"key":"US-IN-035","name":"Delaware","lat":"40.230","lon":"-85.403"},{"key":"US-IN-037","name":"Dubois","lat":"38.421","lon":"-86.918"},{"key":"US-IN-039","name":"Elkhart","lat":"41.608","lon":"-85.908"},{"key":"US-IN-041","name":"Fayette","lat":"39.645","lon":"-85.170"},{"key":"US-IN-043","name":"Floyd","lat":"38.319","lon":"-85.865"},{"key":"US-IN-045","name":"Fountain","lat":"40.161","lon":"-87.302"},{"key":"US-IN-047","name":"Franklin","lat":"39.390","lon":"-85.106"},{"key":"US-IN-049","name":"Fulton","lat":"41.040","lon":"-86.225"},{"key":"US-IN-051","name":"Gibson","lat":"38.393","lon":"-87.544"},{"key":"US-IN-053","name":"Grant","lat":"40.533","lon":"-85.676"},{"key":"US-IN-055","name":"Greene","lat":"39.048","lon":"-87.022"},{"key":"US-IN-057","name":"Hamilton","lat":"40.007","lon":"-86.035"},{"key":"US-IN-059","name":"Hancock","lat":"39.846","lon":"-85.831"},{"key":"US-IN-061","name":"Harrison","lat":"38.236","lon":"-86.184"},{"key":"US-IN-063","name":"Hendricks","lat":"39.753","lon":"-86.466"},{"key":"US-IN-065","name":"Henry","lat":"39.940","lon":"-85.421"},{"key":"US-IN-067","name":"Howard","lat":"40.480","lon":"-86.130"},{"key":"US-IN-069","name":"Huntington","lat":"40.835","lon":"-85.468"},{"key":"US-IN-071","name":"Jackson","lat":"38.813","lon":"-86.000"},{"key":"US-IN-073","name":"Jasper","lat":"41.061","lon":"-87.113"},{"key":"US-IN-075","name":"Jay","lat":"40.440","lon":"-85.060"},{"key":"US-IN-077","name":"Jefferson","lat":"38.753","lon":"-85.436"},{"key":"US-IN-079","name":"Jennings","lat":"38.916","lon":"-85.671"},{"key":"US-IN-081","name":"Johnson","lat":"39.511","lon":"-86.101"},{"key":"US-IN-083","name":"Knox","lat":"38.666","lon":"-87.340"},{"key":"US-IN-085","name":"Kosciusko","lat":"41.271","lon":"-85.864"},{"key":"US-IN-087","name":"LaGrange","lat":"41.669","lon":"-85.420"},{"key":"US-IN-089","name":"Lake","lat":"41.491","lon":"-87.381"},{"key":"US-IN-091","name":"LaPorte","lat":"41.543","lon":"-86.755"},{"key":"US-IN-093","name":"Lawrence","lat":"38.809","lon":"-86.439"},{"key":"US-IN-095","name":"Madison","lat":"40.126","lon":"-85.739"},{"key":"US-IN-097","name":"Marion","lat":"39.779","lon":"-86.139"},{"key":"US-IN-099","name":"Marshall","lat":"41.351","lon":"-86.278"},{"key":"US-IN-101","name":"Martin","lat":"38.668","lon":"-86.821"},{"key":"US-IN-103","name":"Miami","lat":"40.776","lon":"-86.063"},{"key":"US-IN-105","name":"Monroe","lat":"39.202","lon":"-86.552"},{"key":"US-IN-107","name":"Montgomery","lat":"40.019","lon":"-86.890"},{"key":"US-IN-109","name":"Morgan","lat":"39.520","lon":"-86.506"},{"key":"US-IN-111","name":"Newton","lat":"41.036","lon":"-87.399"},{"key":"US-IN-113","name":"Noble","lat":"41.384","lon":"-85.407"},{"key":"US-IN-115","name":"Ohio","lat":"38.966","lon":"-84.990"},{"key":"US-IN-117","name":"Orange","lat":"38.546","lon":"-86.467"},{"key":"US-IN-119","name":"Owen","lat":"39.326","lon":"-86.779"},{"key":"US-IN-121","name":"Parke","lat":"39.796","lon":"-87.310"},{"key":"US-IN-123","name":"Perry","lat":"38.044","lon":"-86.714"},{"key":"US-IN-125","name":"Pike","lat":"38.446","lon":"-87.282"},{"key":"US-IN-127","name":"Porter","lat":"41.521","lon":"-87.106"},{"key":"US-IN-129","name":"Posey","lat":"37.960","lon":"-87.888"},{"key":"US-IN-131","name":"Pulaski","lat":"41.054","lon":"-86.693"},{"key":"US-IN-133","name":"Putnam","lat":"39.620","lon":"-86.766"},{"key":"US-IN-135","name":"Randolph","lat":"40.165","lon":"-85.014"},{"key":"US-IN-137","name":"Ripley","lat":"39.146","lon":"-85.245"},{"key":"US-IN-139","name":"Rush","lat":"39.623","lon":"-85.458"},{"key":"US-IN-141","name":"St. Joseph","lat":"41.625","lon":"-86.296"},{"key":"US-IN-143","name":"Scott","lat":"38.739","lon":"-85.781"},{"key":"US-IN-145","name":"Shelby","lat":"39.522","lon":"-85.815"},{"key":"US-IN-147","name":"Spencer","lat":"38.032","lon":"-86.968"},{"key":"US-IN-149","name":"Starke","lat":"41.297","lon":"-86.698"},{"key":"US-IN-151","name":"Steuben","lat":"41.649","lon":"-84.995"},{"key":"US-IN-153","name":"Sullivan","lat":"39.088","lon":"-87.451"},{"key":"US-IN-155","name":"Switzerland","lat":"38.814","lon":"-84.975"},{"key":"US-IN-157","name":"Tippecanoe","lat":"40.388","lon":"-86.913"},{"key":"US-IN-159","name":"Tipton","lat":"40.302","lon":"-86.047"},{"key":"US-IN-161","name":"Union","lat":"39.611","lon":"-84.911"},{"key":"US-IN-163","name":"Vanderburgh","lat":"37.964","lon":"-87.598"},{"key":"US-IN-165","name":"Vermillion","lat":"39.871","lon":"-87.427"},{"key":"US-IN-167","name":"Vigo","lat":"39.441","lon":"-87.414"},{"key":"US-IN-169","name":"Wabash","lat":"40.810","lon":"-85.788"},{"key":"US-IN-171","name":"Warren","lat":"40.278","lon":"-87.315"},{"key":"US-IN-173","name":"Warrick","lat":"38.038","lon":"-87.227"},{"key":"US-IN-175","name":"Washington","lat":"38.701","lon":"-86.074"},{"key":"US-IN-177","name":"Wayne","lat":"39.855","lon":"-84.985"},{"key":"US-IN-179","name":"Wells","lat":"40.735","lon":"-85.238"},{"key":"US-IN-181","name":"White","lat":"40.727","lon":"-86.818"},{"key":"US-IN-183","name":"Whitley","lat":"41.173","lon":"-85.488"}]},"US-KS":{"key":"US-KS","name":"Kansas","lon":"-98.320","lat":"38.498","counties":[{"key":"US-KS-001","name":"Allen","lat":"37.867","lon":"-95.308"},{"key":"US-KS-003","name":"Anderson","lat":"38.254","lon":"-95.304"},{"key":"US-KS-005","name":"Atchison","lat":"39.532","lon":"-95.214"},{"key":"US-KS-007","name":"Barber","lat":"37.244","lon":"-98.700"},{"key":"US-KS-009","name":"Barton","lat":"38.489","lon":"-98.727"},{"key":"US-KS-011","name":"Bourbon","lat":"37.836","lon":"-94.784"},{"key":"US-KS-013","name":"Brown","lat":"39.824","lon":"-95.570"},{"key":"US-KS-015","name":"Butler","lat":"37.746","lon":"-96.914"},{"key":"US-KS-017","name":"Chase","lat":"38.306","lon":"-96.639"},{"key":"US-KS-019","name":"Chautauqua","lat":"37.143","lon":"-96.200"},{"key":"US-KS-021","name":"Cherokee","lat":"37.138","lon":"-94.778"},{"key":"US-KS-023","name":"Cheyenne","lat":"39.782","lon":"-101.798"},{"key":"US-KS-025","name":"Clark","lat":"37.227","lon":"-99.812"},{"key":"US-KS-027","name":"Clay","lat":"39.380","lon":"-97.165"},{"key":"US-KS-029","name":"Cloud","lat":"39.486","lon":"-97.669"},{"key":"US-KS-031","name":"Coffey","lat":"38.250","lon":"-95.735"},{"key":"US-KS-033","name":"Comanche","lat":"37.180","lon":"-99.279"},{"key":"US-KS-035","name":"Cowley","lat":"37.199","lon":"-96.912"},{"key":"US-KS-037","name":"Crawford","lat":"37.513","lon":"-94.788"},{"key":"US-KS-039","name":"Decatur","lat":"39.806","lon":"-100.450"},{"key":"US-KS-041","name":"Dickinson","lat":"38.863","lon":"-97.056"},{"key":"US-KS-043","name":"Doniphan","lat":"39.800","lon":"-95.045"},{"key":"US-KS-045","name":"Douglas","lat":"38.954","lon":"-95.276"},{"key":"US-KS-047","name":"Edwards","lat":"37.892","lon":"-99.275"},{"key":"US-KS-049","name":"Elk","lat":"37.452","lon":"-96.204"},{"key":"US-KS-051","name":"Ellis","lat":"38.922","lon":"-99.280"},{"key":"US-KS-053","name":"Ellsworth","lat":"38.702","lon":"-98.216"},{"key":"US-KS-055","name":"Finney","lat":"38.045","lon":"-100.645"},{"key":"US-KS-057","name":"Ford","lat":"37.694","lon":"-99.902"},{"key":"US-KS-059","name":"Franklin","lat":"38.561","lon":"-95.291"},{"key":"US-KS-061","name":"Geary","lat":"39.044","lon":"-96.815"},{"key":"US-KS-063","name":"Gove","lat":"38.959","lon":"-100.524"},{"key":"US-KS-065","name":"Graham","lat":"39.349","lon":"-99.895"},{"key":"US-KS-067","name":"Grant","lat":"37.490","lon":"-101.301"},{"key":"US-KS-069","name":"Gray","lat":"37.703","lon":"-100.408"},{"key":"US-KS-071","name":"Greeley","lat":"38.535","lon":"-101.902"},{"key":"US-KS-073","name":"Greenwood","lat":"37.835","lon":"-96.226"},{"key":"US-KS-075","name":"Hamilton","lat":"37.905","lon":"-101.820"},{"key":"US-KS-077","name":"Harper","lat":"37.215","lon":"-98.095"},{"key":"US-KS-079","name":"Harvey","lat":"38.041","lon":"-97.410"},{"key":"US-KS-081","name":"Haskell","lat":"37.534","lon":"-100.858"},{"key":"US-KS-083","name":"Hodgeman","lat":"38.121","lon":"-99.848"},{"key":"US-KS-085","name":"Jackson","lat":"39.424","lon":"-95.794"},{"key":"US-KS-087","name":"Jefferson","lat":"39.184","lon":"-95.398"},{"key":"US-KS-089","name":"Jewell","lat":"39.824","lon":"-98.217"},{"key":"US-KS-091","name":"Johnson","lat":"38.932","lon":"-94.799"},{"key":"US-KS-093","name":"Kearny","lat":"38.057","lon":"-101.330"},{"key":"US-KS-095","name":"Kingman","lat":"37.543","lon":"-98.104"},{"key":"US-KS-097","name":"Kiowa","lat":"37.559","lon":"-99.252"},{"key":"US-KS-099","name":"Labette","lat":"37.184","lon":"-95.284"},{"key":"US-KS-101","name":"Lane","lat":"38.479","lon":"-100.490"},{"key":"US-KS-103","name":"Leavenworth","lat":"39.161","lon":"-94.986"},{"key":"US-KS-105","name":"Lincoln","lat":"39.039","lon":"-98.200"},{"key":"US-KS-107","name":"Linn","lat":"38.227","lon":"-94.777"},{"key":"US-KS-109","name":"Logan","lat":"38.926","lon":"-101.069"},{"key":"US-KS-111","name":"Lyon","lat":"38.416","lon":"-96.140"},{"key":"US-KS-113","name":"McPherson","lat":"38.350","lon":"-97.648"},{"key":"US-KS-115","name":"Marion","lat":"38.302","lon":"-97.094"},{"key":"US-KS-117","name":"Marshall","lat":"39.753","lon":"-96.513"},{"key":"US-KS-119","name":"Meade","lat":"37.239","lon":"-100.333"},{"key":"US-KS-121","name":"Miami","lat":"38.604","lon":"-94.841"},{"key":"US-KS-123","name":"Mitchell","lat":"39.362","lon":"-98.116"},{"key":"US-KS-125","name":"Montgomery","lat":"37.164","lon":"-95.756"},{"key":"US-KS-127","name":"Morris","lat":"38.695","lon":"-96.704"},{"key":"US-KS-129","name":"Morton","lat":"37.159","lon":"-101.872"},{"key":"US-KS-131","name":"Nemaha","lat":"39.792","lon":"-96.037"},{"key":"US-KS-133","name":"Neosho","lat":"37.563","lon":"-95.297"},{"key":"US-KS-135","name":"Ness","lat":"38.462","lon":"-99.897"},{"key":"US-KS-137","name":"Norton","lat":"39.810","lon":"-99.922"},{"key":"US-KS-139","name":"Osage","lat":"38.665","lon":"-95.710"},{"key":"US-KS-141","name":"Osborne","lat":"39.364","lon":"-98.747"},{"key":"US-KS-143","name":"Ottawa","lat":"39.178","lon":"-97.741"},{"key":"US-KS-145","name":"Pawnee","lat":"38.174","lon":"-99.269"},{"key":"US-KS-147","name":"Phillips","lat":"39.822","lon":"-99.329"},{"key":"US-KS-149","name":"Pottawatomie","lat":"39.298","lon":"-96.438"},{"key":"US-KS-151","name":"Pratt","lat":"37.641","lon":"-98.771"},{"key":"US-KS-153","name":"Rawlins","lat":"39.771","lon":"-101.039"},{"key":"US-KS-155","name":"Reno","lat":"37.979","lon":"-98.001"},{"key":"US-KS-157","name":"Republic","lat":"39.824","lon":"-97.639"},{"key":"US-KS-159","name":"Rice","lat":"38.298","lon":"-98.179"},{"key":"US-KS-161","name":"Riley","lat":"39.293","lon":"-96.640"},{"key":"US-KS-163","name":"Rooks","lat":"39.353","lon":"-99.312"},{"key":"US-KS-165","name":"Rush","lat":"38.561","lon":"-99.260"},{"key":"US-KS-167","name":"Russell","lat":"38.928","lon":"-98.792"},{"key":"US-KS-169","name":"Saline","lat":"38.779","lon":"-97.619"},{"key":"US-KS-171","name":"Scott","lat":"38.519","lon":"-100.888"},{"key":"US-KS-173","name":"Sedgwick","lat":"37.682","lon":"-97.396"},{"key":"US-KS-175","name":"Seward","lat":"37.163","lon":"-100.841"},{"key":"US-KS-177","name":"Shawnee","lat":"39.062","lon":"-95.767"},{"key":"US-KS-179","name":"Sheridan","lat":"39.342","lon":"-100.426"},{"key":"US-KS-181","name":"Sherman","lat":"39.346","lon":"-101.751"},{"key":"US-KS-183","name":"Smith","lat":"39.835","lon":"-98.748"},{"key":"US-KS-185","name":"Stafford","lat":"38.016","lon":"-98.719"},{"key":"US-KS-187","name":"Stanton","lat":"37.591","lon":"-101.822"},{"key":"US-KS-189","name":"Stevens","lat":"37.229","lon":"-101.317"},{"key":"US-KS-191","name":"Sumner","lat":"37.258","lon":"-97.409"},{"key":"US-KS-193","name":"Thomas","lat":"39.366","lon":"-101.008"},{"key":"US-KS-195","name":"Trego","lat":"38.926","lon":"-99.851"},{"key":"US-KS-197","name":"Wabaunsee","lat":"39.099","lon":"-96.172"},{"key":"US-KS-199","name":"Wallace","lat":"38.934","lon":"-101.744"},{"key":"US-KS-201","name":"Washington","lat":"39.775","lon":"-97.104"},{"key":"US-KS-203","name":"Wichita","lat":"38.449","lon":"-101.303"},{"key":"US-KS-205","name":"Wilson","lat":"37.530","lon":"-95.764"},{"key":"US-KS-207","name":"Woodson","lat":"37.897","lon":"-95.715"},{"key":"US-KS-209","name":"Wyandotte","lat":"39.095","lon":"-94.755"}]},"US-KY":{"key":"US-KY","name":"Kentucky","lon":"-85.768","lat":"37.822","counties":[{"key":"US-KY-001","name":"Adair","lat":"37.209","lon":"-85.250"},{"key":"US-KY-003","name":"Allen","lat":"36.822","lon":"-86.174"},{"key":"US-KY-005","name":"Anderson","lat":"37.984","lon":"-85.008"},{"key":"US-KY-007","name":"Ballard","lat":"36.975","lon":"-89.002"},{"key":"US-KY-009","name":"Barren","lat":"36.901","lon":"-86.043"},{"key":"US-KY-011","name":"Bath","lat":"38.141","lon":"-83.673"},{"key":"US-KY-013","name":"Bell","lat":"36.779","lon":"-83.671"},{"key":"US-KY-015","name":"Boone","lat":"38.948","lon":"-84.731"},{"key":"US-KY-017","name":"Bourbon","lat":"38.222","lon":"-84.231"},{"key":"US-KY-019","name":"Boyd","lat":"38.345","lon":"-82.692"},{"key":"US-KY-021","name":"Boyle","lat":"37.642","lon":"-84.731"},{"key":"US-KY-023","name":"Bracken","lat":"38.626","lon":"-84.091"},{"key":"US-KY-025","name":"Breathitt","lat":"37.517","lon":"-83.284"},{"key":"US-KY-027","name":"Breckinridge","lat":"37.654","lon":"-86.463"},{"key":"US-KY-029","name":"Bullitt","lat":"37.923","lon":"-85.718"},{"key":"US-KY-031","name":"Butler","lat":"37.174","lon":"-86.782"},{"key":"US-KY-033","name":"Caldwell","lat":"37.245","lon":"-87.821"},{"key":"US-KY-035","name":"Calloway","lat":"36.629","lon":"-88.209"},{"key":"US-KY-037","name":"Campbell","lat":"38.973","lon":"-84.428"},{"key":"US-KY-039","name":"Carlisle","lat":"36.912","lon":"-89.000"},{"key":"US-KY-041","name":"Carroll","lat":"38.653","lon":"-85.096"},{"key":"US-KY-043","name":"Carter","lat":"38.308","lon":"-83.126"},{"key":"US-KY-045","name":"Casey","lat":"37.359","lon":"-84.981"},{"key":"US-KY-047","name":"Christian","lat":"37.049","lon":"-87.370"},{"key":"US-KY-049","name":"Clark","lat":"37.904","lon":"-84.164"},{"key":"US-KY-051","name":"Clay","lat":"37.138","lon":"-83.729"},{"key":"US-KY-053","name":"Clinton","lat":"36.723","lon":"-85.076"},{"key":"US-KY-055","name":"Crittenden","lat":"37.338","lon":"-88.072"},{"key":"US-KY-057","name":"Cumberland","lat":"36.785","lon":"-85.494"},{"key":"US-KY-059","name":"Daviess","lat":"37.791","lon":"-87.027"},{"key":"US-KY-061","name":"Edmonson","lat":"37.229","lon":"-86.204"},{"key":"US-KY-063","name":"Elliott","lat":"38.118","lon":"-83.095"},{"key":"US-KY-065","name":"Estill","lat":"37.749","lon":"-83.953"},{"key":"US-KY-067","name":"Fayette","lat":"38.011","lon":"-84.375"},{"key":"US-KY-069","name":"Fleming","lat":"38.334","lon":"-83.648"},{"key":"US-KY-071","name":"Floyd","lat":"37.534","lon":"-82.745"},{"key":"US-KY-073","name":"Franklin","lat":"38.222","lon":"-84.891"},{"key":"US-KY-075","name":"Fulton","lat":"36.558","lon":"-89.242"},{"key":"US-KY-077","name":"Gallatin","lat":"38.746","lon":"-84.848"},{"key":"US-KY-079","name":"Garrard","lat":"37.683","lon":"-84.571"},{"key":"US-KY-081","name":"Grant","lat":"38.594","lon":"-84.616"},{"key":"US-KY-083","name":"Graves","lat":"36.712","lon":"-88.656"},{"key":"US-KY-085","name":"Grayson","lat":"37.502","lon":"-86.275"},{"key":"US-KY-087","name":"Green","lat":"37.348","lon":"-85.591"},{"key":"US-KY-089","name":"Greenup","lat":"38.544","lon":"-82.978"},{"key":"US-KY-091","name":"Hancock","lat":"37.886","lon":"-86.874"},{"key":"US-KY-093","name":"Hardin","lat":"37.696","lon":"-85.945"},{"key":"US-KY-095","name":"Harlan","lat":"36.886","lon":"-83.195"},{"key":"US-KY-097","name":"Harrison","lat":"38.429","lon":"-84.363"},{"key":"US-KY-099","name":"Hart","lat":"37.351","lon":"-85.984"},{"key":"US-KY-101","name":"Henderson","lat":"37.826","lon":"-87.585"},{"key":"US-KY-103","name":"Henry","lat":"38.463","lon":"-85.021"},{"key":"US-KY-105","name":"Hickman","lat":"36.673","lon":"-89.040"},{"key":"US-KY-107","name":"Hopkins","lat":"37.271","lon":"-87.536"},{"key":"US-KY-109","name":"Jackson","lat":"37.374","lon":"-84.017"},{"key":"US-KY-111","name":"Jefferson","lat":"38.172","lon":"-85.748"},{"key":"US-KY-113","name":"Jessamine","lat":"37.824","lon":"-84.578"},{"key":"US-KY-115","name":"Johnson","lat":"37.821","lon":"-82.801"},{"key":"US-KY-117","name":"Kenton","lat":"38.955","lon":"-84.508"},{"key":"US-KY-119","name":"Knott","lat":"37.339","lon":"-82.929"},{"key":"US-KY-121","name":"Knox","lat":"36.914","lon":"-83.845"},{"key":"US-KY-123","name":"Larue","lat":"37.566","lon":"-85.616"},{"key":"US-KY-125","name":"Laurel","lat":"37.090","lon":"-84.133"},{"key":"US-KY-127","name":"Lawrence","lat":"38.081","lon":"-82.768"},{"key":"US-KY-129","name":"Lee","lat":"37.586","lon":"-83.743"},{"key":"US-KY-131","name":"Leslie","lat":"37.121","lon":"-83.350"},{"key":"US-KY-133","name":"Letcher","lat":"37.111","lon":"-82.898"},{"key":"US-KY-135","name":"Lewis","lat":"38.490","lon":"-83.311"},{"key":"US-KY-137","name":"Lincoln","lat":"37.518","lon":"-84.672"},{"key":"US-KY-139","name":"Livingston","lat":"37.212","lon":"-88.334"},{"key":"US-KY-141","name":"Logan","lat":"36.825","lon":"-86.875"},{"key":"US-KY-143","name":"Lyon","lat":"37.091","lon":"-88.154"},{"key":"US-KY-145","name":"McCracken","lat":"37.081","lon":"-88.679"},{"key":"US-KY-147","name":"McCreary","lat":"36.808","lon":"-84.456"},{"key":"US-KY-149","name":"McLean","lat":"37.502","lon":"-87.277"},{"key":"US-KY-151","name":"Madison","lat":"37.722","lon":"-84.306"},{"key":"US-KY-153","name":"Magoffin","lat":"37.672","lon":"-83.064"},{"key":"US-KY-155","name":"Marion","lat":"37.499","lon":"-85.295"},{"key":"US-KY-157","name":"Marshall","lat":"36.910","lon":"-88.289"},{"key":"US-KY-159","name":"Martin","lat":"37.799","lon":"-82.516"},{"key":"US-KY-161","name":"Mason","lat":"38.638","lon":"-83.814"},{"key":"US-KY-163","name":"Meade","lat":"38.022","lon":"-86.209"},{"key":"US-KY-165","name":"Menifee","lat":"37.952","lon":"-83.625"},{"key":"US-KY-167","name":"Mercer","lat":"37.854","lon":"-84.826"},{"key":"US-KY-169","name":"Metcalfe","lat":"36.952","lon":"-85.622"},{"key":"US-KY-171","name":"Monroe","lat":"36.730","lon":"-85.639"},{"key":"US-KY-173","name":"Montgomery","lat":"38.024","lon":"-83.881"},{"key":"US-KY-175","name":"Morgan","lat":"37.918","lon":"-83.210"},{"key":"US-KY-177","name":"Muhlenberg","lat":"37.209","lon":"-87.166"},{"key":"US-KY-179","name":"Nelson","lat":"37.755","lon":"-85.510"},{"key":"US-KY-181","name":"Nicholas","lat":"38.301","lon":"-84.009"},{"key":"US-KY-183","name":"Ohio","lat":"37.438","lon":"-86.876"},{"key":"US-KY-185","name":"Oldham","lat":"38.395","lon":"-85.454"},{"key":"US-KY-187","name":"Owen","lat":"38.542","lon":"-84.875"},{"key":"US-KY-189","name":"Owsley","lat":"37.398","lon":"-83.638"},{"key":"US-KY-191","name":"Pendleton","lat":"38.630","lon":"-84.394"},{"key":"US-KY-193","name":"Perry","lat":"37.230","lon":"-83.269"},{"key":"US-KY-195","name":"Pike","lat":"37.512","lon":"-82.427"},{"key":"US-KY-197","name":"Powell","lat":"37.842","lon":"-83.863"},{"key":"US-KY-199","name":"Pulaski","lat":"37.048","lon":"-84.434"},{"key":"US-KY-201","name":"Robertson","lat":"38.531","lon":"-84.072"},{"key":"US-KY-203","name":"Rockcastle","lat":"37.379","lon":"-84.243"},{"key":"US-KY-205","name":"Rowan","lat":"38.188","lon":"-83.439"},{"key":"US-KY-207","name":"Russell","lat":"36.940","lon":"-85.095"},{"key":"US-KY-209","name":"Scott","lat":"38.257","lon":"-84.566"},{"key":"US-KY-211","name":"Shelby","lat":"38.206","lon":"-85.219"},{"key":"US-KY-213","name":"Simpson","lat":"36.712","lon":"-86.489"},{"key":"US-KY-215","name":"Spencer","lat":"38.015","lon":"-85.281"},{"key":"US-KY-217","name":"Taylor","lat":"37.399","lon":"-85.299"},{"key":"US-KY-219","name":"Todd","lat":"36.894","lon":"-87.210"},{"key":"US-KY-221","name":"Trigg","lat":"36.808","lon":"-87.946"},{"key":"US-KY-223","name":"Trimble","lat":"38.583","lon":"-85.346"},{"key":"US-KY-225","name":"Union","lat":"37.656","lon":"-87.952"},{"key":"US-KY-227","name":"Warren","lat":"37.054","lon":"-86.397"},{"key":"US-KY-229","name":"Washington","lat":"37.831","lon":"-85.213"},{"key":"US-KY-231","name":"Wayne","lat":"36.789","lon":"-84.771"},{"key":"US-KY-233","name":"Webster","lat":"37.434","lon":"-87.785"},{"key":"US-KY-235","name":"Whitley","lat":"36.843","lon":"-84.148"},{"key":"US-KY-237","name":"Wolfe","lat":"37.736","lon":"-83.410"},{"key":"US-KY-239","name":"Woodford","lat":"38.055","lon":"-84.742"}]},"US-LA":{"key":"US-LA","name":"Louisiana","lon":"-91.401","lat":"30.937","counties":[{"key":"US-LA-001","name":"Acadia","lat":"30.231","lon":"-92.500"},{"key":"US-LA-003","name":"Allen","lat":"30.602","lon":"-92.751"},{"key":"US-LA-005","name":"Ascension","lat":"30.248","lon":"-90.852"},{"key":"US-LA-007","name":"Assumption","lat":"29.872","lon":"-91.122"},{"key":"US-LA-009","name":"Avoyelles","lat":"31.205","lon":"-91.977"},{"key":"US-LA-011","name":"Beauregard","lat":"30.743","lon":"-93.448"},{"key":"US-LA-013","name":"Bienville","lat":"32.316","lon":"-93.122"},{"key":"US-LA-015","name":"Bossier","lat":"32.592","lon":"-93.609"},{"key":"US-LA-017","name":"Caddo","lat":"32.490","lon":"-93.734"},{"key":"US-LA-019","name":"Calcasieu","lat":"30.196","lon":"-93.293"},{"key":"US-LA-021","name":"Caldwell","lat":"32.130","lon":"-91.961"},{"key":"US-LA-023","name":"Cameron","lat":"29.863","lon":"-93.336"},{"key":"US-LA-025","name":"Catahoula","lat":"31.591","lon":"-91.820"},{"key":"US-LA-027","name":"Claiborne","lat":"32.724","lon":"-92.986"},{"key":"US-LA-029","name":"Concordia","lat":"31.405","lon":"-91.663"},{"key":"US-LA-031","name":"De Soto","lat":"32.128","lon":"-93.655"},{"key":"US-LA-033","name":"East Baton Rouge","lat":"30.502","lon":"-91.018"},{"key":"US-LA-035","name":"East Carroll","lat":"32.777","lon":"-91.253"},{"key":"US-LA-037","name":"East Feliciana","lat":"30.835","lon":"-91.042"},{"key":"US-LA-039","name":"Evangeline","lat":"30.721","lon":"-92.454"},{"key":"US-LA-041","name":"Franklin","lat":"32.127","lon":"-91.702"},{"key":"US-LA-043","name":"Grant","lat":"31.590","lon":"-92.479"},{"key":"US-LA-045","name":"Iberia","lat":"29.906","lon":"-91.697"},{"key":"US-LA-047","name":"Iberville","lat":"30.253","lon":"-91.388"},{"key":"US-LA-049","name":"Jackson","lat":"32.247","lon":"-92.704"},{"key":"US-LA-051","name":"Jefferson","lat":"29.686","lon":"-90.100"},{"key":"US-LA-053","name":"Jefferson Davis","lat":"30.259","lon":"-92.688"},{"key":"US-LA-055","name":"Lafayette","lat":"30.212","lon":"-92.082"},{"key":"US-LA-057","name":"Lafourche","lat":"29.572","lon":"-90.422"},{"key":"US-LA-059","name":"La Salle","lat":"31.607","lon":"-92.257"},{"key":"US-LA-061","name":"Lincoln","lat":"32.666","lon":"-92.697"},{"key":"US-LA-063","name":"Livingston","lat":"30.397","lon":"-90.791"},{"key":"US-LA-065","name":"Madison","lat":"32.329","lon":"-91.261"},{"key":"US-LA-067","name":"Morehouse","lat":"32.740","lon":"-91.822"},{"key":"US-LA-069","name":"Natchitoches","lat":"31.867","lon":"-93.050"},{"key":"US-LA-071","name":"Orleans","lat":"30.023","lon":"-89.890"},{"key":"US-LA-073","name":"Ouachita","lat":"32.562","lon":"-92.054"},{"key":"US-LA-075","name":"Plaquemines","lat":"29.487","lon":"-89.626"},{"key":"US-LA-077","name":"Pointe Coupee","lat":"30.773","lon":"-91.624"},{"key":"US-LA-079","name":"Rapides","lat":"31.229","lon":"-92.409"},{"key":"US-LA-081","name":"Red River","lat":"32.058","lon":"-93.328"},{"key":"US-LA-083","name":"Richland","lat":"32.377","lon":"-91.790"},{"key":"US-LA-085","name":"Sabine","lat":"31.476","lon":"-93.610"},{"key":"US-LA-087","name":"St. Bernard","lat":"29.894","lon":"-89.587"},{"key":"US-LA-089","name":"St. Charles","lat":"29.876","lon":"-90.381"},{"key":"US-LA-091","name":"St. Helena","lat":"30.817","lon":"-90.827"},{"key":"US-LA-093","name":"St. James","lat":"29.970","lon":"-90.749"},{"key":"US-LA-095","name":"St. John the Baptist","lat":"30.092","lon":"-90.536"},{"key":"US-LA-097","name":"St. Landry","lat":"30.532","lon":"-92.058"},{"key":"US-LA-099","name":"St. Martin","lat":"30.144","lon":"-91.615"},{"key":"US-LA-101","name":"St. Mary","lat":"29.646","lon":"-91.380"},{"key":"US-LA-103","name":"St. Tammany","lat":"30.416","lon":"-89.877"},{"key":"US-LA-105","name":"Tangipahoa","lat":"30.604","lon":"-90.370"},{"key":"US-LA-107","name":"Tensas","lat":"32.017","lon":"-91.339"},{"key":"US-LA-109","name":"Terrebonne","lat":"29.411","lon":"-90.821"},{"key":"US-LA-111","name":"Union","lat":"32.784","lon":"-92.285"},{"key":"US-LA-113","name":"Vermilion","lat":"30.003","lon":"-92.347"},{"key":"US-LA-115","name":"Vernon","lat":"31.051","lon":"-93.372"},{"key":"US-LA-117","name":"Washington","lat":"30.833","lon":"-89.973"},{"key":"US-LA-119","name":"Webster","lat":"32.771","lon":"-93.373"},{"key":"US-LA-121","name":"West Baton Rouge","lat":"30.493","lon":"-91.293"},{"key":"US-LA-123","name":"West Carroll","lat":"32.810","lon":"-91.438"},{"key":"US-LA-125","name":"West Feliciana","lat":"30.861","lon":"-91.434"},{"key":"US-LA-127","name":"Winn","lat":"31.915","lon":"-92.734"}]},"US-MA":{"key":"US-MA","name":"Massachusetts","lon":"-71.684","lat":"42.037","counties":[{"key":"US-MA-001","name":"Barnstable","lat":"41.742","lon":"-70.276"},{"key":"US-MA-003","name":"Berkshire","lat":"42.369","lon":"-73.067"},{"key":"US-MA-005","name":"Bristol","lat":"41.723","lon":"-71.051"},{"key":"US-MA-007","name":"Dukes","lat":"41.405","lon":"-70.707"},{"key":"US-MA-009","name":"Essex","lat":"42.590","lon":"-70.873"},{"key":"US-MA-011","name":"Franklin","lat":"42.492","lon":"-72.494"},{"key":"US-MA-013","name":"Hampden","lat":"42.151","lon":"-72.643"},{"key":"US-MA-015","name":"Hampshire","lat":"42.316","lon":"-72.532"},{"key":"US-MA-017","name":"Middlesex","lat":"42.413","lon":"-71.299"},{"key":"US-MA-019","name":"Nantucket","lat":"41.298","lon":"-70.121"},{"key":"US-MA-021","name":"Norfolk","lat":"42.241","lon":"-71.125"},{"key":"US-MA-023","name":"Plymouth","lat":"42.002","lon":"-70.790"},{"key":"US-MA-025","name":"Suffolk","lat":"42.345","lon":"-71.059"},{"key":"US-MA-027","name":"Worcester","lat":"42.353","lon":"-71.904"}]},"US-MD":{"key":"US-MD","name":"Maryland","lon":"-77.237","lat":"38.805","counties":[{"key":"US-MD-001","name":"Allegany","lat":"39.594","lon":"-78.622"},{"key":"US-MD-003","name":"Anne Arundel","lat":"38.973","lon":"-76.610"},{"key":"US-MD-005","name":"Baltimore","lat":"39.378","lon":"-76.627"},{"key":"US-MD-009","name":"Calvert","lat":"38.550","lon":"-76.569"},{"key":"US-MD-011","name":"Caroline","lat":"38.866","lon":"-75.893"},{"key":"US-MD-013","name":"Carroll","lat":"39.501","lon":"-77.069"},{"key":"US-MD-015","name":"Cecil","lat":"39.494","lon":"-75.960"},{"key":"US-MD-017","name":"Charles","lat":"38.490","lon":"-76.945"},{"key":"US-MD-019","name":"Dorchester","lat":"38.405","lon":"-76.039"},{"key":"US-MD-021","name":"Frederick","lat":"39.519","lon":"-77.368"},{"key":"US-MD-023","name":"Garrett","lat":"39.431","lon":"-79.241"},{"key":"US-MD-025","name":"Harford","lat":"39.473","lon":"-76.314"},{"key":"US-MD-027","name":"Howard","lat":"39.257","lon":"-76.931"},{"key":"US-MD-029","name":"Kent","lat":"39.240","lon":"-76.043"},{"key":"US-MD-031","name":"Montgomery","lat":"39.115","lon":"-77.128"},{"key":"US-MD-033","name":"Prince George's","lat":"38.842","lon":"-76.825"},{"key":"US-MD-035","name":"Queen Anne's","lat":"39.020","lon":"-76.097"},{"key":"US-MD-037","name":"St. Mary's","lat":"38.255","lon":"-76.558"},{"key":"US-MD-039","name":"Somerset","lat":"38.100","lon":"-75.793"},{"key":"US-MD-041","name":"Talbot","lat":"38.769","lon":"-76.152"},{"key":"US-MD-043","name":"Washington","lat":"39.575","lon":"-77.885"},{"key":"US-MD-045","name":"Wicomico","lat":"38.360","lon":"-75.660"},{"key":"US-MD-047","name":"Worcester","lat":"38.218","lon":"-75.396"}]},"US-ME":{"key":"US-ME","name":"Maine","lon":"-68.985","lat":"45.188","counties":[{"key":"US-ME-001","name":"Androscoggin","lat":"44.120","lon":"-70.176"},{"key":"US-ME-003","name":"Aroostook","lat":"46.878","lon":"-68.390"},{"key":"US-ME-005","name":"Cumberland","lat":"43.801","lon":"-70.279"},{"key":"US-ME-007","name":"Franklin","lat":"45.031","lon":"-70.405"},{"key":"US-ME-009","name":"Hancock","lat":"44.335","lon":"-68.449"},{"key":"US-ME-011","name":"Kennebec","lat":"44.470","lon":"-69.769"},{"key":"US-ME-013","name":"Knox","lat":"44.034","lon":"-69.026"},{"key":"US-ME-015","name":"Lincoln","lat":"43.923","lon":"-69.529"},{"key":"US-ME-017","name":"Oxford","lat":"44.265","lon":"-70.764"},{"key":"US-ME-019","name":"Penobscot","lat":"45.209","lon":"-68.667"},{"key":"US-ME-021","name":"Piscataquis","lat":"45.719","lon":"-69.677"},{"key":"US-ME-023","name":"Sagadahoc","lat":"43.906","lon":"-69.843"},{"key":"US-ME-025","name":"Somerset","lat":"45.563","lon":"-69.863"},{"key":"US-ME-027","name":"Waldo","lat":"44.448","lon":"-69.020"},{"key":"US-ME-029","name":"Washington","lat":"44.784","lon":"-67.445"},{"key":"US-ME-031","name":"York","lat":"43.453","lon":"-70.736"}]},"US-MI":{"key":"US-MI","name":"Michigan","lon":"-86.271","lat":"45.001","counties":[{"key":"US-MI-001","name":"Alcona","lat":"44.667","lon":"-83.417"},{"key":"US-MI-003","name":"Alger","lat":"46.504","lon":"-86.652"},{"key":"US-MI-005","name":"Allegan","lat":"42.603","lon":"-85.964"},{"key":"US-MI-007","name":"Alpena","lat":"45.046","lon":"-83.405"},{"key":"US-MI-009","name":"Antrim","lat":"44.991","lon":"-85.290"},{"key":"US-MI-011","name":"Arenac","lat":"44.029","lon":"-83.778"},{"key":"US-MI-013","name":"Baraga","lat":"46.861","lon":"-88.300"},{"key":"US-MI-015","name":"Barry","lat":"42.582","lon":"-85.343"},{"key":"US-MI-017","name":"Bay","lat":"43.724","lon":"-83.909"},{"key":"US-MI-019","name":"Benzie","lat":"44.662","lon":"-86.117"},{"key":"US-MI-021","name":"Berrien","lat":"41.972","lon":"-86.479"},{"key":"US-MI-023","name":"Branch","lat":"41.914","lon":"-85.073"},{"key":"US-MI-025","name":"Calhoun","lat":"42.255","lon":"-85.013"},{"key":"US-MI-027","name":"Cass","lat":"41.880","lon":"-85.974"},{"key":"US-MI-029","name":"Charlevoix","lat":"45.486","lon":"-85.333"},{"key":"US-MI-031","name":"Cheboygan","lat":"45.612","lon":"-84.516"},{"key":"US-MI-033","name":"Chippewa","lat":"46.204","lon":"-84.163"},{"key":"US-MI-035","name":"Clare","lat":"43.966","lon":"-84.852"},{"key":"US-MI-037","name":"Clinton","lat":"42.896","lon":"-84.582"},{"key":"US-MI-039","name":"Crawford","lat":"44.650","lon":"-84.624"},{"key":"US-MI-041","name":"Delta","lat":"45.739","lon":"-86.785"},{"key":"US-MI-043","name":"Dickinson","lat":"45.863","lon":"-87.983"},{"key":"US-MI-045","name":"Eaton","lat":"42.624","lon":"-84.760"},{"key":"US-MI-047","name":"Emmet","lat":"45.569","lon":"-84.960"},{"key":"US-MI-049","name":"Genesee","lat":"42.994","lon":"-83.707"},{"key":"US-MI-051","name":"Gladwin","lat":"43.976","lon":"-84.387"},{"key":"US-MI-053","name":"Gogebic","lat":"46.493","lon":"-90.063"},{"key":"US-MI-055","name":"Grand Traverse","lat":"44.808","lon":"-85.537"},{"key":"US-MI-057","name":"Gratiot","lat":"43.287","lon":"-84.623"},{"key":"US-MI-059","name":"Hillsdale","lat":"41.908","lon":"-84.583"},{"key":"US-MI-061","name":"Houghton","lat":"47.082","lon":"-88.519"},{"key":"US-MI-063","name":"Huron","lat":"43.913","lon":"-83.004"},{"key":"US-MI-065","name":"Ingham","lat":"42.641","lon":"-84.426"},{"key":"US-MI-067","name":"Ionia","lat":"42.932","lon":"-85.111"},{"key":"US-MI-069","name":"Iosco","lat":"44.339","lon":"-83.485"},{"key":"US-MI-071","name":"Iron","lat":"46.020","lon":"-88.506"},{"key":"US-MI-073","name":"Isabella","lat":"43.635","lon":"-84.802"},{"key":"US-MI-075","name":"Jackson","lat":"42.241","lon":"-84.418"},{"key":"US-MI-077","name":"Kalamazoo","lat":"42.263","lon":"-85.508"},{"key":"US-MI-079","name":"Kalkaska","lat":"44.737","lon":"-85.198"},{"key":"US-MI-081","name":"Kent","lat":"43.028","lon":"-85.567"},{"key":"US-MI-083","name":"Keweenaw","lat":"47.720","lon":"-88.404"},{"key":"US-MI-085","name":"Lake","lat":"44.011","lon":"-85.797"},{"key":"US-MI-087","name":"Lapeer","lat":"43.085","lon":"-83.250"},{"key":"US-MI-089","name":"Leelanau","lat":"45.043","lon":"-85.801"},{"key":"US-MI-091","name":"Lenawee","lat":"41.924","lon":"-84.064"},{"key":"US-MI-093","name":"Livingston","lat":"42.595","lon":"-83.892"},{"key":"US-MI-095","name":"Luce","lat":"46.607","lon":"-85.559"},{"key":"US-MI-097","name":"Mackinac","lat":"45.963","lon":"-84.831"},{"key":"US-MI-099","name":"Macomb","lat":"42.584","lon":"-82.912"},{"key":"US-MI-101","name":"Manistee","lat":"44.330","lon":"-86.170"},{"key":"US-MI-103","name":"Marquette","lat":"46.662","lon":"-87.613"},{"key":"US-MI-105","name":"Mason","lat":"43.986","lon":"-86.320"},{"key":"US-MI-107","name":"Mecosta","lat":"43.627","lon":"-85.334"},{"key":"US-MI-109","name":"Menominee","lat":"45.385","lon":"-87.668"},{"key":"US-MI-111","name":"Midland","lat":"43.612","lon":"-84.347"},{"key":"US-MI-113","name":"Missaukee","lat":"44.280","lon":"-85.109"},{"key":"US-MI-115","name":"Monroe","lat":"41.940","lon":"-83.401"},{"key":"US-MI-117","name":"Montcalm","lat":"43.306","lon":"-85.188"},{"key":"US-MI-119","name":"Montmorency","lat":"45.041","lon":"-84.135"},{"key":"US-MI-121","name":"Muskegon","lat":"43.276","lon":"-86.200"},{"key":"US-MI-123","name":"Newaygo","lat":"43.481","lon":"-85.778"},{"key":"US-MI-125","name":"Oakland","lat":"42.590","lon":"-83.313"},{"key":"US-MI-127","name":"Oceana","lat":"43.662","lon":"-86.383"},{"key":"US-MI-129","name":"Ogemaw","lat":"44.295","lon":"-84.087"},{"key":"US-MI-131","name":"Ontonagon","lat":"46.813","lon":"-89.382"},{"key":"US-MI-133","name":"Osceola","lat":"44.034","lon":"-85.319"},{"key":"US-MI-135","name":"Oscoda","lat":"44.672","lon":"-84.144"},{"key":"US-MI-137","name":"Otsego","lat":"45.037","lon":"-84.609"},{"key":"US-MI-139","name":"Ottawa","lat":"42.951","lon":"-86.061"},{"key":"US-MI-141","name":"Presque Isle","lat":"45.393","lon":"-83.766"},{"key":"US-MI-143","name":"Roscommon","lat":"44.342","lon":"-84.638"},{"key":"US-MI-145","name":"Saginaw","lat":"43.339","lon":"-84.015"},{"key":"US-MI-147","name":"St. Clair","lat":"42.790","lon":"-82.633"},{"key":"US-MI-149","name":"St. Joseph","lat":"41.879","lon":"-85.571"},{"key":"US-MI-151","name":"Sanilac","lat":"43.395","lon":"-82.681"},{"key":"US-MI-153","name":"Schoolcraft","lat":"45.937","lon":"-86.204"},{"key":"US-MI-155","name":"Shiawassee","lat":"42.936","lon":"-84.136"},{"key":"US-MI-157","name":"Tuscola","lat":"43.529","lon":"-83.511"},{"key":"US-MI-159","name":"Van Buren","lat":"42.275","lon":"-86.092"},{"key":"US-MI-161","name":"Washtenaw","lat":"42.252","lon":"-83.808"},{"key":"US-MI-163","name":"Wayne","lat":"42.306","lon":"-83.197"},{"key":"US-MI-165","name":"Wexford","lat":"44.288","lon":"-85.579"}]},"US-MN":{"key":"US-MN","name":"Minnesota","lon":"-93.361","lat":"46.442","counties":[{"key":"US-MN-001","name":"Aitkin","lat":"46.541","lon":"-93.430"},{"key":"US-MN-003","name":"Anoka","lat":"45.194","lon":"-93.264"},{"key":"US-MN-005","name":"Becker","lat":"46.896","lon":"-95.656"},{"key":"US-MN-007","name":"Beltrami","lat":"47.971","lon":"-95.033"},{"key":"US-MN-009","name":"Benton","lat":"45.693","lon":"-94.152"},{"key":"US-MN-011","name":"Big Stone","lat":"45.321","lon":"-96.375"},{"key":"US-MN-013","name":"Blue Earth","lat":"44.163","lon":"-94.126"},{"key":"US-MN-015","name":"Brown","lat":"44.356","lon":"-94.632"},{"key":"US-MN-017","name":"Carlton","lat":"46.601","lon":"-92.649"},{"key":"US-MN-019","name":"Carver","lat":"44.784","lon":"-93.690"},{"key":"US-MN-021","name":"Cass","lat":"46.946","lon":"-94.211"},{"key":"US-MN-023","name":"Chippewa","lat":"44.939","lon":"-95.695"},{"key":"US-MN-025","name":"Chisago","lat":"45.516","lon":"-92.848"},{"key":"US-MN-027","name":"Clay","lat":"46.883","lon":"-96.715"},{"key":"US-MN-029","name":"Clearwater","lat":"47.624","lon":"-95.351"},{"key":"US-MN-031","name":"Cook","lat":"47.937","lon":"-90.232"},{"key":"US-MN-033","name":"Cottonwood","lat":"43.982","lon":"-95.223"},{"key":"US-MN-035","name":"Crow Wing","lat":"46.372","lon":"-94.156"},{"key":"US-MN-037","name":"Dakota","lat":"44.732","lon":"-93.060"},{"key":"US-MN-039","name":"Dodge","lat":"44.034","lon":"-92.860"},{"key":"US-MN-041","name":"Douglas","lat":"45.923","lon":"-95.429"},{"key":"US-MN-043","name":"Faribault","lat":"43.693","lon":"-93.923"},{"key":"US-MN-045","name":"Fillmore","lat":"43.677","lon":"-92.053"},{"key":"US-MN-047","name":"Freeborn","lat":"43.664","lon":"-93.378"},{"key":"US-MN-049","name":"Goodhue","lat":"44.468","lon":"-92.672"},{"key":"US-MN-051","name":"Grant","lat":"45.957","lon":"-95.984"},{"key":"US-MN-053","name":"Hennepin","lat":"45.022","lon":"-93.474"},{"key":"US-MN-055","name":"Houston","lat":"43.638","lon":"-91.428"},{"key":"US-MN-057","name":"Hubbard","lat":"47.170","lon":"-94.906"},{"key":"US-MN-059","name":"Isanti","lat":"45.562","lon":"-93.269"},{"key":"US-MN-061","name":"Itasca","lat":"47.368","lon":"-93.843"},{"key":"US-MN-063","name":"Jackson","lat":"43.667","lon":"-95.186"},{"key":"US-MN-065","name":"Kanabec","lat":"45.953","lon":"-93.277"},{"key":"US-MN-067","name":"Kandiyohi","lat":"45.116","lon":"-95.032"},{"key":"US-MN-069","name":"Kittson","lat":"48.752","lon":"-97.062"},{"key":"US-MN-071","name":"Koochiching","lat":"48.478","lon":"-93.810"},{"key":"US-MN-073","name":"Lac qui Parle","lat":"45.105","lon":"-96.100"},{"key":"US-MN-075","name":"Lake","lat":"47.551","lon":"-91.461"},{"key":"US-MN-077","name":"Lake of the Woods","lat":"48.842","lon":"-94.990"},{"key":"US-MN-079","name":"Le Sueur","lat":"44.373","lon":"-93.883"},{"key":"US-MN-081","name":"Lincoln","lat":"44.419","lon":"-96.321"},{"key":"US-MN-083","name":"Lyon","lat":"44.428","lon":"-95.824"},{"key":"US-MN-085","name":"McLeod","lat":"44.850","lon":"-94.267"},{"key":"US-MN-087","name":"Mahnomen","lat":"47.336","lon":"-95.779"},{"key":"US-MN-089","name":"Marshall","lat":"48.341","lon":"-96.844"},{"key":"US-MN-091","name":"Martin","lat":"43.688","lon":"-94.521"},{"key":"US-MN-093","name":"Meeker","lat":"45.116","lon":"-94.486"},{"key":"US-MN-095","name":"Mille Lacs","lat":"45.876","lon":"-93.597"},{"key":"US-MN-097","name":"Morrison","lat":"46.105","lon":"-94.385"},{"key":"US-MN-099","name":"Mower","lat":"43.659","lon":"-92.752"},{"key":"US-MN-101","name":"Murray","lat":"43.988","lon":"-95.751"},{"key":"US-MN-103","name":"Nicollet","lat":"44.310","lon":"-94.293"},{"key":"US-MN-105","name":"Nobles","lat":"43.690","lon":"-95.754"},{"key":"US-MN-107","name":"Norman","lat":"47.330","lon":"-96.756"},{"key":"US-MN-109","name":"Olmsted","lat":"44.034","lon":"-92.437"},{"key":"US-MN-111","name":"Otter Tail","lat":"46.441","lon":"-95.703"},{"key":"US-MN-113","name":"Pennington","lat":"48.057","lon":"-96.087"},{"key":"US-MN-115","name":"Pine","lat":"46.007","lon":"-92.665"},{"key":"US-MN-117","name":"Pipestone","lat":"43.996","lon":"-96.299"},{"key":"US-MN-119","name":"Polk","lat":"47.787","lon":"-96.766"},{"key":"US-MN-121","name":"Pope","lat":"45.632","lon":"-95.454"},{"key":"US-MN-123","name":"Ramsey","lat":"44.997","lon":"-93.108"},{"key":"US-MN-125","name":"Red Lake","lat":"47.891","lon":"-96.117"},{"key":"US-MN-127","name":"Redwood","lat":"44.523","lon":"-95.150"},{"key":"US-MN-129","name":"Renville","lat":"44.625","lon":"-95.067"},{"key":"US-MN-131","name":"Rice","lat":"44.378","lon":"-93.269"},{"key":"US-MN-133","name":"Rock","lat":"43.682","lon":"-96.225"},{"key":"US-MN-135","name":"Roseau","lat":"48.806","lon":"-95.490"},{"key":"US-MN-137","name":"St. Louis","lat":"47.633","lon":"-92.334"},{"key":"US-MN-139","name":"Scott","lat":"44.670","lon":"-93.651"},{"key":"US-MN-141","name":"Sherburne","lat":"45.403","lon":"-93.853"},{"key":"US-MN-143","name":"Sibley","lat":"44.569","lon":"-93.977"},{"key":"US-MN-145","name":"Stearns","lat":"45.522","lon":"-94.305"},{"key":"US-MN-147","name":"Steele","lat":"44.026","lon":"-93.236"},{"key":"US-MN-149","name":"Stevens","lat":"45.574","lon":"-95.992"},{"key":"US-MN-151","name":"Swift","lat":"45.256","lon":"-95.768"},{"key":"US-MN-153","name":"Todd","lat":"46.086","lon":"-94.813"},{"key":"US-MN-155","name":"Traverse","lat":"45.772","lon":"-96.569"},{"key":"US-MN-157","name":"Wabasha","lat":"44.305","lon":"-92.144"},{"key":"US-MN-159","name":"Wadena","lat":"46.478","lon":"-94.919"},{"key":"US-MN-161","name":"Waseca","lat":"44.042","lon":"-93.586"},{"key":"US-MN-163","name":"Washington","lat":"44.988","lon":"-92.871"},{"key":"US-MN-165","name":"Watonwan","lat":"43.973","lon":"-94.623"},{"key":"US-MN-167","name":"Wilkin","lat":"46.374","lon":"-96.607"},{"key":"US-MN-169","name":"Winona","lat":"43.993","lon":"-91.654"},{"key":"US-MN-171","name":"Wright","lat":"45.254","lon":"-93.856"},{"key":"US-MN-173","name":"Yellow Medicine","lat":"44.772","lon":"-95.659"}]},"US-MO":{"key":"US-MO","name":"Missouri","lon":"-92.437","lat":"38.305","counties":[{"key":"US-MO-001","name":"Adair","lat":"40.194","lon":"-92.539"},{"key":"US-MO-003","name":"Andrew","lat":"40.002","lon":"-94.947"},{"key":"US-MO-005","name":"Atchison","lat":"40.445","lon":"-95.570"},{"key":"US-MO-007","name":"Audrain","lat":"39.245","lon":"-91.887"},{"key":"US-MO-009","name":"Barry","lat":"36.742","lon":"-93.821"},{"key":"US-MO-011","name":"Barton","lat":"37.494","lon":"-94.409"},{"key":"US-MO-013","name":"Bates","lat":"38.267","lon":"-94.245"},{"key":"US-MO-015","name":"Benton","lat":"38.271","lon":"-93.320"},{"key":"US-MO-017","name":"Bollinger","lat":"37.325","lon":"-90.016"},{"key":"US-MO-019","name":"Boone","lat":"38.896","lon":"-92.260"},{"key":"US-MO-021","name":"Buchanan","lat":"39.692","lon":"-94.882"},{"key":"US-MO-023","name":"Butler","lat":"36.712","lon":"-90.243"},{"key":"US-MO-025","name":"Caldwell","lat":"39.674","lon":"-94.037"},{"key":"US-MO-027","name":"Callaway","lat":"38.819","lon":"-92.057"},{"key":"US-MO-029","name":"Camden","lat":"38.027","lon":"-92.725"},{"key":"US-MO-031","name":"Cape Girardeau","lat":"37.460","lon":"-89.644"},{"key":"US-MO-033","name":"Carroll","lat":"39.398","lon":"-93.343"},{"key":"US-MO-035","name":"Carter","lat":"36.942","lon":"-90.926"},{"key":"US-MO-037","name":"Cass","lat":"38.581","lon":"-94.285"},{"key":"US-MO-039","name":"Cedar","lat":"37.734","lon":"-93.805"},{"key":"US-MO-041","name":"Chariton","lat":"39.489","lon":"-93.121"},{"key":"US-MO-043","name":"Christian","lat":"37.000","lon":"-93.244"},{"key":"US-MO-045","name":"Clark","lat":"40.421","lon":"-91.632"},{"key":"US-MO-047","name":"Clay","lat":"39.265","lon":"-94.431"},{"key":"US-MO-049","name":"Clinton","lat":"39.601","lon":"-94.408"},{"key":"US-MO-051","name":"Cole","lat":"38.522","lon":"-92.183"},{"key":"US-MO-053","name":"Cooper","lat":"38.881","lon":"-92.807"},{"key":"US-MO-055","name":"Crawford","lat":"38.053","lon":"-91.321"},{"key":"US-MO-057","name":"Dade","lat":"37.414","lon":"-93.795"},{"key":"US-MO-059","name":"Dallas","lat":"37.691","lon":"-93.017"},{"key":"US-MO-061","name":"Daviess","lat":"39.957","lon":"-93.984"},{"key":"US-MO-063","name":"DeKalb","lat":"39.854","lon":"-94.396"},{"key":"US-MO-065","name":"Dent","lat":"37.613","lon":"-91.491"},{"key":"US-MO-067","name":"Douglas","lat":"36.935","lon":"-92.511"},{"key":"US-MO-069","name":"Dunklin","lat":"36.402","lon":"-90.131"},{"key":"US-MO-071","name":"Franklin","lat":"38.476","lon":"-91.049"},{"key":"US-MO-073","name":"Gasconade","lat":"38.470","lon":"-91.506"},{"key":"US-MO-075","name":"Gentry","lat":"40.189","lon":"-94.425"},{"key":"US-MO-077","name":"Greene","lat":"37.219","lon":"-93.312"},{"key":"US-MO-079","name":"Grundy","lat":"40.099","lon":"-93.603"},{"key":"US-MO-081","name":"Harrison","lat":"40.390","lon":"-93.949"},{"key":"US-MO-083","name":"Henry","lat":"38.375","lon":"-93.721"},{"key":"US-MO-085","name":"Hickory","lat":"37.927","lon":"-93.321"},{"key":"US-MO-087","name":"Holt","lat":"40.079","lon":"-95.145"},{"key":"US-MO-089","name":"Howard","lat":"39.082","lon":"-92.736"},{"key":"US-MO-091","name":"Howell","lat":"36.753","lon":"-91.897"},{"key":"US-MO-093","name":"Iron","lat":"37.560","lon":"-90.762"},{"key":"US-MO-095","name":"Jackson","lat":"39.046","lon":"-94.371"},{"key":"US-MO-097","name":"Jasper","lat":"37.163","lon":"-94.425"},{"key":"US-MO-099","name":"Jefferson","lat":"38.281","lon":"-90.518"},{"key":"US-MO-101","name":"Johnson","lat":"38.761","lon":"-93.861"},{"key":"US-MO-103","name":"Knox","lat":"40.147","lon":"-92.188"},{"key":"US-MO-105","name":"Laclede","lat":"37.747","lon":"-92.572"},{"key":"US-MO-107","name":"Lafayette","lat":"39.133","lon":"-93.811"},{"key":"US-MO-109","name":"Lawrence","lat":"37.095","lon":"-93.847"},{"key":"US-MO-111","name":"Lewis","lat":"40.114","lon":"-91.639"},{"key":"US-MO-113","name":"Lincoln","lat":"38.973","lon":"-90.852"},{"key":"US-MO-115","name":"Linn","lat":"39.859","lon":"-93.108"},{"key":"US-MO-117","name":"Livingston","lat":"39.741","lon":"-93.449"},{"key":"US-MO-119","name":"McDonald","lat":"36.631","lon":"-94.348"},{"key":"US-MO-121","name":"Macon","lat":"39.828","lon":"-92.527"},{"key":"US-MO-123","name":"Madison","lat":"37.499","lon":"-90.345"},{"key":"US-MO-125","name":"Maries","lat":"38.138","lon":"-91.945"},{"key":"US-MO-127","name":"Marion","lat":"39.766","lon":"-91.527"},{"key":"US-MO-129","name":"Mercer","lat":"40.448","lon":"-93.584"},{"key":"US-MO-131","name":"Miller","lat":"38.212","lon":"-92.444"},{"key":"US-MO-133","name":"Mississippi","lat":"36.830","lon":"-89.263"},{"key":"US-MO-135","name":"Moniteau","lat":"38.693","lon":"-92.561"},{"key":"US-MO-137","name":"Monroe","lat":"39.471","lon":"-91.979"},{"key":"US-MO-139","name":"Montgomery","lat":"38.880","lon":"-91.482"},{"key":"US-MO-141","name":"Morgan","lat":"38.371","lon":"-92.907"},{"key":"US-MO-143","name":"New Madrid","lat":"36.559","lon":"-89.657"},{"key":"US-MO-145","name":"Newton","lat":"36.938","lon":"-94.388"},{"key":"US-MO-147","name":"Nodaway","lat":"40.282","lon":"-94.961"},{"key":"US-MO-149","name":"Oregon","lat":"36.672","lon":"-91.425"},{"key":"US-MO-151","name":"Osage","lat":"38.483","lon":"-91.938"},{"key":"US-MO-153","name":"Ozark","lat":"36.655","lon":"-92.392"},{"key":"US-MO-155","name":"Pemiscot","lat":"36.260","lon":"-89.696"},{"key":"US-MO-157","name":"Perry","lat":"37.664","lon":"-89.703"},{"key":"US-MO-159","name":"Pettis","lat":"38.716","lon":"-93.288"},{"key":"US-MO-161","name":"Phelps","lat":"37.938","lon":"-91.790"},{"key":"US-MO-163","name":"Pike","lat":"39.371","lon":"-91.086"},{"key":"US-MO-165","name":"Platte","lat":"39.343","lon":"-94.797"},{"key":"US-MO-167","name":"Polk","lat":"37.639","lon":"-93.406"},{"key":"US-MO-169","name":"Pulaski","lat":"37.846","lon":"-92.248"},{"key":"US-MO-171","name":"Putnam","lat":"40.478","lon":"-92.766"},{"key":"US-MO-173","name":"Ralls","lat":"39.564","lon":"-91.479"},{"key":"US-MO-175","name":"Randolph","lat":"39.428","lon":"-92.490"},{"key":"US-MO-177","name":"Ray","lat":"39.260","lon":"-94.044"},{"key":"US-MO-179","name":"Reynolds","lat":"37.335","lon":"-90.964"},{"key":"US-MO-181","name":"Ripley","lat":"36.649","lon":"-90.828"},{"key":"US-MO-183","name":"St. Charles","lat":"38.822","lon":"-90.633"},{"key":"US-MO-185","name":"St. Clair","lat":"38.055","lon":"-93.737"},{"key":"US-MO-186","name":"Ste. Genevieve","lat":"37.982","lon":"-90.174"},{"key":"US-MO-187","name":"St. Francois","lat":"37.878","lon":"-90.513"},{"key":"US-MO-189","name":"St. Louis","lat":"38.623","lon":"-90.412"},{"key":"US-MO-195","name":"Saline","lat":"39.221","lon":"-93.162"},{"key":"US-MO-197","name":"Schuyler","lat":"40.477","lon":"-92.658"},{"key":"US-MO-199","name":"Scotland","lat":"40.463","lon":"-92.156"},{"key":"US-MO-201","name":"Scott","lat":"37.029","lon":"-89.631"},{"key":"US-MO-203","name":"Shannon","lat":"37.146","lon":"-91.373"},{"key":"US-MO-205","name":"Shelby","lat":"39.793","lon":"-92.074"},{"key":"US-MO-207","name":"Stoddard","lat":"36.859","lon":"-89.995"},{"key":"US-MO-209","name":"Stone","lat":"36.722","lon":"-93.447"},{"key":"US-MO-211","name":"Sullivan","lat":"40.197","lon":"-93.131"},{"key":"US-MO-213","name":"Taney","lat":"36.672","lon":"-93.132"},{"key":"US-MO-215","name":"Texas","lat":"37.292","lon":"-91.982"},{"key":"US-MO-217","name":"Vernon","lat":"37.945","lon":"-94.259"},{"key":"US-MO-219","name":"Warren","lat":"38.731","lon":"-91.165"},{"key":"US-MO-221","name":"Washington","lat":"37.991","lon":"-90.798"},{"key":"US-MO-223","name":"Wayne","lat":"37.084","lon":"-90.447"},{"key":"US-MO-225","name":"Webster","lat":"37.276","lon":"-92.884"},{"key":"US-MO-227","name":"Worth","lat":"40.496","lon":"-94.429"},{"key":"US-MO-229","name":"Wright","lat":"37.276","lon":"-92.479"},{"key":"US-MO-510","name":"St. Louis City","lat":"38.654","lon":"-90.258"}]},"US-MS":{"key":"US-MS","name":"Mississippi","lon":"-89.876","lat":"32.571","counties":[{"key":"US-MS-001","name":"Adams","lat":"31.431","lon":"-91.395"},{"key":"US-MS-003","name":"Alcorn","lat":"34.860","lon":"-88.580"},{"key":"US-MS-005","name":"Amite","lat":"31.234","lon":"-90.897"},{"key":"US-MS-007","name":"Attala","lat":"33.077","lon":"-89.787"},{"key":"US-MS-009","name":"Benton","lat":"34.797","lon":"-89.181"},{"key":"US-MS-011","name":"Bolivar","lat":"33.809","lon":"-90.993"},{"key":"US-MS-013","name":"Calhoun","lat":"33.932","lon":"-89.330"},{"key":"US-MS-015","name":"Carroll","lat":"33.451","lon":"-89.919"},{"key":"US-MS-017","name":"Chickasaw","lat":"33.916","lon":"-88.923"},{"key":"US-MS-019","name":"Choctaw","lat":"33.446","lon":"-89.295"},{"key":"US-MS-021","name":"Claiborne","lat":"32.068","lon":"-90.911"},{"key":"US-MS-023","name":"Clarke","lat":"32.046","lon":"-88.697"},{"key":"US-MS-025","name":"Clay","lat":"33.597","lon":"-88.629"},{"key":"US-MS-027","name":"Coahoma","lat":"34.248","lon":"-90.711"},{"key":"US-MS-029","name":"Copiah","lat":"31.873","lon":"-90.253"},{"key":"US-MS-031","name":"Covington","lat":"31.597","lon":"-89.605"},{"key":"US-MS-033","name":"DeSoto","lat":"34.775","lon":"-90.059"},{"key":"US-MS-035","name":"Forrest","lat":"31.274","lon":"-89.289"},{"key":"US-MS-037","name":"Franklin","lat":"31.400","lon":"-90.984"},{"key":"US-MS-039","name":"George","lat":"30.846","lon":"-88.666"},{"key":"US-MS-041","name":"Greene","lat":"31.239","lon":"-88.656"},{"key":"US-MS-043","name":"Grenada","lat":"33.771","lon":"-89.797"},{"key":"US-MS-045","name":"Hancock","lat":"30.347","lon":"-89.506"},{"key":"US-MS-047","name":"Harrison","lat":"30.390","lon":"-89.078"},{"key":"US-MS-049","name":"Hinds","lat":"32.321","lon":"-90.392"},{"key":"US-MS-051","name":"Holmes","lat":"33.098","lon":"-90.043"},{"key":"US-MS-053","name":"Humphreys","lat":"33.159","lon":"-90.487"},{"key":"US-MS-055","name":"Issaquena","lat":"32.745","lon":"-90.988"},{"key":"US-MS-057","name":"Itawamba","lat":"34.289","lon":"-88.399"},{"key":"US-MS-059","name":"Jackson","lat":"30.410","lon":"-88.629"},{"key":"US-MS-061","name":"Jasper","lat":"31.974","lon":"-89.106"},{"key":"US-MS-063","name":"Jefferson","lat":"31.738","lon":"-91.159"},{"key":"US-MS-065","name":"Jefferson Davis","lat":"31.571","lon":"-89.748"},{"key":"US-MS-067","name":"Jones","lat":"31.633","lon":"-89.175"},{"key":"US-MS-069","name":"Kemper","lat":"32.746","lon":"-88.731"},{"key":"US-MS-071","name":"Lafayette","lat":"34.473","lon":"-89.394"},{"key":"US-MS-073","name":"Lamar","lat":"31.229","lon":"-89.475"},{"key":"US-MS-075","name":"Lauderdale","lat":"32.413","lon":"-88.683"},{"key":"US-MS-077","name":"Lawrence","lat":"31.540","lon":"-90.101"},{"key":"US-MS-079","name":"Leake","lat":"32.757","lon":"-89.477"},{"key":"US-MS-081","name":"Lee","lat":"34.300","lon":"-88.677"},{"key":"US-MS-083","name":"Leflore","lat":"33.526","lon":"-90.269"},{"key":"US-MS-085","name":"Lincoln","lat":"31.564","lon":"-90.441"},{"key":"US-MS-087","name":"Lowndes","lat":"33.610","lon":"-88.453"},{"key":"US-MS-089","name":"Madison","lat":"32.626","lon":"-90.090"},{"key":"US-MS-091","name":"Marion","lat":"31.224","lon":"-89.853"},{"key":"US-MS-093","name":"Marshall","lat":"34.592","lon":"-89.386"},{"key":"US-MS-095","name":"Monroe","lat":"33.771","lon":"-88.458"},{"key":"US-MS-097","name":"Montgomery","lat":"33.470","lon":"-89.528"},{"key":"US-MS-099","name":"Neshoba","lat":"32.769","lon":"-89.079"},{"key":"US-MS-101","name":"Newton","lat":"32.437","lon":"-89.113"},{"key":"US-MS-103","name":"Noxubee","lat":"33.092","lon":"-88.592"},{"key":"US-MS-105","name":"Oktibbeha","lat":"33.498","lon":"-88.841"},{"key":"US-MS-107","name":"Panola","lat":"34.378","lon":"-89.991"},{"key":"US-MS-109","name":"Pearl River","lat":"30.744","lon":"-89.729"},{"key":"US-MS-111","name":"Perry","lat":"31.183","lon":"-88.982"},{"key":"US-MS-113","name":"Pike","lat":"31.155","lon":"-90.418"},{"key":"US-MS-115","name":"Pontotoc","lat":"34.266","lon":"-89.007"},{"key":"US-MS-117","name":"Prentiss","lat":"34.626","lon":"-88.550"},{"key":"US-MS-119","name":"Quitman","lat":"34.307","lon":"-90.264"},{"key":"US-MS-121","name":"Rankin","lat":"32.335","lon":"-90.057"},{"key":"US-MS-123","name":"Scott","lat":"32.452","lon":"-89.575"},{"key":"US-MS-125","name":"Sharkey","lat":"32.821","lon":"-90.782"},{"key":"US-MS-127","name":"Simpson","lat":"31.902","lon":"-90.083"},{"key":"US-MS-129","name":"Smith","lat":"32.005","lon":"-89.528"},{"key":"US-MS-131","name":"Stone","lat":"30.783","lon":"-89.124"},{"key":"US-MS-133","name":"Sunflower","lat":"33.631","lon":"-90.604"},{"key":"US-MS-135","name":"Tallahatchie","lat":"33.856","lon":"-90.199"},{"key":"US-MS-137","name":"Tate","lat":"34.698","lon":"-90.086"},{"key":"US-MS-139","name":"Tippah","lat":"34.789","lon":"-88.902"},{"key":"US-MS-141","name":"Tishomingo","lat":"34.756","lon":"-88.235"},{"key":"US-MS-143","name":"Tunica","lat":"34.693","lon":"-90.379"},{"key":"US-MS-145","name":"Union","lat":"34.465","lon":"-88.993"},{"key":"US-MS-147","name":"Walthall","lat":"31.166","lon":"-90.072"},{"key":"US-MS-149","name":"Warren","lat":"32.288","lon":"-90.837"},{"key":"US-MS-151","name":"Washington","lat":"33.286","lon":"-91.004"},{"key":"US-MS-153","name":"Wayne","lat":"31.646","lon":"-88.679"},{"key":"US-MS-155","name":"Webster","lat":"33.547","lon":"-89.256"},{"key":"US-MS-157","name":"Wilkinson","lat":"31.271","lon":"-91.334"},{"key":"US-MS-159","name":"Winston","lat":"33.048","lon":"-89.035"},{"key":"US-MS-161","name":"Yalobusha","lat":"34.053","lon":"-89.743"},{"key":"US-MS-163","name":"Yazoo","lat":"32.697","lon":"-90.344"}]},"US-MT":{"key":"US-MT","name":"Montana","lon":"-110.045","lat":"46.680","counties":[{"key":"US-MT-001","name":"Beaverhead","lat":"45.463","lon":"-113.073"},{"key":"US-MT-003","name":"Big Horn","lat":"45.293","lon":"-107.877"},{"key":"US-MT-005","name":"Blaine","lat":"48.091","lon":"-108.950"},{"key":"US-MT-007","name":"Broadwater","lat":"46.343","lon":"-111.385"},{"key":"US-MT-009","name":"Carbon","lat":"45.292","lon":"-108.640"},{"key":"US-MT-011","name":"Carter","lat":"45.574","lon":"-104.537"},{"key":"US-MT-013","name":"Cascade","lat":"47.246","lon":"-111.225"},{"key":"US-MT-015","name":"Chouteau","lat":"47.630","lon":"-110.202"},{"key":"US-MT-017","name":"Custer","lat":"46.342","lon":"-105.467"},{"key":"US-MT-019","name":"Daniels","lat":"48.731","lon":"-105.573"},{"key":"US-MT-021","name":"Dawson","lat":"47.218","lon":"-104.678"},{"key":"US-MT-023","name":"Deer Lodge","lat":"45.965","lon":"-113.134"},{"key":"US-MT-025","name":"Fallon","lat":"46.314","lon":"-104.448"},{"key":"US-MT-027","name":"Fergus","lat":"47.542","lon":"-109.465"},{"key":"US-MT-029","name":"Flathead","lat":"48.303","lon":"-113.701"},{"key":"US-MT-031","name":"Gallatin","lat":"45.702","lon":"-111.394"},{"key":"US-MT-033","name":"Garfield","lat":"47.354","lon":"-107.580"},{"key":"US-MT-035","name":"Glacier","lat":"48.679","lon":"-113.577"},{"key":"US-MT-037","name":"Golden Valley","lat":"46.386","lon":"-109.104"},{"key":"US-MT-039","name":"Granite","lat":"46.315","lon":"-113.579"},{"key":"US-MT-041","name":"Hill","lat":"48.471","lon":"-110.035"},{"key":"US-MT-043","name":"Jefferson","lat":"46.109","lon":"-112.221"},{"key":"US-MT-045","name":"Judith Basin","lat":"46.804","lon":"-110.250"},{"key":"US-MT-047","name":"Lake","lat":"47.636","lon":"-113.973"},{"key":"US-MT-049","name":"Lewis and Clark","lat":"47.255","lon":"-112.417"},{"key":"US-MT-051","name":"Liberty","lat":"48.601","lon":"-111.032"},{"key":"US-MT-053","name":"Lincoln","lat":"48.293","lon":"-115.298"},{"key":"US-MT-055","name":"McCone","lat":"47.979","lon":"-105.849"},{"key":"US-MT-057","name":"Madison","lat":"45.583","lon":"-112.208"},{"key":"US-MT-059","name":"Meagher","lat":"46.692","lon":"-111.064"},{"key":"US-MT-061","name":"Mineral","lat":"47.248","lon":"-115.139"},{"key":"US-MT-063","name":"Missoula","lat":"47.199","lon":"-114.165"},{"key":"US-MT-065","name":"Musselshell","lat":"46.579","lon":"-108.112"},{"key":"US-MT-067","name":"Park","lat":"45.524","lon":"-110.522"},{"key":"US-MT-069","name":"Petroleum","lat":"47.157","lon":"-107.965"},{"key":"US-MT-071","name":"Phillips","lat":"47.819","lon":"-108.086"},{"key":"US-MT-073","name":"Pondera","lat":"48.272","lon":"-112.636"},{"key":"US-MT-075","name":"Powder River","lat":"45.461","lon":"-105.518"},{"key":"US-MT-077","name":"Powell","lat":"46.731","lon":"-112.778"},{"key":"US-MT-079","name":"Prairie","lat":"46.821","lon":"-105.266"},{"key":"US-MT-081","name":"Ravalli","lat":"46.072","lon":"-113.927"},{"key":"US-MT-083","name":"Richland","lat":"48.015","lon":"-104.632"},{"key":"US-MT-085","name":"Roosevelt","lat":"48.125","lon":"-104.938"},{"key":"US-MT-087","name":"Rosebud","lat":"46.534","lon":"-107.472"},{"key":"US-MT-089","name":"Sanders","lat":"47.710","lon":"-115.171"},{"key":"US-MT-091","name":"Sheridan","lat":"48.669","lon":"-104.329"},{"key":"US-MT-093","name":"Silver Bow","lat":"45.892","lon":"-112.665"},{"key":"US-MT-095","name":"Stillwater","lat":"45.633","lon":"-109.242"},{"key":"US-MT-097","name":"Sweet Grass","lat":"45.767","lon":"-109.889"},{"key":"US-MT-099","name":"Teton","lat":"47.732","lon":"-112.567"},{"key":"US-MT-101","name":"Toole","lat":"48.528","lon":"-111.970"},{"key":"US-MT-103","name":"Treasure","lat":"46.161","lon":"-107.398"},{"key":"US-MT-105","name":"Valley","lat":"48.026","lon":"-106.516"},{"key":"US-MT-107","name":"Wheatland","lat":"46.684","lon":"-109.992"},{"key":"US-MT-109","name":"Wibaux","lat":"47.034","lon":"-104.303"},{"key":"US-MT-111","name":"Yellowstone","lat":"46.005","lon":"-108.070"}]},"US-NC":{"key":"US-NC","name":"North Carolina","lon":"-79.861","lat":"35.171","counties":[{"key":"US-NC-001","name":"Alamance","lat":"36.048","lon":"-79.391"},{"key":"US-NC-003","name":"Alexander","lat":"35.913","lon":"-81.200"},{"key":"US-NC-005","name":"Alleghany","lat":"36.457","lon":"-81.162"},{"key":"US-NC-007","name":"Anson","lat":"35.054","lon":"-80.064"},{"key":"US-NC-009","name":"Ashe","lat":"36.399","lon":"-81.463"},{"key":"US-NC-011","name":"Avery","lat":"36.101","lon":"-81.922"},{"key":"US-NC-013","name":"Beaufort","lat":"35.559","lon":"-76.929"},{"key":"US-NC-015","name":"Bertie","lat":"35.983","lon":"-77.057"},{"key":"US-NC-017","name":"Bladen","lat":"34.630","lon":"-78.535"},{"key":"US-NC-019","name":"Brunswick","lat":"34.118","lon":"-78.308"},{"key":"US-NC-021","name":"Buncombe","lat":"35.602","lon":"-82.573"},{"key":"US-NC-023","name":"Burke","lat":"35.769","lon":"-81.714"},{"key":"US-NC-025","name":"Cabarrus","lat":"35.369","lon":"-80.612"},{"key":"US-NC-027","name":"Caldwell","lat":"35.953","lon":"-81.556"},{"key":"US-NC-029","name":"Camden","lat":"36.353","lon":"-76.167"},{"key":"US-NC-031","name":"Carteret","lat":"34.785","lon":"-76.738"},{"key":"US-NC-033","name":"Caswell","lat":"36.398","lon":"-79.401"},{"key":"US-NC-035","name":"Catawba","lat":"35.699","lon":"-81.170"},{"key":"US-NC-037","name":"Chatham","lat":"35.657","lon":"-79.198"},{"key":"US-NC-039","name":"Cherokee","lat":"35.188","lon":"-83.931"},{"key":"US-NC-041","name":"Chowan","lat":"36.200","lon":"-76.584"},{"key":"US-NC-043","name":"Clay","lat":"35.087","lon":"-83.730"},{"key":"US-NC-045","name":"Cleveland","lat":"35.389","lon":"-81.534"},{"key":"US-NC-047","name":"Columbus","lat":"34.252","lon":"-78.671"},{"key":"US-NC-049","name":"Craven","lat":"35.147","lon":"-77.102"},{"key":"US-NC-051","name":"Cumberland","lat":"35.083","lon":"-78.772"},{"key":"US-NC-053","name":"Currituck","lat":"36.349","lon":"-75.949"},{"key":"US-NC-055","name":"Dare","lat":"35.737","lon":"-75.673"},{"key":"US-NC-057","name":"Davidson","lat":"35.817","lon":"-80.285"},{"key":"US-NC-059","name":"Davie","lat":"35.872","lon":"-80.504"},{"key":"US-NC-061","name":"Duplin","lat":"34.919","lon":"-77.992"},{"key":"US-NC-063","name":"Durham","lat":"35.994","lon":"-78.862"},{"key":"US-NC-065","name":"Edgecombe","lat":"36.022","lon":"-77.596"},{"key":"US-NC-067","name":"Forsyth","lat":"36.114","lon":"-80.317"},{"key":"US-NC-069","name":"Franklin","lat":"36.107","lon":"-78.263"},{"key":"US-NC-071","name":"Gaston","lat":"35.300","lon":"-81.117"},{"key":"US-NC-073","name":"Gates","lat":"36.397","lon":"-76.769"},{"key":"US-NC-075","name":"Graham","lat":"35.347","lon":"-83.825"},{"key":"US-NC-077","name":"Granville","lat":"36.323","lon":"-78.610"},{"key":"US-NC-079","name":"Greene","lat":"35.467","lon":"-77.596"},{"key":"US-NC-081","name":"Guilford","lat":"36.052","lon":"-79.845"},{"key":"US-NC-083","name":"Halifax","lat":"36.204","lon":"-77.625"},{"key":"US-NC-085","name":"Harnett","lat":"35.317","lon":"-78.781"},{"key":"US-NC-087","name":"Haywood","lat":"35.550","lon":"-82.981"},{"key":"US-NC-089","name":"Henderson","lat":"35.350","lon":"-82.465"},{"key":"US-NC-091","name":"Hertford","lat":"36.438","lon":"-76.997"},{"key":"US-NC-093","name":"Hoke","lat":"35.062","lon":"-79.236"},{"key":"US-NC-095","name":"Hyde","lat":"35.510","lon":"-76.211"},{"key":"US-NC-097","name":"Iredell","lat":"35.707","lon":"-80.927"},{"key":"US-NC-099","name":"Jackson","lat":"35.282","lon":"-83.142"},{"key":"US-NC-101","name":"Johnston","lat":"35.524","lon":"-78.359"},{"key":"US-NC-103","name":"Jones","lat":"34.920","lon":"-77.242"},{"key":"US-NC-105","name":"Lee","lat":"35.504","lon":"-79.232"},{"key":"US-NC-107","name":"Lenoir","lat":"35.315","lon":"-77.546"},{"key":"US-NC-109","name":"Lincoln","lat":"35.492","lon":"-81.165"},{"key":"US-NC-111","name":"McDowell","lat":"35.756","lon":"-82.063"},{"key":"US-NC-113","name":"Macon","lat":"35.166","lon":"-83.443"},{"key":"US-NC-115","name":"Madison","lat":"35.842","lon":"-82.709"},{"key":"US-NC-117","name":"Martin","lat":"35.869","lon":"-77.026"},{"key":"US-NC-119","name":"Mecklenburg","lat":"35.263","lon":"-80.865"},{"key":"US-NC-121","name":"Mitchell","lat":"35.994","lon":"-82.187"},{"key":"US-NC-123","name":"Montgomery","lat":"35.275","lon":"-79.893"},{"key":"US-NC-125","name":"Moore","lat":"35.239","lon":"-79.379"},{"key":"US-NC-127","name":"Nash","lat":"36.023","lon":"-77.940"},{"key":"US-NC-129","name":"New Hanover","lat":"34.261","lon":"-77.909"},{"key":"US-NC-131","name":"Northampton","lat":"36.398","lon":"-77.388"},{"key":"US-NC-133","name":"Onslow","lat":"34.774","lon":"-77.282"},{"key":"US-NC-135","name":"Orange","lat":"36.028","lon":"-79.100"},{"key":"US-NC-137","name":"Pamlico","lat":"35.168","lon":"-76.785"},{"key":"US-NC-139","name":"Pasquotank","lat":"36.325","lon":"-76.289"},{"key":"US-NC-141","name":"Pender","lat":"34.476","lon":"-77.991"},{"key":"US-NC-143","name":"Perquimans","lat":"36.193","lon":"-76.416"},{"key":"US-NC-145","name":"Person","lat":"36.372","lon":"-78.976"},{"key":"US-NC-147","name":"Pitt","lat":"35.558","lon":"-77.318"},{"key":"US-NC-149","name":"Polk","lat":"35.308","lon":"-82.174"},{"key":"US-NC-151","name":"Randolph","lat":"35.785","lon":"-79.861"},{"key":"US-NC-153","name":"Richmond","lat":"35.030","lon":"-79.736"},{"key":"US-NC-155","name":"Robeson","lat":"34.587","lon":"-78.994"},{"key":"US-NC-157","name":"Rockingham","lat":"36.381","lon":"-79.705"},{"key":"US-NC-159","name":"Rowan","lat":"35.694","lon":"-80.498"},{"key":"US-NC-161","name":"Rutherford","lat":"35.430","lon":"-81.994"},{"key":"US-NC-163","name":"Sampson","lat":"34.919","lon":"-78.452"},{"key":"US-NC-165","name":"Scotland","lat":"34.883","lon":"-79.455"},{"key":"US-NC-167","name":"Stanly","lat":"35.246","lon":"-80.239"},{"key":"US-NC-169","name":"Stokes","lat":"36.361","lon":"-80.285"},{"key":"US-NC-171","name":"Surry","lat":"36.338","lon":"-80.711"},{"key":"US-NC-173","name":"Swain","lat":"35.482","lon":"-83.504"},{"key":"US-NC-175","name":"Transylvania","lat":"35.198","lon":"-82.818"},{"key":"US-NC-177","name":"Tyrrell","lat":"35.711","lon":"-76.194"},{"key":"US-NC-179","name":"Union","lat":"35.059","lon":"-80.554"},{"key":"US-NC-181","name":"Vance","lat":"36.355","lon":"-78.442"},{"key":"US-NC-183","name":"Wake","lat":"35.861","lon":"-78.615"},{"key":"US-NC-185","name":"Warren","lat":"36.296","lon":"-78.102"},{"key":"US-NC-187","name":"Washington","lat":"35.839","lon":"-76.695"},{"key":"US-NC-189","name":"Watauga","lat":"36.265","lon":"-81.740"},{"key":"US-NC-191","name":"Wayne","lat":"35.304","lon":"-78.052"},{"key":"US-NC-193","name":"Wilkes","lat":"36.214","lon":"-81.248"},{"key":"US-NC-195","name":"Wilson","lat":"35.720","lon":"-77.985"},{"key":"US-NC-197","name":"Yadkin","lat":"36.206","lon":"-80.618"},{"key":"US-NC-199","name":"Yancey","lat":"35.900","lon":"-82.281"}]},"US-ND":{"key":"US-ND","name":"North Dakota","lon":"-100.302","lat":"47.468","counties":[{"key":"US-ND-001","name":"Adams","lat":"46.087","lon":"-102.484"},{"key":"US-ND-003","name":"Barnes","lat":"46.945","lon":"-98.088"},{"key":"US-ND-005","name":"Benson","lat":"48.017","lon":"-98.990"},{"key":"US-ND-007","name":"Billings","lat":"46.989","lon":"-103.361"},{"key":"US-ND-009","name":"Bottineau","lat":"48.772","lon":"-100.810"},{"key":"US-ND-011","name":"Bowman","lat":"46.113","lon":"-103.432"},{"key":"US-ND-013","name":"Burke","lat":"48.763","lon":"-102.527"},{"key":"US-ND-015","name":"Burleigh","lat":"46.893","lon":"-100.659"},{"key":"US-ND-017","name":"Cass","lat":"46.942","lon":"-96.912"},{"key":"US-ND-019","name":"Cavalier","lat":"48.714","lon":"-98.478"},{"key":"US-ND-021","name":"Dickey","lat":"46.135","lon":"-98.473"},{"key":"US-ND-023","name":"Divide","lat":"48.808","lon":"-103.685"},{"key":"US-ND-025","name":"Dunn","lat":"47.574","lon":"-102.464"},{"key":"US-ND-027","name":"Eddy","lat":"47.750","lon":"-98.895"},{"key":"US-ND-029","name":"Emmons","lat":"46.287","lon":"-100.413"},{"key":"US-ND-031","name":"Foster","lat":"47.447","lon":"-98.825"},{"key":"US-ND-033","name":"Golden Valley","lat":"46.962","lon":"-103.910"},{"key":"US-ND-035","name":"Grand Forks","lat":"47.920","lon":"-97.180"},{"key":"US-ND-037","name":"Grant","lat":"46.112","lon":"-101.568"},{"key":"US-ND-039","name":"Griggs","lat":"47.453","lon":"-98.165"},{"key":"US-ND-041","name":"Hettinger","lat":"46.403","lon":"-102.465"},{"key":"US-ND-043","name":"Kidder","lat":"46.945","lon":"-99.779"},{"key":"US-ND-045","name":"LaMoure","lat":"46.437","lon":"-98.564"},{"key":"US-ND-047","name":"Logan","lat":"46.448","lon":"-99.436"},{"key":"US-ND-049","name":"McHenry","lat":"48.241","lon":"-100.675"},{"key":"US-ND-051","name":"McIntosh","lat":"46.126","lon":"-99.459"},{"key":"US-ND-053","name":"McKenzie","lat":"47.986","lon":"-103.337"},{"key":"US-ND-055","name":"McLean","lat":"47.536","lon":"-101.555"},{"key":"US-ND-057","name":"Mercer","lat":"47.414","lon":"-101.721"},{"key":"US-ND-059","name":"Morton","lat":"46.563","lon":"-100.920"},{"key":"US-ND-061","name":"Mountrail","lat":"48.075","lon":"-102.467"},{"key":"US-ND-063","name":"Nelson","lat":"47.895","lon":"-98.140"},{"key":"US-ND-065","name":"Oliver","lat":"47.158","lon":"-101.191"},{"key":"US-ND-067","name":"Pembina","lat":"48.756","lon":"-97.262"},{"key":"US-ND-069","name":"Pierce","lat":"48.241","lon":"-99.954"},{"key":"US-ND-071","name":"Ramsey","lat":"48.072","lon":"-98.832"},{"key":"US-ND-073","name":"Ransom","lat":"46.442","lon":"-97.678"},{"key":"US-ND-075","name":"Renville","lat":"48.684","lon":"-101.610"},{"key":"US-ND-077","name":"Richland","lat":"46.328","lon":"-96.735"},{"key":"US-ND-079","name":"Rolette","lat":"48.794","lon":"-99.887"},{"key":"US-ND-081","name":"Sargent","lat":"46.126","lon":"-97.606"},{"key":"US-ND-083","name":"Sheridan","lat":"47.550","lon":"-100.383"},{"key":"US-ND-085","name":"Sioux","lat":"46.135","lon":"-101.324"},{"key":"US-ND-087","name":"Slope","lat":"46.440","lon":"-103.383"},{"key":"US-ND-089","name":"Stark","lat":"46.789","lon":"-102.611"},{"key":"US-ND-091","name":"Steele","lat":"47.463","lon":"-97.798"},{"key":"US-ND-093","name":"Stutsman","lat":"46.964","lon":"-98.960"},{"key":"US-ND-095","name":"Towner","lat":"48.638","lon":"-99.247"},{"key":"US-ND-097","name":"Traill","lat":"47.453","lon":"-96.922"},{"key":"US-ND-099","name":"Walsh","lat":"48.349","lon":"-97.352"},{"key":"US-ND-101","name":"Ward","lat":"48.249","lon":"-101.606"},{"key":"US-ND-103","name":"Wells","lat":"47.592","lon":"-99.676"},{"key":"US-ND-105","name":"Williams","lat":"48.164","lon":"-103.549"}]},"US-NE":{"key":"US-NE","name":"Nebraska","lon":"-99.681","lat":"41.501","counties":[{"key":"US-NE-001","name":"Adams","lat":"40.503","lon":"-98.495"},{"key":"US-NE-003","name":"Antelope","lat":"42.152","lon":"-98.072"},{"key":"US-NE-005","name":"Arthur","lat":"41.624","lon":"-101.580"},{"key":"US-NE-007","name":"Banner","lat":"41.546","lon":"-103.780"},{"key":"US-NE-009","name":"Blaine","lat":"41.852","lon":"-99.953"},{"key":"US-NE-011","name":"Boone","lat":"41.716","lon":"-98.020"},{"key":"US-NE-013","name":"Box Butte","lat":"42.209","lon":"-103.003"},{"key":"US-NE-015","name":"Boyd","lat":"42.861","lon":"-98.748"},{"key":"US-NE-017","name":"Brown","lat":"42.693","lon":"-99.939"},{"key":"US-NE-019","name":"Buffalo","lat":"40.754","lon":"-99.069"},{"key":"US-NE-021","name":"Burt","lat":"41.870","lon":"-96.247"},{"key":"US-NE-023","name":"Butler","lat":"41.279","lon":"-97.119"},{"key":"US-NE-025","name":"Cass","lat":"40.947","lon":"-96.052"},{"key":"US-NE-027","name":"Cedar","lat":"42.713","lon":"-97.257"},{"key":"US-NE-029","name":"Chase","lat":"40.525","lon":"-101.668"},{"key":"US-NE-031","name":"Cherry","lat":"42.598","lon":"-101.096"},{"key":"US-NE-033","name":"Cheyenne","lat":"41.159","lon":"-102.965"},{"key":"US-NE-035","name":"Clay","lat":"40.496","lon":"-98.059"},{"key":"US-NE-037","name":"Colfax","lat":"41.519","lon":"-97.074"},{"key":"US-NE-039","name":"Cuming","lat":"41.897","lon":"-96.763"},{"key":"US-NE-041","name":"Custer","lat":"41.332","lon":"-99.680"},{"key":"US-NE-043","name":"Dakota","lat":"42.426","lon":"-96.526"},{"key":"US-NE-045","name":"Dawes","lat":"42.668","lon":"-103.177"},{"key":"US-NE-047","name":"Dawson","lat":"40.810","lon":"-99.757"},{"key":"US-NE-049","name":"Deuel","lat":"41.061","lon":"-102.334"},{"key":"US-NE-051","name":"Dixon","lat":"42.562","lon":"-96.822"},{"key":"US-NE-053","name":"Dodge","lat":"41.527","lon":"-96.639"},{"key":"US-NE-055","name":"Douglas","lat":"41.272","lon":"-96.099"},{"key":"US-NE-057","name":"Dundy","lat":"40.207","lon":"-101.620"},{"key":"US-NE-059","name":"Fillmore","lat":"40.536","lon":"-97.628"},{"key":"US-NE-061","name":"Franklin","lat":"40.148","lon":"-98.974"},{"key":"US-NE-063","name":"Frontier","lat":"40.504","lon":"-100.397"},{"key":"US-NE-065","name":"Furnas","lat":"40.153","lon":"-99.878"},{"key":"US-NE-067","name":"Gage","lat":"40.215","lon":"-96.682"},{"key":"US-NE-069","name":"Garden","lat":"41.604","lon":"-102.404"},{"key":"US-NE-071","name":"Garfield","lat":"41.910","lon":"-98.976"},{"key":"US-NE-073","name":"Gosper","lat":"40.526","lon":"-99.833"},{"key":"US-NE-075","name":"Grant","lat":"41.881","lon":"-101.773"},{"key":"US-NE-077","name":"Greeley","lat":"41.585","lon":"-98.533"},{"key":"US-NE-079","name":"Hall","lat":"40.843","lon":"-98.514"},{"key":"US-NE-081","name":"Hamilton","lat":"40.956","lon":"-98.026"},{"key":"US-NE-083","name":"Harlan","lat":"40.151","lon":"-99.419"},{"key":"US-NE-085","name":"Hayes","lat":"40.503","lon":"-101.016"},{"key":"US-NE-087","name":"Hitchcock","lat":"40.218","lon":"-101.059"},{"key":"US-NE-089","name":"Holt","lat":"42.632","lon":"-98.753"},{"key":"US-NE-091","name":"Hooker","lat":"41.957","lon":"-101.124"},{"key":"US-NE-093","name":"Howard","lat":"41.223","lon":"-98.507"},{"key":"US-NE-095","name":"Jefferson","lat":"40.176","lon":"-97.151"},{"key":"US-NE-097","name":"Johnson","lat":"40.365","lon":"-96.226"},{"key":"US-NE-099","name":"Kearney","lat":"40.588","lon":"-98.915"},{"key":"US-NE-101","name":"Keith","lat":"41.175","lon":"-101.647"},{"key":"US-NE-103","name":"Keya Paha","lat":"42.817","lon":"-99.738"},{"key":"US-NE-105","name":"Kimball","lat":"41.178","lon":"-103.770"},{"key":"US-NE-107","name":"Knox","lat":"42.715","lon":"-97.915"},{"key":"US-NE-109","name":"Lancaster","lat":"40.804","lon":"-96.691"},{"key":"US-NE-111","name":"Lincoln","lat":"41.009","lon":"-100.709"},{"key":"US-NE-113","name":"Logan","lat":"41.536","lon":"-100.489"},{"key":"US-NE-115","name":"Loup","lat":"41.890","lon":"-99.483"},{"key":"US-NE-117","name":"McPherson","lat":"41.526","lon":"-101.024"},{"key":"US-NE-119","name":"Madison","lat":"41.904","lon":"-97.616"},{"key":"US-NE-121","name":"Merrick","lat":"41.153","lon":"-97.990"},{"key":"US-NE-123","name":"Morrill","lat":"41.764","lon":"-103.017"},{"key":"US-NE-125","name":"Nance","lat":"41.402","lon":"-97.956"},{"key":"US-NE-127","name":"Nemaha","lat":"40.389","lon":"-95.747"},{"key":"US-NE-129","name":"Nuckolls","lat":"40.171","lon":"-98.029"},{"key":"US-NE-131","name":"Otoe","lat":"40.640","lon":"-96.013"},{"key":"US-NE-133","name":"Pawnee","lat":"40.135","lon":"-96.205"},{"key":"US-NE-135","name":"Perkins","lat":"40.863","lon":"-101.562"},{"key":"US-NE-137","name":"Phelps","lat":"40.581","lon":"-99.400"},{"key":"US-NE-139","name":"Pierce","lat":"42.283","lon":"-97.593"},{"key":"US-NE-141","name":"Platte","lat":"41.507","lon":"-97.526"},{"key":"US-NE-143","name":"Polk","lat":"41.256","lon":"-97.563"},{"key":"US-NE-145","name":"Red Willow","lat":"40.137","lon":"-100.491"},{"key":"US-NE-147","name":"Richardson","lat":"40.119","lon":"-95.588"},{"key":"US-NE-149","name":"Rock","lat":"42.620","lon":"-99.438"},{"key":"US-NE-151","name":"Saline","lat":"40.537","lon":"-97.114"},{"key":"US-NE-153","name":"Sarpy","lat":"41.123","lon":"-96.079"},{"key":"US-NE-155","name":"Saunders","lat":"41.264","lon":"-96.593"},{"key":"US-NE-157","name":"Scotts Bluff","lat":"41.870","lon":"-103.713"},{"key":"US-NE-159","name":"Seward","lat":"40.866","lon":"-97.087"},{"key":"US-NE-161","name":"Sheridan","lat":"42.457","lon":"-102.532"},{"key":"US-NE-163","name":"Sherman","lat":"41.235","lon":"-98.956"},{"key":"US-NE-165","name":"Sioux","lat":"42.462","lon":"-103.714"},{"key":"US-NE-167","name":"Stanton","lat":"41.939","lon":"-97.188"},{"key":"US-NE-169","name":"Thayer","lat":"40.173","lon":"-97.580"},{"key":"US-NE-171","name":"Thomas","lat":"41.914","lon":"-100.485"},{"key":"US-NE-173","name":"Thurston","lat":"42.161","lon":"-96.494"},{"key":"US-NE-175","name":"Valley","lat":"41.556","lon":"-98.978"},{"key":"US-NE-177","name":"Washington","lat":"41.515","lon":"-96.125"},{"key":"US-NE-179","name":"Wayne","lat":"42.189","lon":"-97.071"},{"key":"US-NE-181","name":"Webster","lat":"40.176","lon":"-98.515"},{"key":"US-NE-183","name":"Wheeler","lat":"41.927","lon":"-98.478"},{"key":"US-NE-185","name":"York","lat":"40.822","lon":"-97.638"}]},"US-NH":{"key":"US-NH","name":"New Hampshire","lon":"-71.566","lat":"44.001","counties":[{"key":"US-NH-001","name":"Belknap","lat":"43.543","lon":"-71.567"},{"key":"US-NH-003","name":"Carroll","lat":"43.830","lon":"-71.193"},{"key":"US-NH-005","name":"Cheshire","lat":"42.953","lon":"-72.395"},{"key":"US-NH-007","name":"Coos","lat":"44.841","lon":"-71.457"},{"key":"US-NH-009","name":"Grafton","lat":"43.937","lon":"-71.970"},{"key":"US-NH-011","name":"Hillsborough","lat":"42.906","lon":"-71.564"},{"key":"US-NH-013","name":"Merrimack","lat":"43.355","lon":"-71.644"},{"key":"US-NH-015","name":"Rockingham","lat":"42.973","lon":"-71.002"},{"key":"US-NH-017","name":"Strafford","lat":"43.316","lon":"-70.938"},{"key":"US-NH-019","name":"Sullivan","lat":"43.362","lon":"-72.301"}]},"US-NJ":{"key":"US-NJ","name":"New Jersey","lon":"-74.724","lat":"40.073","counties":[{"key":"US-NJ-001","name":"Atlantic","lat":"39.449","lon":"-74.621"},{"key":"US-NJ-003","name":"Bergen","lat":"40.888","lon":"-74.094"},{"key":"US-NJ-005","name":"Burlington","lat":"39.882","lon":"-74.735"},{"key":"US-NJ-007","name":"Camden","lat":"39.824","lon":"-74.997"},{"key":"US-NJ-009","name":"Cape May","lat":"39.166","lon":"-74.788"},{"key":"US-NJ-011","name":"Cumberland","lat":"39.337","lon":"-75.148"},{"key":"US-NJ-013","name":"Essex","lat":"40.790","lon":"-74.257"},{"key":"US-NJ-015","name":"Gloucester","lat":"39.758","lon":"-75.270"},{"key":"US-NJ-017","name":"Hudson","lat":"40.755","lon":"-74.083"},{"key":"US-NJ-019","name":"Hunterdon","lat":"40.607","lon":"-74.940"},{"key":"US-NJ-021","name":"Mercer","lat":"40.246","lon":"-74.665"},{"key":"US-NJ-023","name":"Middlesex","lat":"40.465","lon":"-74.423"},{"key":"US-NJ-025","name":"Monmouth","lat":"40.268","lon":"-74.200"},{"key":"US-NJ-027","name":"Morris","lat":"40.856","lon":"-74.494"},{"key":"US-NJ-029","name":"Ocean","lat":"39.910","lon":"-74.216"},{"key":"US-NJ-031","name":"Passaic","lat":"40.960","lon":"-74.263"},{"key":"US-NJ-033","name":"Salem","lat":"39.666","lon":"-75.370"},{"key":"US-NJ-035","name":"Somerset","lat":"40.591","lon":"-74.556"},{"key":"US-NJ-037","name":"Sussex","lat":"41.106","lon":"-74.746"},{"key":"US-NJ-039","name":"Union","lat":"40.664","lon":"-74.330"},{"key":"US-NJ-041","name":"Warren","lat":"40.797","lon":"-75.042"}]},"US-NM":{"key":"US-NM","name":"New Mexico","lon":"-106.026","lat":"34.166","counties":[{"key":"US-NM-001","name":"Bernalillo","lat":"35.101","lon":"-106.622"},{"key":"US-NM-003","name":"Catron","lat":"33.861","lon":"-108.344"},{"key":"US-NM-005","name":"Chaves","lat":"33.342","lon":"-104.413"},{"key":"US-NM-006","name":"Cibola","lat":"34.971","lon":"-107.887"},{"key":"US-NM-007","name":"Colfax","lat":"36.635","lon":"-105.154"},{"key":"US-NM-009","name":"Curry","lat":"34.536","lon":"-103.270"},{"key":"US-NM-011","name":"De Baca","lat":"34.476","lon":"-104.308"},{"key":"US-NM-013","name":"Dona Ana","lat":"32.063","lon":"-106.670"},{"key":"US-NM-015","name":"Eddy","lat":"32.443","lon":"-104.242"},{"key":"US-NM-017","name":"Grant","lat":"32.867","lon":"-107.970"},{"key":"US-NM-019","name":"Guadalupe","lat":"34.868","lon":"-104.792"},{"key":"US-NM-021","name":"Harding","lat":"35.943","lon":"-104.263"},{"key":"US-NM-023","name":"Hidalgo","lat":"32.120","lon":"-108.740"},{"key":"US-NM-025","name":"Lea","lat":"32.805","lon":"-103.355"},{"key":"US-NM-027","name":"Lincoln","lat":"33.575","lon":"-105.495"},{"key":"US-NM-028","name":"Los Alamos","lat":"35.829","lon":"-106.277"},{"key":"US-NM-029","name":"Luna","lat":"32.217","lon":"-107.724"},{"key":"US-NM-031","name":"McKinley","lat":"35.642","lon":"-108.203"},{"key":"US-NM-033","name":"Mora","lat":"35.967","lon":"-104.818"},{"key":"US-NM-035","name":"Otero","lat":"32.663","lon":"-105.727"},{"key":"US-NM-037","name":"Quay","lat":"35.072","lon":"-103.557"},{"key":"US-NM-039","name":"Rio Arriba","lat":"36.496","lon":"-106.464"},{"key":"US-NM-041","name":"Roosevelt","lat":"34.042","lon":"-103.433"},{"key":"US-NM-043","name":"Sandoval","lat":"35.670","lon":"-106.765"},{"key":"US-NM-045","name":"San Juan","lat":"36.605","lon":"-107.902"},{"key":"US-NM-047","name":"San Miguel","lat":"35.657","lon":"-104.995"},{"key":"US-NM-049","name":"Santa Fe","lat":"35.672","lon":"-106.085"},{"key":"US-NM-051","name":"Sierra","lat":"32.971","lon":"-107.704"},{"key":"US-NM-053","name":"Socorro","lat":"34.136","lon":"-106.839"},{"key":"US-NM-055","name":"Taos","lat":"36.585","lon":"-105.563"},{"key":"US-NM-057","name":"Torrance","lat":"34.763","lon":"-106.006"},{"key":"US-NM-059","name":"Union","lat":"36.406","lon":"-103.533"},{"key":"US-NM-061","name":"Valencia","lat":"34.752","lon":"-106.787"}]},"US-NV":{"key":"US-NV","name":"Nevada","lon":"-117.023","lat":"38.502","counties":[{"key":"US-NV-001","name":"Churchill","lat":"39.522","lon":"-117.873"},{"key":"US-NV-003","name":"Clark","lat":"35.899","lon":"-114.702"},{"key":"US-NV-005","name":"Douglas","lat":"38.917","lon":"-119.588"},{"key":"US-NV-007","name":"Elko","lat":"41.281","lon":"-115.376"},{"key":"US-NV-009","name":"Esmeralda","lat":"37.751","lon":"-117.632"},{"key":"US-NV-011","name":"Eureka","lat":"39.866","lon":"-115.961"},{"key":"US-NV-013","name":"Humboldt","lat":"41.377","lon":"-117.889"},{"key":"US-NV-015","name":"Lander","lat":"39.606","lon":"-117.507"},{"key":"US-NV-017","name":"Lincoln","lat":"37.560","lon":"-114.521"},{"key":"US-NV-019","name":"Lyon","lat":"39.192","lon":"-119.271"},{"key":"US-NV-021","name":"Mineral","lat":"38.572","lon":"-118.534"},{"key":"US-NV-023","name":"Nye","lat":"37.589","lon":"-116.433"},{"key":"US-NV-027","name":"Pershing","lat":"40.486","lon":"-118.357"},{"key":"US-NV-029","name":"Storey","lat":"39.507","lon":"-119.521"},{"key":"US-NV-031","name":"Washoe","lat":"39.780","lon":"-119.626"},{"key":"US-NV-033","name":"White Pine","lat":"39.719","lon":"-115.580"},{"key":"US-NV-510","name":"Carson City","lat":"39.153","lon":"-119.715"}]},"US-NY":{"key":"US-NY","name":"New York","lon":"-75.770","lat":"42.747","counties":[{"key":"US-NY-001","name":"Albany","lat":"42.647","lon":"-73.916"},{"key":"US-NY-003","name":"Allegany","lat":"42.291","lon":"-78.049"},{"key":"US-NY-005","name":"Bronx","lat":"40.860","lon":"-73.851"},{"key":"US-NY-007","name":"Broome","lat":"42.195","lon":"-75.836"},{"key":"US-NY-009","name":"Cattaraugus","lat":"42.426","lon":"-78.736"},{"key":"US-NY-011","name":"Cayuga","lat":"42.998","lon":"-76.585"},{"key":"US-NY-013","name":"Chautauqua","lat":"42.372","lon":"-79.362"},{"key":"US-NY-015","name":"Chemung","lat":"42.158","lon":"-76.762"},{"key":"US-NY-017","name":"Chenango","lat":"42.510","lon":"-75.457"},{"key":"US-NY-019","name":"Clinton","lat":"44.667","lon":"-73.520"},{"key":"US-NY-021","name":"Columbia","lat":"42.263","lon":"-73.736"},{"key":"US-NY-023","name":"Cortland","lat":"42.565","lon":"-76.098"},{"key":"US-NY-025","name":"Delaware","lat":"42.203","lon":"-75.117"},{"key":"US-NY-027","name":"Dutchess","lat":"41.760","lon":"-73.843"},{"key":"US-NY-029","name":"Erie","lat":"42.773","lon":"-78.752"},{"key":"US-NY-031","name":"Essex","lat":"44.166","lon":"-73.616"},{"key":"US-NY-033","name":"Franklin","lat":"44.680","lon":"-74.333"},{"key":"US-NY-035","name":"Fulton","lat":"43.102","lon":"-74.494"},{"key":"US-NY-037","name":"Genesee","lat":"42.991","lon":"-78.166"},{"key":"US-NY-039","name":"Greene","lat":"42.307","lon":"-74.040"},{"key":"US-NY-041","name":"Hamilton","lat":"43.670","lon":"-74.305"},{"key":"US-NY-043","name":"Herkimer","lat":"43.196","lon":"-74.973"},{"key":"US-NY-045","name":"Jefferson","lat":"44.002","lon":"-76.114"},{"key":"US-NY-047","name":"Kings","lat":"40.661","lon":"-73.946"},{"key":"US-NY-049","name":"Lewis","lat":"43.804","lon":"-75.539"},{"key":"US-NY-051","name":"Livingston","lat":"42.750","lon":"-77.788"},{"key":"US-NY-053","name":"Madison","lat":"43.018","lon":"-75.687"},{"key":"US-NY-055","name":"Monroe","lat":"43.124","lon":"-77.677"},{"key":"US-NY-057","name":"Montgomery","lat":"42.917","lon":"-74.437"},{"key":"US-NY-059","name":"Nassau","lat":"40.726","lon":"-73.636"},{"key":"US-NY-061","name":"New York","lat":"40.765","lon":"-73.969"},{"key":"US-NY-063","name":"Niagara","lat":"43.126","lon":"-78.691"},{"key":"US-NY-065","name":"Oneida","lat":"43.179","lon":"-75.453"},{"key":"US-NY-067","name":"Onondaga","lat":"43.123","lon":"-76.126"},{"key":"US-NY-069","name":"Ontario","lat":"42.852","lon":"-77.340"},{"key":"US-NY-071","name":"Orange","lat":"41.477","lon":"-74.352"},{"key":"US-NY-073","name":"Orleans","lat":"43.274","lon":"-78.219"},{"key":"US-NY-075","name":"Oswego","lat":"43.317","lon":"-76.159"},{"key":"US-NY-077","name":"Otsego","lat":"42.568","lon":"-75.200"},{"key":"US-NY-079","name":"Putnam","lat":"41.415","lon":"-73.758"},{"key":"US-NY-081","name":"Queens","lat":"40.688","lon":"-73.818"},{"key":"US-NY-083","name":"Rensselaer","lat":"42.743","lon":"-73.596"},{"key":"US-NY-085","name":"Richmond","lat":"40.581","lon":"-74.157"},{"key":"US-NY-087","name":"Rockland","lat":"41.157","lon":"-74.004"},{"key":"US-NY-089","name":"St. Lawrence","lat":"44.614","lon":"-75.159"},{"key":"US-NY-091","name":"Saratoga","lat":"43.082","lon":"-73.772"},{"key":"US-NY-093","name":"Schenectady","lat":"42.819","lon":"-74.048"},{"key":"US-NY-095","name":"Schoharie","lat":"42.598","lon":"-74.373"},{"key":"US-NY-097","name":"Schuyler","lat":"42.367","lon":"-76.834"},{"key":"US-NY-099","name":"Seneca","lat":"42.796","lon":"-76.821"},{"key":"US-NY-101","name":"Steuben","lat":"42.320","lon":"-77.297"},{"key":"US-NY-103","name":"Suffolk","lat":"40.971","lon":"-72.623"},{"key":"US-NY-105","name":"Sullivan","lat":"41.612","lon":"-74.775"},{"key":"US-NY-107","name":"Tioga","lat":"42.246","lon":"-76.270"},{"key":"US-NY-109","name":"Tompkins","lat":"42.441","lon":"-76.402"},{"key":"US-NY-111","name":"Ulster","lat":"41.797","lon":"-74.178"},{"key":"US-NY-113","name":"Warren","lat":"43.513","lon":"-73.641"},{"key":"US-NY-115","name":"Washington","lat":"43.456","lon":"-73.481"},{"key":"US-NY-117","name":"Wayne","lat":"43.195","lon":"-77.062"},{"key":"US-NY-119","name":"Westchester","lat":"41.077","lon":"-73.794"},{"key":"US-NY-121","name":"Wyoming","lat":"42.671","lon":"-78.142"},{"key":"US-NY-123","name":"Yates","lat":"42.622","lon":"-77.115"}]},"US-OH":{"key":"US-OH","name":"Ohio","lon":"-82.669","lat":"40.365","counties":[{"key":"US-OH-001","name":"Adams","lat":"38.799","lon":"-83.476"},{"key":"US-OH-003","name":"Allen","lat":"40.785","lon":"-84.134"},{"key":"US-OH-005","name":"Ashland","lat":"40.812","lon":"-82.289"},{"key":"US-OH-007","name":"Ashtabula","lat":"41.826","lon":"-80.732"},{"key":"US-OH-009","name":"Athens","lat":"39.336","lon":"-82.018"},{"key":"US-OH-011","name":"Auglaize","lat":"40.539","lon":"-84.236"},{"key":"US-OH-013","name":"Belmont","lat":"40.013","lon":"-80.870"},{"key":"US-OH-015","name":"Brown","lat":"38.900","lon":"-83.872"},{"key":"US-OH-017","name":"Butler","lat":"39.418","lon":"-84.495"},{"key":"US-OH-019","name":"Carroll","lat":"40.597","lon":"-81.102"},{"key":"US-OH-021","name":"Champaign","lat":"40.145","lon":"-83.759"},{"key":"US-OH-023","name":"Clark","lat":"39.911","lon":"-83.852"},{"key":"US-OH-025","name":"Clermont","lat":"39.076","lon":"-84.206"},{"key":"US-OH-027","name":"Clinton","lat":"39.386","lon":"-83.837"},{"key":"US-OH-029","name":"Columbiana","lat":"40.761","lon":"-80.781"},{"key":"US-OH-031","name":"Coshocton","lat":"40.321","lon":"-81.884"},{"key":"US-OH-033","name":"Crawford","lat":"40.831","lon":"-82.888"},{"key":"US-OH-035","name":"Cuyahoga","lat":"41.443","lon":"-81.650"},{"key":"US-OH-037","name":"Darke","lat":"40.120","lon":"-84.588"},{"key":"US-OH-039","name":"Defiance","lat":"41.319","lon":"-84.518"},{"key":"US-OH-041","name":"Delaware","lat":"40.226","lon":"-83.014"},{"key":"US-OH-043","name":"Erie","lat":"41.434","lon":"-82.598"},{"key":"US-OH-045","name":"Fairfield","lat":"39.795","lon":"-82.665"},{"key":"US-OH-047","name":"Fayette","lat":"39.559","lon":"-83.446"},{"key":"US-OH-049","name":"Franklin","lat":"39.985","lon":"-82.994"},{"key":"US-OH-051","name":"Fulton","lat":"41.578","lon":"-84.085"},{"key":"US-OH-053","name":"Gallia","lat":"38.798","lon":"-82.264"},{"key":"US-OH-055","name":"Geauga","lat":"41.508","lon":"-81.239"},{"key":"US-OH-057","name":"Greene","lat":"39.708","lon":"-83.973"},{"key":"US-OH-059","name":"Guernsey","lat":"40.030","lon":"-81.478"},{"key":"US-OH-061","name":"Hamilton","lat":"39.198","lon":"-84.471"},{"key":"US-OH-063","name":"Hancock","lat":"41.038","lon":"-83.638"},{"key":"US-OH-065","name":"Hardin","lat":"40.656","lon":"-83.649"},{"key":"US-OH-067","name":"Harrison","lat":"40.307","lon":"-81.075"},{"key":"US-OH-069","name":"Henry","lat":"41.364","lon":"-84.066"},{"key":"US-OH-071","name":"Highland","lat":"39.226","lon":"-83.555"},{"key":"US-OH-073","name":"Hocking","lat":"39.510","lon":"-82.442"},{"key":"US-OH-075","name":"Holmes","lat":"40.572","lon":"-81.953"},{"key":"US-OH-077","name":"Huron","lat":"41.157","lon":"-82.617"},{"key":"US-OH-079","name":"Jackson","lat":"39.016","lon":"-82.600"},{"key":"US-OH-081","name":"Jefferson","lat":"40.379","lon":"-80.723"},{"key":"US-OH-083","name":"Knox","lat":"40.386","lon":"-82.422"},{"key":"US-OH-085","name":"Lake","lat":"41.691","lon":"-81.298"},{"key":"US-OH-087","name":"Lawrence","lat":"38.537","lon":"-82.542"},{"key":"US-OH-089","name":"Licking","lat":"40.065","lon":"-82.522"},{"key":"US-OH-091","name":"Logan","lat":"40.395","lon":"-83.753"},{"key":"US-OH-093","name":"Lorain","lat":"41.399","lon":"-82.127"},{"key":"US-OH-095","name":"Lucas","lat":"41.612","lon":"-83.589"},{"key":"US-OH-097","name":"Madison","lat":"39.932","lon":"-83.338"},{"key":"US-OH-099","name":"Mahoning","lat":"41.020","lon":"-80.762"},{"key":"US-OH-101","name":"Marion","lat":"40.597","lon":"-83.134"},{"key":"US-OH-103","name":"Medina","lat":"41.129","lon":"-81.851"},{"key":"US-OH-105","name":"Meigs","lat":"39.025","lon":"-81.916"},{"key":"US-OH-107","name":"Mercer","lat":"40.487","lon":"-84.603"},{"key":"US-OH-109","name":"Miami","lat":"40.013","lon":"-84.246"},{"key":"US-OH-111","name":"Monroe","lat":"39.719","lon":"-81.001"},{"key":"US-OH-113","name":"Montgomery","lat":"39.751","lon":"-84.220"},{"key":"US-OH-115","name":"Morgan","lat":"39.599","lon":"-81.830"},{"key":"US-OH-117","name":"Morrow","lat":"40.565","lon":"-82.797"},{"key":"US-OH-119","name":"Muskingum","lat":"39.962","lon":"-82.003"},{"key":"US-OH-121","name":"Noble","lat":"39.768","lon":"-81.445"},{"key":"US-OH-123","name":"Ottawa","lat":"41.572","lon":"-82.952"},{"key":"US-OH-125","name":"Paulding","lat":"41.117","lon":"-84.543"},{"key":"US-OH-127","name":"Perry","lat":"39.756","lon":"-82.264"},{"key":"US-OH-129","name":"Pickaway","lat":"39.609","lon":"-82.975"},{"key":"US-OH-131","name":"Pike","lat":"39.034","lon":"-83.152"},{"key":"US-OH-133","name":"Portage","lat":"41.149","lon":"-81.277"},{"key":"US-OH-135","name":"Preble","lat":"39.743","lon":"-84.654"},{"key":"US-OH-137","name":"Putnam","lat":"40.988","lon":"-84.177"},{"key":"US-OH-139","name":"Richland","lat":"40.773","lon":"-82.526"},{"key":"US-OH-141","name":"Ross","lat":"39.364","lon":"-83.129"},{"key":"US-OH-143","name":"Sandusky","lat":"41.358","lon":"-83.135"},{"key":"US-OH-145","name":"Scioto","lat":"38.784","lon":"-83.006"},{"key":"US-OH-147","name":"Seneca","lat":"41.139","lon":"-83.154"},{"key":"US-OH-149","name":"Shelby","lat":"40.324","lon":"-84.252"},{"key":"US-OH-151","name":"Stark","lat":"40.805","lon":"-81.342"},{"key":"US-OH-153","name":"Summit","lat":"41.159","lon":"-81.516"},{"key":"US-OH-155","name":"Trumbull","lat":"41.250","lon":"-80.700"},{"key":"US-OH-157","name":"Tuscarawas","lat":"40.464","lon":"-81.503"},{"key":"US-OH-159","name":"Union","lat":"40.256","lon":"-83.314"},{"key":"US-OH-161","name":"Van Wert","lat":"40.852","lon":"-84.525"},{"key":"US-OH-163","name":"Vinton","lat":"39.246","lon":"-82.477"},{"key":"US-OH-165","name":"Warren","lat":"39.421","lon":"-84.228"},{"key":"US-OH-167","name":"Washington","lat":"39.430","lon":"-81.474"},{"key":"US-OH-169","name":"Wayne","lat":"40.846","lon":"-81.860"},{"key":"US-OH-171","name":"Williams","lat":"41.538","lon":"-84.600"},{"key":"US-OH-173","name":"Wood","lat":"41.416","lon":"-83.628"},{"key":"US-OH-175","name":"Wyandot","lat":"40.832","lon":"-83.298"}]},"US-OK":{"key":"US-OK","name":"Oklahoma","lon":"-98.717","lat":"35.309","counties":[{"key":"US-OK-001","name":"Adair","lat":"35.905","lon":"-94.648"},{"key":"US-OK-003","name":"Alfalfa","lat":"36.720","lon":"-98.310"},{"key":"US-OK-005","name":"Atoka","lat":"34.411","lon":"-96.029"},{"key":"US-OK-007","name":"Beaver","lat":"36.681","lon":"-100.570"},{"key":"US-OK-009","name":"Beckham","lat":"35.249","lon":"-99.602"},{"key":"US-OK-011","name":"Blaine","lat":"35.801","lon":"-98.417"},{"key":"US-OK-013","name":"Bryan","lat":"33.942","lon":"-96.227"},{"key":"US-OK-015","name":"Caddo","lat":"35.212","lon":"-98.365"},{"key":"US-OK-017","name":"Canadian","lat":"35.446","lon":"-97.902"},{"key":"US-OK-019","name":"Carter","lat":"34.279","lon":"-97.240"},{"key":"US-OK-021","name":"Cherokee","lat":"35.908","lon":"-95.061"},{"key":"US-OK-023","name":"Choctaw","lat":"33.974","lon":"-95.697"},{"key":"US-OK-025","name":"Cimarron","lat":"36.798","lon":"-102.484"},{"key":"US-OK-027","name":"Cleveland","lat":"35.148","lon":"-97.359"},{"key":"US-OK-029","name":"Coal","lat":"34.561","lon":"-96.305"},{"key":"US-OK-031","name":"Comanche","lat":"34.678","lon":"-98.434"},{"key":"US-OK-033","name":"Cotton","lat":"34.233","lon":"-98.425"},{"key":"US-OK-035","name":"Craig","lat":"36.781","lon":"-95.134"},{"key":"US-OK-037","name":"Creek","lat":"35.951","lon":"-96.341"},{"key":"US-OK-039","name":"Custer","lat":"35.643","lon":"-99.003"},{"key":"US-OK-041","name":"Delaware","lat":"36.396","lon":"-94.788"},{"key":"US-OK-043","name":"Dewey","lat":"35.974","lon":"-99.000"},{"key":"US-OK-045","name":"Ellis","lat":"36.024","lon":"-99.727"},{"key":"US-OK-047","name":"Garfield","lat":"36.347","lon":"-97.825"},{"key":"US-OK-049","name":"Garvin","lat":"34.661","lon":"-97.268"},{"key":"US-OK-051","name":"Grady","lat":"35.169","lon":"-97.869"},{"key":"US-OK-053","name":"Grant","lat":"36.815","lon":"-97.795"},{"key":"US-OK-055","name":"Greer","lat":"34.955","lon":"-99.430"},{"key":"US-OK-057","name":"Harmon","lat":"34.700","lon":"-99.828"},{"key":"US-OK-059","name":"Harper","lat":"36.842","lon":"-99.508"},{"key":"US-OK-061","name":"Haskell","lat":"35.329","lon":"-95.115"},{"key":"US-OK-063","name":"Hughes","lat":"35.025","lon":"-96.262"},{"key":"US-OK-065","name":"Jackson","lat":"34.582","lon":"-99.273"},{"key":"US-OK-067","name":"Jefferson","lat":"34.027","lon":"-97.855"},{"key":"US-OK-069","name":"Johnston","lat":"34.232","lon":"-96.636"},{"key":"US-OK-071","name":"Kay","lat":"36.755","lon":"-97.024"},{"key":"US-OK-073","name":"Kingfisher","lat":"35.970","lon":"-97.949"},{"key":"US-OK-075","name":"Kiowa","lat":"34.922","lon":"-99.090"},{"key":"US-OK-077","name":"Latimer","lat":"34.873","lon":"-95.219"},{"key":"US-OK-079","name":"Le Flore","lat":"35.126","lon":"-94.653"},{"key":"US-OK-081","name":"Lincoln","lat":"35.718","lon":"-96.885"},{"key":"US-OK-083","name":"Logan","lat":"35.915","lon":"-97.356"},{"key":"US-OK-085","name":"Love","lat":"33.901","lon":"-97.250"},{"key":"US-OK-087","name":"McClain","lat":"35.033","lon":"-97.345"},{"key":"US-OK-089","name":"McCurtain","lat":"33.888","lon":"-94.787"},{"key":"US-OK-091","name":"McIntosh","lat":"35.307","lon":"-95.658"},{"key":"US-OK-093","name":"Major","lat":"36.346","lon":"-98.526"},{"key":"US-OK-095","name":"Marshall","lat":"34.016","lon":"-96.659"},{"key":"US-OK-097","name":"Mayes","lat":"36.326","lon":"-95.197"},{"key":"US-OK-099","name":"Murray","lat":"34.507","lon":"-97.123"},{"key":"US-OK-101","name":"Muskogee","lat":"35.585","lon":"-95.337"},{"key":"US-OK-103","name":"Noble","lat":"36.451","lon":"-97.091"},{"key":"US-OK-105","name":"Nowata","lat":"36.869","lon":"-95.635"},{"key":"US-OK-107","name":"Okfuskee","lat":"35.439","lon":"-96.447"},{"key":"US-OK-109","name":"Oklahoma","lat":"35.523","lon":"-97.414"},{"key":"US-OK-111","name":"Okmulgee","lat":"35.649","lon":"-95.938"},{"key":"US-OK-113","name":"Osage","lat":"36.499","lon":"-96.580"},{"key":"US-OK-115","name":"Ottawa","lat":"36.870","lon":"-94.842"},{"key":"US-OK-117","name":"Pawnee","lat":"36.358","lon":"-96.635"},{"key":"US-OK-119","name":"Payne","lat":"36.041","lon":"-97.035"},{"key":"US-OK-121","name":"Pittsburg","lat":"35.073","lon":"-95.733"},{"key":"US-OK-123","name":"Pontotoc","lat":"34.854","lon":"-96.663"},{"key":"US-OK-125","name":"Pottawatomie","lat":"35.185","lon":"-96.907"},{"key":"US-OK-127","name":"Pushmataha","lat":"34.418","lon":"-95.363"},{"key":"US-OK-129","name":"Roger Mills","lat":"35.856","lon":"-99.691"},{"key":"US-OK-131","name":"Rogers","lat":"36.276","lon":"-95.641"},{"key":"US-OK-133","name":"Seminole","lat":"35.246","lon":"-96.618"},{"key":"US-OK-135","name":"Sequoyah","lat":"35.425","lon":"-94.799"},{"key":"US-OK-137","name":"Stephens","lat":"34.488","lon":"-97.878"},{"key":"US-OK-139","name":"Texas","lat":"36.755","lon":"-101.462"},{"key":"US-OK-141","name":"Tillman","lat":"34.367","lon":"-99.017"},{"key":"US-OK-143","name":"Tulsa","lat":"36.146","lon":"-95.966"},{"key":"US-OK-145","name":"Wagoner","lat":"35.930","lon":"-95.517"},{"key":"US-OK-147","name":"Washington","lat":"36.712","lon":"-95.915"},{"key":"US-OK-149","name":"Washita","lat":"35.202","lon":"-98.810"},{"key":"US-OK-151","name":"Woods","lat":"36.741","lon":"-99.037"},{"key":"US-OK-153","name":"Woodward","lat":"36.585","lon":"-99.188"}]},"US-OR":{"key":"US-OR","name":"Oregon","lon":"-120.583","lat":"44.145","counties":[{"key":"US-OR-001","name":"Baker","lat":"44.731","lon":"-118.008"},{"key":"US-OR-003","name":"Benton","lat":"44.493","lon":"-123.284"},{"key":"US-OR-005","name":"Clackamas","lat":"45.195","lon":"-122.341"},{"key":"US-OR-007","name":"Clatsop","lat":"46.080","lon":"-123.776"},{"key":"US-OR-009","name":"Columbia","lat":"45.936","lon":"-123.025"},{"key":"US-OR-011","name":"Coos","lat":"43.074","lon":"-124.145"},{"key":"US-OR-013","name":"Crook","lat":"44.176","lon":"-120.542"},{"key":"US-OR-015","name":"Curry","lat":"42.457","lon":"-124.015"},{"key":"US-OR-017","name":"Deschutes","lat":"43.989","lon":"-121.704"},{"key":"US-OR-019","name":"Douglas","lat":"43.251","lon":"-122.983"},{"key":"US-OR-021","name":"Gilliam","lat":"45.403","lon":"-120.445"},{"key":"US-OR-023","name":"Grant","lat":"44.678","lon":"-118.480"},{"key":"US-OR-025","name":"Harney","lat":"43.089","lon":"-119.021"},{"key":"US-OR-027","name":"Hood River","lat":"45.489","lon":"-121.762"},{"key":"US-OR-029","name":"Jackson","lat":"42.548","lon":"-122.836"},{"key":"US-OR-031","name":"Jefferson","lat":"44.650","lon":"-121.505"},{"key":"US-OR-033","name":"Josephine","lat":"42.400","lon":"-123.786"},{"key":"US-OR-035","name":"Klamath","lat":"43.141","lon":"-121.944"},{"key":"US-OR-037","name":"Lake","lat":"42.751","lon":"-120.417"},{"key":"US-OR-039","name":"Lane","lat":"43.974","lon":"-122.488"},{"key":"US-OR-041","name":"Lincoln","lat":"44.630","lon":"-123.985"},{"key":"US-OR-043","name":"Linn","lat":"44.528","lon":"-122.617"},{"key":"US-OR-045","name":"Malheur","lat":"43.818","lon":"-117.303"},{"key":"US-OR-047","name":"Marion","lat":"44.924","lon":"-122.628"},{"key":"US-OR-049","name":"Morrow","lat":"45.408","lon":"-119.545"},{"key":"US-OR-051","name":"Multnomah","lat":"45.521","lon":"-122.466"},{"key":"US-OR-053","name":"Polk","lat":"44.900","lon":"-123.253"},{"key":"US-OR-055","name":"Sherman","lat":"45.362","lon":"-120.677"},{"key":"US-OR-057","name":"Tillamook","lat":"45.432","lon":"-123.757"},{"key":"US-OR-059","name":"Umatilla","lat":"45.634","lon":"-118.737"},{"key":"US-OR-061","name":"Union","lat":"45.122","lon":"-118.059"},{"key":"US-OR-063","name":"Wallowa","lat":"45.599","lon":"-117.003"},{"key":"US-OR-065","name":"Wasco","lat":"45.186","lon":"-121.065"},{"key":"US-OR-067","name":"Washington","lat":"45.502","lon":"-122.967"},{"key":"US-OR-069","name":"Wheeler","lat":"44.861","lon":"-120.295"},{"key":"US-OR-071","name":"Yamhill","lat":"45.214","lon":"-123.186"}]},"US-PA":{"key":"US-PA","name":"Pennsylvania","lon":"-77.605","lat":"41.118","counties":[{"key":"US-PA-001","name":"Adams","lat":"39.898","lon":"-77.106"},{"key":"US-PA-003","name":"Allegheny","lat":"40.458","lon":"-79.921"},{"key":"US-PA-005","name":"Armstrong","lat":"40.874","lon":"-79.501"},{"key":"US-PA-007","name":"Beaver","lat":"40.673","lon":"-80.278"},{"key":"US-PA-009","name":"Bedford","lat":"40.024","lon":"-78.410"},{"key":"US-PA-011","name":"Berks","lat":"40.432","lon":"-75.998"},{"key":"US-PA-013","name":"Blair","lat":"40.514","lon":"-78.299"},{"key":"US-PA-015","name":"Bradford","lat":"41.812","lon":"-76.542"},{"key":"US-PA-017","name":"Bucks","lat":"40.273","lon":"-75.030"},{"key":"US-PA-019","name":"Butler","lat":"40.834","lon":"-79.927"},{"key":"US-PA-021","name":"Cambria","lat":"40.430","lon":"-78.740"},{"key":"US-PA-023","name":"Cameron","lat":"41.439","lon":"-78.238"},{"key":"US-PA-025","name":"Carbon","lat":"40.987","lon":"-75.692"},{"key":"US-PA-027","name":"Centre","lat":"40.985","lon":"-78.020"},{"key":"US-PA-029","name":"Chester","lat":"39.959","lon":"-75.754"},{"key":"US-PA-031","name":"Clarion","lat":"41.075","lon":"-79.481"},{"key":"US-PA-033","name":"Clearfield","lat":"40.958","lon":"-78.241"},{"key":"US-PA-035","name":"Clinton","lat":"41.194","lon":"-77.634"},{"key":"US-PA-037","name":"Columbia","lat":"40.972","lon":"-76.430"},{"key":"US-PA-039","name":"Crawford","lat":"41.634","lon":"-80.069"},{"key":"US-PA-041","name":"Cumberland","lat":"40.193","lon":"-77.202"},{"key":"US-PA-043","name":"Dauphin","lat":"40.367","lon":"-76.817"},{"key":"US-PA-045","name":"Delaware","lat":"39.925","lon":"-75.377"},{"key":"US-PA-047","name":"Elk","lat":"41.391","lon":"-78.831"},{"key":"US-PA-049","name":"Erie","lat":"42.080","lon":"-80.080"},{"key":"US-PA-051","name":"Fayette","lat":"39.978","lon":"-79.675"},{"key":"US-PA-053","name":"Forest","lat":"41.402","lon":"-79.207"},{"key":"US-PA-055","name":"Franklin","lat":"40.006","lon":"-77.711"},{"key":"US-PA-057","name":"Fulton","lat":"39.912","lon":"-78.119"},{"key":"US-PA-059","name":"Greene","lat":"39.935","lon":"-80.171"},{"key":"US-PA-061","name":"Huntingdon","lat":"40.501","lon":"-77.988"},{"key":"US-PA-063","name":"Indiana","lat":"40.508","lon":"-79.187"},{"key":"US-PA-065","name":"Jefferson","lat":"41.236","lon":"-79.048"},{"key":"US-PA-067","name":"Juniata","lat":"40.563","lon":"-77.292"},{"key":"US-PA-069","name":"Lackawanna","lat":"41.335","lon":"-75.603"},{"key":"US-PA-071","name":"Lancaster","lat":"39.969","lon":"-76.293"},{"key":"US-PA-073","name":"Lawrence","lat":"40.988","lon":"-80.368"},{"key":"US-PA-075","name":"Lebanon","lat":"40.341","lon":"-76.447"},{"key":"US-PA-077","name":"Lehigh","lat":"40.644","lon":"-75.533"},{"key":"US-PA-079","name":"Luzerne","lat":"41.161","lon":"-75.842"},{"key":"US-PA-081","name":"Lycoming","lat":"41.321","lon":"-77.125"},{"key":"US-PA-083","name":"McKean","lat":"41.805","lon":"-78.612"},{"key":"US-PA-085","name":"Mercer","lat":"41.300","lon":"-80.334"},{"key":"US-PA-087","name":"Mifflin","lat":"40.566","lon":"-77.668"},{"key":"US-PA-089","name":"Monroe","lat":"41.068","lon":"-75.364"},{"key":"US-PA-091","name":"Montgomery","lat":"40.130","lon":"-75.314"},{"key":"US-PA-093","name":"Montour","lat":"40.994","lon":"-76.648"},{"key":"US-PA-095","name":"Northampton","lat":"40.747","lon":"-75.302"},{"key":"US-PA-097","name":"Northumberland","lat":"40.869","lon":"-76.744"},{"key":"US-PA-099","name":"Perry","lat":"40.377","lon":"-77.269"},{"key":"US-PA-101","name":"Philadelphia","lat":"40.009","lon":"-75.148"},{"key":"US-PA-103","name":"Pike","lat":"41.362","lon":"-75.041"},{"key":"US-PA-105","name":"Potter","lat":"41.780","lon":"-77.887"},{"key":"US-PA-107","name":"Schuylkill","lat":"40.663","lon":"-76.202"},{"key":"US-PA-109","name":"Snyder","lat":"40.750","lon":"-76.987"},{"key":"US-PA-111","name":"Somerset","lat":"40.045","lon":"-79.129"},{"key":"US-PA-113","name":"Sullivan","lat":"41.439","lon":"-76.525"},{"key":"US-PA-115","name":"Susquehanna","lat":"41.792","lon":"-75.789"},{"key":"US-PA-117","name":"Tioga","lat":"41.732","lon":"-77.105"},{"key":"US-PA-119","name":"Union","lat":"40.958","lon":"-76.948"},{"key":"US-PA-121","name":"Venango","lat":"41.368","lon":"-79.768"},{"key":"US-PA-123","name":"Warren","lat":"41.826","lon":"-79.255"},{"key":"US-PA-125","name":"Washington","lat":"40.091","lon":"-80.135"},{"key":"US-PA-127","name":"Wayne","lat":"41.571","lon":"-75.270"},{"key":"US-PA-129","name":"Westmoreland","lat":"40.322","lon":"-79.454"},{"key":"US-PA-131","name":"Wyoming","lat":"41.545","lon":"-75.929"},{"key":"US-PA-133","name":"York","lat":"40.003","lon":"-76.746"}]},"US-RI":{"key":"US-RI","name":"Rhode Island","lon":"-71.498","lat":"41.557","counties":[{"key":"US-RI-001","name":"Bristol","lat":"41.713","lon":"-71.298"},{"key":"US-RI-003","name":"Kent","lat":"41.688","lon":"-71.469"},{"key":"US-RI-005","name":"Newport","lat":"41.535","lon":"-71.284"},{"key":"US-RI-007","name":"Providence","lat":"41.833","lon":"-71.448"},{"key":"US-RI-009","name":"Washington","lat":"41.442","lon":"-71.574"}]},"US-SC":{"key":"US-SC","name":"South Carolina","lon":"-80.927","lat":"33.624","counties":[{"key":"US-SC-001","name":"Abbeville","lat":"34.222","lon":"-82.452"},{"key":"US-SC-003","name":"Aiken","lat":"33.574","lon":"-81.622"},{"key":"US-SC-005","name":"Allendale","lat":"32.976","lon":"-81.392"},{"key":"US-SC-007","name":"Anderson","lat":"34.572","lon":"-82.573"},{"key":"US-SC-009","name":"Bamberg","lat":"33.257","lon":"-81.015"},{"key":"US-SC-011","name":"Barnwell","lat":"33.286","lon":"-81.348"},{"key":"US-SC-013","name":"Beaufort","lat":"32.409","lon":"-80.795"},{"key":"US-SC-015","name":"Berkeley","lat":"33.231","lon":"-79.913"},{"key":"US-SC-017","name":"Calhoun","lat":"33.708","lon":"-80.754"},{"key":"US-SC-019","name":"Charleston","lat":"32.877","lon":"-79.964"},{"key":"US-SC-021","name":"Cherokee","lat":"34.965","lon":"-81.582"},{"key":"US-SC-023","name":"Chester","lat":"34.699","lon":"-81.162"},{"key":"US-SC-025","name":"Chesterfield","lat":"34.599","lon":"-80.215"},{"key":"US-SC-027","name":"Clarendon","lat":"33.577","lon":"-80.273"},{"key":"US-SC-029","name":"Colleton","lat":"32.843","lon":"-80.613"},{"key":"US-SC-031","name":"Darlington","lat":"34.353","lon":"-79.923"},{"key":"US-SC-033","name":"Dillon","lat":"34.311","lon":"-79.327"},{"key":"US-SC-035","name":"Dorchester","lat":"33.050","lon":"-80.422"},{"key":"US-SC-037","name":"Edgefield","lat":"33.728","lon":"-82.058"},{"key":"US-SC-039","name":"Fairfield","lat":"34.351","lon":"-81.163"},{"key":"US-SC-041","name":"Florence","lat":"34.003","lon":"-79.642"},{"key":"US-SC-043","name":"Georgetown","lat":"33.473","lon":"-79.298"},{"key":"US-SC-045","name":"Greenville","lat":"34.911","lon":"-82.457"},{"key":"US-SC-047","name":"Greenwood","lat":"34.190","lon":"-82.088"},{"key":"US-SC-049","name":"Hampton","lat":"32.774","lon":"-81.065"},{"key":"US-SC-051","name":"Horry","lat":"33.940","lon":"-79.149"},{"key":"US-SC-053","name":"Jasper","lat":"32.353","lon":"-80.995"},{"key":"US-SC-055","name":"Kershaw","lat":"34.416","lon":"-80.520"},{"key":"US-SC-057","name":"Lancaster","lat":"34.703","lon":"-80.703"},{"key":"US-SC-059","name":"Laurens","lat":"34.511","lon":"-81.977"},{"key":"US-SC-061","name":"Lee","lat":"34.167","lon":"-80.204"},{"key":"US-SC-063","name":"Lexington","lat":"33.904","lon":"-81.256"},{"key":"US-SC-065","name":"McCormick","lat":"33.829","lon":"-82.269"},{"key":"US-SC-067","name":"Marion","lat":"33.985","lon":"-79.324"},{"key":"US-SC-069","name":"Marlboro","lat":"34.533","lon":"-79.745"},{"key":"US-SC-071","name":"Newberry","lat":"34.270","lon":"-81.625"},{"key":"US-SC-073","name":"Oconee","lat":"34.765","lon":"-83.001"},{"key":"US-SC-075","name":"Orangeburg","lat":"33.394","lon":"-80.802"},{"key":"US-SC-077","name":"Pickens","lat":"34.873","lon":"-82.742"},{"key":"US-SC-079","name":"Richland","lat":"33.964","lon":"-80.844"},{"key":"US-SC-081","name":"Saluda","lat":"34.078","lon":"-81.759"},{"key":"US-SC-083","name":"Spartanburg","lat":"34.818","lon":"-82.038"},{"key":"US-SC-085","name":"Sumter","lat":"33.921","lon":"-80.447"},{"key":"US-SC-087","name":"Union","lat":"34.671","lon":"-81.595"},{"key":"US-SC-089","name":"Williamsburg","lat":"33.585","lon":"-79.739"},{"key":"US-SC-091","name":"York","lat":"34.984","lon":"-81.127"}]},"US-SD":{"key":"US-SD","name":"South Dakota","lon":"-100.247","lat":"44.213","counties":[{"key":"US-SD-003","name":"Aurora","lat":"43.721","lon":"-98.547"},{"key":"US-SD-005","name":"Beadle","lat":"44.393","lon":"-98.308"},{"key":"US-SD-007","name":"Bennett","lat":"43.219","lon":"-101.724"},{"key":"US-SD-009","name":"Bon Homme","lat":"42.947","lon":"-98.047"},{"key":"US-SD-011","name":"Brookings","lat":"44.373","lon":"-96.733"},{"key":"US-SD-013","name":"Brown","lat":"45.535","lon":"-98.337"},{"key":"US-SD-015","name":"Brule","lat":"43.730","lon":"-99.244"},{"key":"US-SD-017","name":"Buffalo","lat":"44.075","lon":"-99.327"},{"key":"US-SD-019","name":"Butte","lat":"44.668","lon":"-103.801"},{"key":"US-SD-021","name":"Campbell","lat":"45.788","lon":"-100.212"},{"key":"US-SD-023","name":"Charles Mix","lat":"43.086","lon":"-98.425"},{"key":"US-SD-025","name":"Clark","lat":"44.879","lon":"-97.742"},{"key":"US-SD-027","name":"Clay","lat":"42.834","lon":"-96.975"},{"key":"US-SD-029","name":"Codington","lat":"44.969","lon":"-97.145"},{"key":"US-SD-031","name":"Corson","lat":"45.733","lon":"-100.953"},{"key":"US-SD-033","name":"Custer","lat":"43.687","lon":"-102.991"},{"key":"US-SD-035","name":"Davison","lat":"43.683","lon":"-98.149"},{"key":"US-SD-037","name":"Day","lat":"45.373","lon":"-97.509"},{"key":"US-SD-039","name":"Deuel","lat":"44.770","lon":"-96.677"},{"key":"US-SD-041","name":"Dewey","lat":"44.973","lon":"-100.748"},{"key":"US-SD-043","name":"Douglas","lat":"43.390","lon":"-98.373"},{"key":"US-SD-045","name":"Edmunds","lat":"45.392","lon":"-99.245"},{"key":"US-SD-047","name":"Fall River","lat":"43.241","lon":"-103.521"},{"key":"US-SD-049","name":"Faulk","lat":"45.093","lon":"-99.193"},{"key":"US-SD-051","name":"Grant","lat":"45.189","lon":"-96.758"},{"key":"US-SD-053","name":"Gregory","lat":"43.199","lon":"-99.046"},{"key":"US-SD-055","name":"Haakon","lat":"44.542","lon":"-101.569"},{"key":"US-SD-057","name":"Hamlin","lat":"44.676","lon":"-97.162"},{"key":"US-SD-059","name":"Hand","lat":"44.480","lon":"-98.990"},{"key":"US-SD-061","name":"Hanson","lat":"43.673","lon":"-97.775"},{"key":"US-SD-063","name":"Harding","lat":"45.612","lon":"-103.325"},{"key":"US-SD-065","name":"Hughes","lat":"44.335","lon":"-100.064"},{"key":"US-SD-067","name":"Hutchinson","lat":"43.356","lon":"-97.752"},{"key":"US-SD-069","name":"Hyde","lat":"44.530","lon":"-99.491"},{"key":"US-SD-071","name":"Jackson","lat":"43.750","lon":"-101.550"},{"key":"US-SD-073","name":"Jerauld","lat":"44.075","lon":"-98.625"},{"key":"US-SD-075","name":"Jones","lat":"43.786","lon":"-100.735"},{"key":"US-SD-077","name":"Kingsbury","lat":"44.369","lon":"-97.507"},{"key":"US-SD-079","name":"Lake","lat":"44.014","lon":"-97.100"},{"key":"US-SD-081","name":"Lawrence","lat":"44.538","lon":"-103.885"},{"key":"US-SD-083","name":"Lincoln","lat":"43.316","lon":"-96.608"},{"key":"US-SD-085","name":"Lyman","lat":"43.809","lon":"-99.774"},{"key":"US-SD-087","name":"McCook","lat":"43.661","lon":"-97.342"},{"key":"US-SD-089","name":"McPherson","lat":"45.796","lon":"-99.263"},{"key":"US-SD-091","name":"Marshall","lat":"45.738","lon":"-97.586"},{"key":"US-SD-093","name":"Meade","lat":"44.417","lon":"-102.523"},{"key":"US-SD-095","name":"Mellette","lat":"43.722","lon":"-100.782"},{"key":"US-SD-097","name":"Miner","lat":"44.017","lon":"-97.633"},{"key":"US-SD-099","name":"Minnehaha","lat":"43.633","lon":"-96.781"},{"key":"US-SD-101","name":"Moody","lat":"43.999","lon":"-96.625"},{"key":"US-SD-103","name":"Pennington","lat":"44.094","lon":"-102.434"},{"key":"US-SD-105","name":"Perkins","lat":"45.579","lon":"-102.570"},{"key":"US-SD-107","name":"Potter","lat":"45.054","lon":"-100.109"},{"key":"US-SD-109","name":"Roberts","lat":"45.621","lon":"-96.767"},{"key":"US-SD-111","name":"Sanborn","lat":"44.032","lon":"-98.090"},{"key":"US-SD-113","name":"Shannon","lat":"43.545","lon":"-102.658"},{"key":"US-SD-115","name":"Spink","lat":"44.965","lon":"-98.273"},{"key":"US-SD-117","name":"Stanley","lat":"44.531","lon":"-100.630"},{"key":"US-SD-119","name":"Sully","lat":"44.715","lon":"-100.377"},{"key":"US-SD-121","name":"Todd","lat":"43.263","lon":"-100.685"},{"key":"US-SD-123","name":"Tripp","lat":"43.584","lon":"-99.890"},{"key":"US-SD-125","name":"Turner","lat":"43.327","lon":"-97.179"},{"key":"US-SD-127","name":"Union","lat":"42.754","lon":"-96.578"},{"key":"US-SD-129","name":"Walworth","lat":"45.461","lon":"-100.235"},{"key":"US-SD-135","name":"Yankton","lat":"42.926","lon":"-97.361"},{"key":"US-SD-137","name":"Ziebach","lat":"44.697","lon":"-101.586"}]},"US-TN":{"key":"US-TN","name":"Tennessee","lon":"-85.979","lat":"35.831","counties":[{"key":"US-TN-001","name":"Anderson","lat":"36.134","lon":"-84.188"},{"key":"US-TN-003","name":"Bedford","lat":"35.511","lon":"-86.433"},{"key":"US-TN-005","name":"Benton","lat":"36.132","lon":"-88.073"},{"key":"US-TN-007","name":"Bledsoe","lat":"35.603","lon":"-85.218"},{"key":"US-TN-009","name":"Blount","lat":"35.703","lon":"-83.968"},{"key":"US-TN-011","name":"Bradley","lat":"35.198","lon":"-84.855"},{"key":"US-TN-013","name":"Campbell","lat":"36.357","lon":"-84.168"},{"key":"US-TN-015","name":"Cannon","lat":"35.780","lon":"-86.085"},{"key":"US-TN-017","name":"Carroll","lat":"35.979","lon":"-88.522"},{"key":"US-TN-019","name":"Carter","lat":"36.330","lon":"-82.116"},{"key":"US-TN-021","name":"Cheatham","lat":"36.293","lon":"-87.124"},{"key":"US-TN-023","name":"Chester","lat":"35.413","lon":"-88.595"},{"key":"US-TN-025","name":"Claiborne","lat":"36.420","lon":"-83.644"},{"key":"US-TN-027","name":"Clay","lat":"36.518","lon":"-85.509"},{"key":"US-TN-029","name":"Cocke","lat":"35.939","lon":"-83.164"},{"key":"US-TN-031","name":"Coffee","lat":"35.489","lon":"-86.088"},{"key":"US-TN-033","name":"Crockett","lat":"35.819","lon":"-89.139"},{"key":"US-TN-035","name":"Cumberland","lat":"36.014","lon":"-85.013"},{"key":"US-TN-037","name":"Davidson","lat":"36.206","lon":"-86.732"},{"key":"US-TN-039","name":"Decatur","lat":"35.577","lon":"-88.090"},{"key":"US-TN-041","name":"DeKalb","lat":"36.001","lon":"-85.843"},{"key":"US-TN-043","name":"Dickson","lat":"36.170","lon":"-87.290"},{"key":"US-TN-045","name":"Dyer","lat":"35.988","lon":"-89.436"},{"key":"US-TN-047","name":"Fayette","lat":"35.262","lon":"-89.497"},{"key":"US-TN-049","name":"Fentress","lat":"36.311","lon":"-84.903"},{"key":"US-TN-051","name":"Franklin","lat":"35.258","lon":"-86.163"},{"key":"US-TN-053","name":"Gibson","lat":"36.007","lon":"-88.948"},{"key":"US-TN-055","name":"Giles","lat":"35.312","lon":"-87.038"},{"key":"US-TN-057","name":"Grainger","lat":"36.269","lon":"-83.511"},{"key":"US-TN-059","name":"Greene","lat":"36.181","lon":"-82.889"},{"key":"US-TN-061","name":"Grundy","lat":"35.376","lon":"-85.709"},{"key":"US-TN-063","name":"Hamblen","lat":"36.228","lon":"-83.252"},{"key":"US-TN-065","name":"Hamilton","lat":"35.174","lon":"-85.162"},{"key":"US-TN-067","name":"Hancock","lat":"36.481","lon":"-83.191"},{"key":"US-TN-069","name":"Hardeman","lat":"35.215","lon":"-88.983"},{"key":"US-TN-071","name":"Hardin","lat":"35.310","lon":"-88.169"},{"key":"US-TN-073","name":"Hawkins","lat":"36.401","lon":"-82.986"},{"key":"US-TN-075","name":"Haywood","lat":"35.680","lon":"-89.322"},{"key":"US-TN-077","name":"Henderson","lat":"35.629","lon":"-88.408"},{"key":"US-TN-079","name":"Henry","lat":"36.270","lon":"-88.163"},{"key":"US-TN-081","name":"Hickman","lat":"35.787","lon":"-87.525"},{"key":"US-TN-083","name":"Houston","lat":"36.282","lon":"-87.747"},{"key":"US-TN-085","name":"Humphreys","lat":"35.993","lon":"-87.756"},{"key":"US-TN-087","name":"Jackson","lat":"36.307","lon":"-85.640"},{"key":"US-TN-089","name":"Jefferson","lat":"36.053","lon":"-83.487"},{"key":"US-TN-091","name":"Johnson","lat":"36.432","lon":"-81.878"},{"key":"US-TN-093","name":"Knox","lat":"35.972","lon":"-83.966"},{"key":"US-TN-095","name":"Lake","lat":"36.344","lon":"-89.515"},{"key":"US-TN-097","name":"Lauderdale","lat":"35.722","lon":"-89.635"},{"key":"US-TN-099","name":"Lawrence","lat":"35.202","lon":"-87.372"},{"key":"US-TN-101","name":"Lewis","lat":"35.556","lon":"-87.499"},{"key":"US-TN-103","name":"Lincoln","lat":"35.222","lon":"-86.510"},{"key":"US-TN-105","name":"Loudon","lat":"35.708","lon":"-84.362"},{"key":"US-TN-107","name":"McMinn","lat":"35.436","lon":"-84.655"},{"key":"US-TN-109","name":"McNairy","lat":"35.269","lon":"-88.544"},{"key":"US-TN-111","name":"Macon","lat":"36.528","lon":"-86.029"},{"key":"US-TN-113","name":"Madison","lat":"35.664","lon":"-88.908"},{"key":"US-TN-115","name":"Marion","lat":"35.163","lon":"-85.550"},{"key":"US-TN-117","name":"Marshall","lat":"35.479","lon":"-86.788"},{"key":"US-TN-119","name":"Maury","lat":"35.574","lon":"-87.076"},{"key":"US-TN-121","name":"Meigs","lat":"35.528","lon":"-84.801"},{"key":"US-TN-123","name":"Monroe","lat":"35.482","lon":"-84.235"},{"key":"US-TN-125","name":"Montgomery","lat":"36.463","lon":"-87.244"},{"key":"US-TN-127","name":"Moore","lat":"35.276","lon":"-86.362"},{"key":"US-TN-129","name":"Morgan","lat":"36.145","lon":"-84.665"},{"key":"US-TN-131","name":"Obion","lat":"36.389","lon":"-89.043"},{"key":"US-TN-133","name":"Overton","lat":"36.356","lon":"-85.339"},{"key":"US-TN-135","name":"Perry","lat":"35.601","lon":"-87.858"},{"key":"US-TN-137","name":"Pickett","lat":"36.539","lon":"-85.095"},{"key":"US-TN-139","name":"Polk","lat":"35.172","lon":"-84.577"},{"key":"US-TN-141","name":"Putnam","lat":"36.169","lon":"-85.541"},{"key":"US-TN-143","name":"Rhea","lat":"35.587","lon":"-84.914"},{"key":"US-TN-145","name":"Roane","lat":"35.859","lon":"-84.556"},{"key":"US-TN-147","name":"Robertson","lat":"36.464","lon":"-86.863"},{"key":"US-TN-149","name":"Rutherford","lat":"35.809","lon":"-86.413"},{"key":"US-TN-151","name":"Scott","lat":"36.377","lon":"-84.418"},{"key":"US-TN-153","name":"Sequatchie","lat":"35.397","lon":"-85.452"},{"key":"US-TN-155","name":"Sevier","lat":"35.821","lon":"-83.498"},{"key":"US-TN-157","name":"Shelby","lat":"35.213","lon":"-89.969"},{"key":"US-TN-159","name":"Smith","lat":"36.207","lon":"-85.937"},{"key":"US-TN-161","name":"Stewart","lat":"36.456","lon":"-87.935"},{"key":"US-TN-163","name":"Sullivan","lat":"36.492","lon":"-82.284"},{"key":"US-TN-165","name":"Sumner","lat":"36.409","lon":"-86.507"},{"key":"US-TN-167","name":"Tipton","lat":"35.544","lon":"-89.752"},{"key":"US-TN-169","name":"Trousdale","lat":"36.379","lon":"-86.167"},{"key":"US-TN-171","name":"Unicoi","lat":"36.122","lon":"-82.389"},{"key":"US-TN-173","name":"Union","lat":"36.324","lon":"-83.842"},{"key":"US-TN-175","name":"Van Buren","lat":"35.752","lon":"-85.454"},{"key":"US-TN-177","name":"Warren","lat":"35.718","lon":"-85.789"},{"key":"US-TN-179","name":"Washington","lat":"36.324","lon":"-82.454"},{"key":"US-TN-181","name":"Wayne","lat":"35.313","lon":"-87.846"},{"key":"US-TN-183","name":"Weakley","lat":"36.226","lon":"-88.805"},{"key":"US-TN-185","name":"White","lat":"35.892","lon":"-85.508"},{"key":"US-TN-187","name":"Williamson","lat":"35.847","lon":"-86.827"},{"key":"US-TN-189","name":"Wilson","lat":"36.174","lon":"-86.289"}]},"US-TX":{"key":"US-TX","name":"Texas","lon":"-100.077","lat":"31.169","counties":[{"key":"US-TX-001","name":"Anderson","lat":"31.794","lon":"-95.636"},{"key":"US-TX-003","name":"Andrews","lat":"32.281","lon":"-102.602"},{"key":"US-TX-005","name":"Angelina","lat":"31.273","lon":"-94.624"},{"key":"US-TX-007","name":"Aransas","lat":"28.078","lon":"-96.999"},{"key":"US-TX-009","name":"Archer","lat":"33.667","lon":"-98.604"},{"key":"US-TX-011","name":"Armstrong","lat":"34.959","lon":"-101.415"},{"key":"US-TX-013","name":"Atascosa","lat":"28.988","lon":"-98.519"},{"key":"US-TX-015","name":"Austin","lat":"29.839","lon":"-96.198"},{"key":"US-TX-017","name":"Bailey","lat":"34.089","lon":"-102.888"},{"key":"US-TX-019","name":"Bandera","lat":"29.672","lon":"-99.093"},{"key":"US-TX-021","name":"Bastrop","lat":"30.158","lon":"-97.371"},{"key":"US-TX-023","name":"Baylor","lat":"33.645","lon":"-99.186"},{"key":"US-TX-025","name":"Bee","lat":"28.513","lon":"-97.658"},{"key":"US-TX-027","name":"Bell","lat":"31.006","lon":"-97.546"},{"key":"US-TX-029","name":"Bexar","lat":"29.590","lon":"-98.417"},{"key":"US-TX-031","name":"Blanco","lat":"30.271","lon":"-98.374"},{"key":"US-TX-033","name":"Borden","lat":"32.683","lon":"-101.438"},{"key":"US-TX-035","name":"Bosque","lat":"31.979","lon":"-97.506"},{"key":"US-TX-037","name":"Bowie","lat":"33.394","lon":"-94.356"},{"key":"US-TX-039","name":"Brazoria","lat":"29.204","lon":"-95.538"},{"key":"US-TX-041","name":"Brazos","lat":"30.597","lon":"-96.246"},{"key":"US-TX-043","name":"Brewster","lat":"29.447","lon":"-103.057"},{"key":"US-TX-045","name":"Briscoe","lat":"34.524","lon":"-101.267"},{"key":"US-TX-047","name":"Brooks","lat":"27.138","lon":"-98.311"},{"key":"US-TX-049","name":"Brown","lat":"31.601","lon":"-99.037"},{"key":"US-TX-051","name":"Burleson","lat":"30.452","lon":"-96.593"},{"key":"US-TX-053","name":"Burnet","lat":"30.766","lon":"-98.318"},{"key":"US-TX-055","name":"Caldwell","lat":"29.785","lon":"-97.737"},{"key":"US-TX-057","name":"Calhoun","lat":"28.493","lon":"-96.677"},{"key":"US-TX-059","name":"Callahan","lat":"32.308","lon":"-99.350"},{"key":"US-TX-061","name":"Cameron","lat":"26.144","lon":"-97.438"},{"key":"US-TX-063","name":"Camp","lat":"33.007","lon":"-94.930"},{"key":"US-TX-065","name":"Carson","lat":"35.426","lon":"-101.378"},{"key":"US-TX-067","name":"Cass","lat":"33.247","lon":"-94.322"},{"key":"US-TX-069","name":"Castro","lat":"34.512","lon":"-102.251"},{"key":"US-TX-071","name":"Chambers","lat":"29.699","lon":"-94.756"},{"key":"US-TX-073","name":"Cherokee","lat":"31.733","lon":"-95.187"},{"key":"US-TX-075","name":"Childress","lat":"34.479","lon":"-100.195"},{"key":"US-TX-077","name":"Clay","lat":"33.935","lon":"-98.160"},{"key":"US-TX-079","name":"Cochran","lat":"33.655","lon":"-102.857"},{"key":"US-TX-081","name":"Coke","lat":"31.913","lon":"-100.532"},{"key":"US-TX-083","name":"Coleman","lat":"31.524","lon":"-99.481"},{"key":"US-TX-085","name":"Collin","lat":"33.132","lon":"-96.637"},{"key":"US-TX-087","name":"Collingsworth","lat":"34.956","lon":"-100.336"},{"key":"US-TX-089","name":"Colorado","lat":"29.711","lon":"-96.445"},{"key":"US-TX-091","name":"Comal","lat":"29.726","lon":"-98.384"},{"key":"US-TX-093","name":"Comanche","lat":"31.956","lon":"-98.554"},{"key":"US-TX-095","name":"Concho","lat":"31.475","lon":"-99.723"},{"key":"US-TX-097","name":"Cooke","lat":"33.757","lon":"-97.179"},{"key":"US-TX-099","name":"Coryell","lat":"31.361","lon":"-97.756"},{"key":"US-TX-101","name":"Cottle","lat":"34.193","lon":"-100.238"},{"key":"US-TX-103","name":"Crane","lat":"31.249","lon":"-102.544"},{"key":"US-TX-105","name":"Crockett","lat":"30.778","lon":"-101.899"},{"key":"US-TX-107","name":"Crosby","lat":"33.586","lon":"-101.398"},{"key":"US-TX-109","name":"Culberson","lat":"31.376","lon":"-104.673"},{"key":"US-TX-111","name":"Dallam","lat":"36.204","lon":"-102.582"},{"key":"US-TX-113","name":"Dallas","lat":"32.825","lon":"-96.784"},{"key":"US-TX-115","name":"Dawson","lat":"32.752","lon":"-101.912"},{"key":"US-TX-117","name":"Deaf Smith","lat":"34.996","lon":"-102.632"},{"key":"US-TX-119","name":"Delta","lat":"33.383","lon":"-95.585"},{"key":"US-TX-121","name":"Denton","lat":"33.138","lon":"-97.043"},{"key":"US-TX-123","name":"DeWitt","lat":"29.026","lon":"-97.342"},{"key":"US-TX-125","name":"Dickens","lat":"33.537","lon":"-100.771"},{"key":"US-TX-127","name":"Dimmit","lat":"28.507","lon":"-99.716"},{"key":"US-TX-129","name":"Donley","lat":"34.995","lon":"-100.796"},{"key":"US-TX-131","name":"Duval","lat":"27.589","lon":"-98.465"},{"key":"US-TX-133","name":"Eastland","lat":"32.302","lon":"-98.813"},{"key":"US-TX-135","name":"Ector","lat":"31.841","lon":"-102.432"},{"key":"US-TX-137","name":"Edwards","lat":"29.807","lon":"-100.054"},{"key":"US-TX-139","name":"Ellis","lat":"32.419","lon":"-96.631"},{"key":"US-TX-141","name":"El Paso","lat":"31.793","lon":"-106.436"},{"key":"US-TX-143","name":"Erath","lat":"32.231","lon":"-98.243"},{"key":"US-TX-145","name":"Falls","lat":"31.262","lon":"-96.993"},{"key":"US-TX-147","name":"Fannin","lat":"33.688","lon":"-96.130"},{"key":"US-TX-149","name":"Fayette","lat":"29.905","lon":"-96.871"},{"key":"US-TX-151","name":"Fisher","lat":"32.718","lon":"-100.359"},{"key":"US-TX-153","name":"Floyd","lat":"34.091","lon":"-101.350"},{"key":"US-TX-155","name":"Foard","lat":"33.905","lon":"-99.663"},{"key":"US-TX-157","name":"Fort Bend","lat":"29.511","lon":"-95.836"},{"key":"US-TX-159","name":"Franklin","lat":"33.256","lon":"-95.207"},{"key":"US-TX-161","name":"Freestone","lat":"31.803","lon":"-95.988"},{"key":"US-TX-163","name":"Frio","lat":"28.887","lon":"-99.105"},{"key":"US-TX-165","name":"Gaines","lat":"32.806","lon":"-102.719"},{"key":"US-TX-167","name":"Galveston","lat":"29.445","lon":"-94.907"},{"key":"US-TX-169","name":"Garza","lat":"33.198","lon":"-101.325"},{"key":"US-TX-171","name":"Gillespie","lat":"30.281","lon":"-98.945"},{"key":"US-TX-173","name":"Glasscock","lat":"31.911","lon":"-101.570"},{"key":"US-TX-175","name":"Goliad","lat":"28.630","lon":"-97.431"},{"key":"US-TX-177","name":"Gonzales","lat":"29.516","lon":"-97.535"},{"key":"US-TX-179","name":"Gray","lat":"35.389","lon":"-100.817"},{"key":"US-TX-181","name":"Grayson","lat":"33.680","lon":"-96.655"},{"key":"US-TX-183","name":"Gregg","lat":"32.486","lon":"-94.761"},{"key":"US-TX-185","name":"Grimes","lat":"30.519","lon":"-96.117"},{"key":"US-TX-187","name":"Guadalupe","lat":"29.625","lon":"-97.964"},{"key":"US-TX-189","name":"Hale","lat":"34.037","lon":"-101.800"},{"key":"US-TX-191","name":"Hall","lat":"34.522","lon":"-100.628"},{"key":"US-TX-193","name":"Hamilton","lat":"31.721","lon":"-98.103"},{"key":"US-TX-195","name":"Hansford","lat":"36.271","lon":"-101.409"},{"key":"US-TX-197","name":"Hardeman","lat":"34.264","lon":"-99.681"},{"key":"US-TX-199","name":"Hardin","lat":"30.254","lon":"-94.209"},{"key":"US-TX-201","name":"Harris","lat":"29.850","lon":"-95.360"},{"key":"US-TX-203","name":"Harrison","lat":"32.556","lon":"-94.359"},{"key":"US-TX-205","name":"Hartley","lat":"35.922","lon":"-102.626"},{"key":"US-TX-207","name":"Haskell","lat":"33.147","lon":"-99.777"},{"key":"US-TX-209","name":"Hays","lat":"30.026","lon":"-97.928"},{"key":"US-TX-211","name":"Hemphill","lat":"35.789","lon":"-100.360"},{"key":"US-TX-213","name":"Henderson","lat":"32.214","lon":"-95.964"},{"key":"US-TX-215","name":"Hidalgo","lat":"26.221","lon":"-98.197"},{"key":"US-TX-217","name":"Hill","lat":"31.963","lon":"-97.264"},{"key":"US-TX-219","name":"Hockley","lat":"33.598","lon":"-102.312"},{"key":"US-TX-221","name":"Hood","lat":"32.428","lon":"-97.796"},{"key":"US-TX-223","name":"Hopkins","lat":"33.294","lon":"-95.585"},{"key":"US-TX-225","name":"Houston","lat":"31.341","lon":"-95.434"},{"key":"US-TX-227","name":"Howard","lat":"32.332","lon":"-101.462"},{"key":"US-TX-229","name":"Hudspeth","lat":"31.222","lon":"-105.419"},{"key":"US-TX-231","name":"Hunt","lat":"33.030","lon":"-96.060"},{"key":"US-TX-233","name":"Hutchinson","lat":"35.774","lon":"-101.443"},{"key":"US-TX-235","name":"Irion","lat":"31.349","lon":"-100.987"},{"key":"US-TX-237","name":"Jack","lat":"33.245","lon":"-98.141"},{"key":"US-TX-239","name":"Jackson","lat":"28.852","lon":"-96.677"},{"key":"US-TX-241","name":"Jasper","lat":"30.703","lon":"-94.152"},{"key":"US-TX-243","name":"Jeff Davis","lat":"30.649","lon":"-104.150"},{"key":"US-TX-245","name":"Jefferson","lat":"30.062","lon":"-94.175"},{"key":"US-TX-247","name":"Jim Hogg","lat":"27.140","lon":"-98.609"},{"key":"US-TX-249","name":"Jim Wells","lat":"27.861","lon":"-97.964"},{"key":"US-TX-251","name":"Johnson","lat":"32.351","lon":"-97.411"},{"key":"US-TX-253","name":"Jones","lat":"32.730","lon":"-99.847"},{"key":"US-TX-255","name":"Karnes","lat":"28.811","lon":"-97.882"},{"key":"US-TX-257","name":"Kaufman","lat":"32.527","lon":"-96.402"},{"key":"US-TX-259","name":"Kendall","lat":"29.823","lon":"-98.698"},{"key":"US-TX-261","name":"Kenedy","lat":"27.083","lon":"-97.643"},{"key":"US-TX-263","name":"Kent","lat":"33.143","lon":"-100.796"},{"key":"US-TX-265","name":"Kerr","lat":"30.025","lon":"-99.244"},{"key":"US-TX-267","name":"Kimble","lat":"30.455","lon":"-99.676"},{"key":"US-TX-269","name":"King","lat":"33.607","lon":"-100.212"},{"key":"US-TX-271","name":"Kinney","lat":"29.302","lon":"-100.660"},{"key":"US-TX-273","name":"Kleberg","lat":"27.387","lon":"-97.722"},{"key":"US-TX-275","name":"Knox","lat":"33.772","lon":"-99.671"},{"key":"US-TX-277","name":"Lamar","lat":"33.548","lon":"-95.583"},{"key":"US-TX-279","name":"Lamb","lat":"34.083","lon":"-102.347"},{"key":"US-TX-281","name":"Lampasas","lat":"31.139","lon":"-98.409"},{"key":"US-TX-283","name":"La Salle","lat":"28.407","lon":"-99.124"},{"key":"US-TX-285","name":"Lavaca","lat":"29.482","lon":"-96.938"},{"key":"US-TX-287","name":"Lee","lat":"30.367","lon":"-96.831"},{"key":"US-TX-289","name":"Leon","lat":"31.281","lon":"-95.992"},{"key":"US-TX-291","name":"Liberty","lat":"30.103","lon":"-94.904"},{"key":"US-TX-293","name":"Limestone","lat":"31.563","lon":"-96.569"},{"key":"US-TX-295","name":"Lipscomb","lat":"36.379","lon":"-100.363"},{"key":"US-TX-297","name":"Live Oak","lat":"28.268","lon":"-97.993"},{"key":"US-TX-299","name":"Llano","lat":"30.728","lon":"-98.447"},{"key":"US-TX-301","name":"Loving","lat":"31.802","lon":"-103.768"},{"key":"US-TX-303","name":"Lubbock","lat":"33.595","lon":"-101.823"},{"key":"US-TX-305","name":"Lynn","lat":"33.196","lon":"-101.845"},{"key":"US-TX-307","name":"McCulloch","lat":"31.398","lon":"-99.341"},{"key":"US-TX-309","name":"McLennan","lat":"31.543","lon":"-97.210"},{"key":"US-TX-311","name":"McMullen","lat":"28.405","lon":"-98.570"},{"key":"US-TX-313","name":"Madison","lat":"30.944","lon":"-95.875"},{"key":"US-TX-315","name":"Marion","lat":"32.753","lon":"-94.300"},{"key":"US-TX-317","name":"Martin","lat":"32.301","lon":"-101.895"},{"key":"US-TX-319","name":"Mason","lat":"30.758","lon":"-99.246"},{"key":"US-TX-321","name":"Matagorda","lat":"28.899","lon":"-95.881"},{"key":"US-TX-323","name":"Maverick","lat":"28.665","lon":"-100.430"},{"key":"US-TX-325","name":"Medina","lat":"29.440","lon":"-98.990"},{"key":"US-TX-327","name":"Menard","lat":"30.917","lon":"-99.751"},{"key":"US-TX-329","name":"Midland","lat":"31.913","lon":"-102.109"},{"key":"US-TX-331","name":"Milam","lat":"30.878","lon":"-96.829"},{"key":"US-TX-333","name":"Mills","lat":"31.401","lon":"-98.720"},{"key":"US-TX-335","name":"Mitchell","lat":"32.303","lon":"-100.921"},{"key":"US-TX-337","name":"Montague","lat":"33.787","lon":"-97.724"},{"key":"US-TX-339","name":"Montgomery","lat":"30.195","lon":"-95.455"},{"key":"US-TX-341","name":"Moore","lat":"35.819","lon":"-101.841"},{"key":"US-TX-343","name":"Morris","lat":"33.164","lon":"-94.743"},{"key":"US-TX-345","name":"Motley","lat":"34.163","lon":"-100.777"},{"key":"US-TX-347","name":"Nacogdoches","lat":"31.530","lon":"-94.568"},{"key":"US-TX-349","name":"Navarro","lat":"32.162","lon":"-96.270"},{"key":"US-TX-351","name":"Newton","lat":"30.751","lon":"-93.674"},{"key":"US-TX-353","name":"Nolan","lat":"32.303","lon":"-100.394"},{"key":"US-TX-355","name":"Nueces","lat":"27.795","lon":"-97.484"},{"key":"US-TX-357","name":"Ochiltree","lat":"36.419","lon":"-100.780"},{"key":"US-TX-359","name":"Oldham","lat":"35.360","lon":"-102.510"},{"key":"US-TX-361","name":"Orange","lat":"30.103","lon":"-93.972"},{"key":"US-TX-363","name":"Palo Pinto","lat":"32.740","lon":"-98.244"},{"key":"US-TX-365","name":"Panola","lat":"32.259","lon":"-94.385"},{"key":"US-TX-367","name":"Parker","lat":"32.770","lon":"-97.752"},{"key":"US-TX-369","name":"Parmer","lat":"34.476","lon":"-102.871"},{"key":"US-TX-371","name":"Pecos","lat":"31.085","lon":"-102.367"},{"key":"US-TX-373","name":"Polk","lat":"30.844","lon":"-94.856"},{"key":"US-TX-375","name":"Potter","lat":"35.283","lon":"-101.884"},{"key":"US-TX-377","name":"Presidio","lat":"29.877","lon":"-104.444"},{"key":"US-TX-379","name":"Rains","lat":"32.795","lon":"-95.808"},{"key":"US-TX-381","name":"Randall","lat":"35.046","lon":"-101.863"},{"key":"US-TX-383","name":"Reagan","lat":"31.381","lon":"-101.543"},{"key":"US-TX-385","name":"Real","lat":"29.776","lon":"-99.979"},{"key":"US-TX-387","name":"Red River","lat":"33.485","lon":"-95.013"},{"key":"US-TX-389","name":"Reeves","lat":"31.588","lon":"-103.533"},{"key":"US-TX-391","name":"Refugio","lat":"28.337","lon":"-97.138"},{"key":"US-TX-393","name":"Roberts","lat":"35.781","lon":"-100.772"},{"key":"US-TX-395","name":"Robertson","lat":"31.039","lon":"-96.465"},{"key":"US-TX-397","name":"Rockwall","lat":"32.917","lon":"-96.450"},{"key":"US-TX-399","name":"Runnels","lat":"31.794","lon":"-100.009"},{"key":"US-TX-401","name":"Rusk","lat":"32.161","lon":"-94.624"},{"key":"US-TX-403","name":"Sabine","lat":"31.403","lon":"-93.870"},{"key":"US-TX-405","name":"San Augustine","lat":"31.370","lon":"-94.256"},{"key":"US-TX-407","name":"San Jacinto","lat":"30.609","lon":"-95.129"},{"key":"US-TX-409","name":"San Patricio","lat":"27.988","lon":"-97.528"},{"key":"US-TX-411","name":"San Saba","lat":"31.272","lon":"-98.692"},{"key":"US-TX-413","name":"Schleicher","lat":"30.943","lon":"-100.486"},{"key":"US-TX-415","name":"Scurry","lat":"32.689","lon":"-100.927"},{"key":"US-TX-417","name":"Shackelford","lat":"32.716","lon":"-99.401"},{"key":"US-TX-419","name":"Shelby","lat":"31.756","lon":"-94.225"},{"key":"US-TX-421","name":"Sherman","lat":"36.321","lon":"-101.832"},{"key":"US-TX-423","name":"Smith","lat":"32.482","lon":"-95.345"},{"key":"US-TX-425","name":"Somervell","lat":"32.216","lon":"-97.744"},{"key":"US-TX-427","name":"Starr","lat":"26.427","lon":"-98.822"},{"key":"US-TX-429","name":"Stephens","lat":"32.744","lon":"-98.851"},{"key":"US-TX-431","name":"Sterling","lat":"31.849","lon":"-101.004"},{"key":"US-TX-433","name":"Stonewall","lat":"33.148","lon":"-100.209"},{"key":"US-TX-435","name":"Sutton","lat":"30.435","lon":"-100.664"},{"key":"US-TX-437","name":"Swisher","lat":"34.538","lon":"-101.729"},{"key":"US-TX-439","name":"Tarrant","lat":"32.771","lon":"-97.258"},{"key":"US-TX-441","name":"Taylor","lat":"32.368","lon":"-99.865"},{"key":"US-TX-443","name":"Terrell","lat":"30.369","lon":"-101.791"},{"key":"US-TX-445","name":"Terry","lat":"33.164","lon":"-102.301"},{"key":"US-TX-447","name":"Throckmorton","lat":"33.151","lon":"-99.144"},{"key":"US-TX-449","name":"Titus","lat":"33.223","lon":"-94.962"},{"key":"US-TX-451","name":"Tom Green","lat":"31.448","lon":"-100.596"},{"key":"US-TX-453","name":"Travis","lat":"30.397","lon":"-97.740"},{"key":"US-TX-455","name":"Trinity","lat":"31.136","lon":"-95.066"},{"key":"US-TX-457","name":"Tyler","lat":"30.851","lon":"-94.264"},{"key":"US-TX-459","name":"Upshur","lat":"32.670","lon":"-94.910"},{"key":"US-TX-461","name":"Upton","lat":"31.351","lon":"-102.068"},{"key":"US-TX-463","name":"Uvalde","lat":"29.343","lon":"-99.732"},{"key":"US-TX-465","name":"Val Verde","lat":"29.535","lon":"-101.052"},{"key":"US-TX-467","name":"Van Zandt","lat":"32.645","lon":"-95.725"},{"key":"US-TX-469","name":"Victoria","lat":"28.691","lon":"-96.969"},{"key":"US-TX-471","name":"Walker","lat":"30.859","lon":"-95.609"},{"key":"US-TX-473","name":"Waller","lat":"30.030","lon":"-96.040"},{"key":"US-TX-475","name":"Ward","lat":"31.449","lon":"-103.264"},{"key":"US-TX-477","name":"Washington","lat":"30.237","lon":"-96.348"},{"key":"US-TX-479","name":"Webb","lat":"27.678","lon":"-99.595"},{"key":"US-TX-481","name":"Wharton","lat":"29.420","lon":"-96.056"},{"key":"US-TX-483","name":"Wheeler","lat":"35.411","lon":"-100.376"},{"key":"US-TX-485","name":"Wichita","lat":"34.057","lon":"-98.683"},{"key":"US-TX-487","name":"Wilbarger","lat":"34.249","lon":"-99.200"},{"key":"US-TX-489","name":"Willacy","lat":"26.421","lon":"-97.525"},{"key":"US-TX-491","name":"Williamson","lat":"30.550","lon":"-97.664"},{"key":"US-TX-493","name":"Wilson","lat":"29.270","lon":"-98.092"},{"key":"US-TX-495","name":"Winkler","lat":"31.868","lon":"-103.086"},{"key":"US-TX-497","name":"Wise","lat":"33.187","lon":"-97.576"},{"key":"US-TX-499","name":"Wood","lat":"32.677","lon":"-95.389"},{"key":"US-TX-501","name":"Yoakum","lat":"33.081","lon":"-102.852"},{"key":"US-TX-503","name":"Young","lat":"33.156","lon":"-98.714"},{"key":"US-TX-505","name":"Zapata","lat":"26.997","lon":"-99.317"},{"key":"US-TX-507","name":"Zavala","lat":"28.891","lon":"-99.716"}]},"US-UT":{"key":"US-UT","name":"Utah","lon":"-111.547","lat":"39.500","counties":[{"key":"US-UT-001","name":"Beaver","lat":"38.364","lon":"-112.592"},{"key":"US-UT-003","name":"Box Elder","lat":"41.635","lon":"-112.187"},{"key":"US-UT-005","name":"Cache","lat":"41.643","lon":"-111.717"},{"key":"US-UT-007","name":"Carbon","lat":"39.635","lon":"-110.486"},{"key":"US-UT-009","name":"Daggett","lat":"40.807","lon":"-109.613"},{"key":"US-UT-011","name":"Davis","lat":"40.984","lon":"-111.895"},{"key":"US-UT-013","name":"Duchesne","lat":"40.670","lon":"-110.469"},{"key":"US-UT-015","name":"Emery","lat":"39.075","lon":"-110.343"},{"key":"US-UT-017","name":"Garfield","lat":"37.860","lon":"-110.660"},{"key":"US-UT-019","name":"Grand","lat":"38.967","lon":"-109.977"},{"key":"US-UT-021","name":"Iron","lat":"37.746","lon":"-113.208"},{"key":"US-UT-023","name":"Juab","lat":"39.767","lon":"-112.108"},{"key":"US-UT-025","name":"Kane","lat":"37.248","lon":"-111.140"},{"key":"US-UT-027","name":"Millard","lat":"39.142","lon":"-112.403"},{"key":"US-UT-029","name":"Morgan","lat":"41.091","lon":"-111.549"},{"key":"US-UT-031","name":"Piute","lat":"38.339","lon":"-112.313"},{"key":"US-UT-033","name":"Rich","lat":"41.518","lon":"-111.373"},{"key":"US-UT-035","name":"Salt Lake","lat":"40.630","lon":"-111.871"},{"key":"US-UT-037","name":"San Juan","lat":"37.659","lon":"-110.426"},{"key":"US-UT-039","name":"Sanpete","lat":"39.417","lon":"-111.634"},{"key":"US-UT-041","name":"Sevier","lat":"38.756","lon":"-112.081"},{"key":"US-UT-043","name":"Summit","lat":"40.810","lon":"-111.145"},{"key":"US-UT-045","name":"Tooele","lat":"40.268","lon":"-112.334"},{"key":"US-UT-047","name":"Uintah","lat":"40.177","lon":"-109.722"},{"key":"US-UT-049","name":"Utah","lat":"40.183","lon":"-111.789"},{"key":"US-UT-051","name":"Wasatch","lat":"40.409","lon":"-111.308"},{"key":"US-UT-053","name":"Washington","lat":"37.322","lon":"-113.508"},{"key":"US-UT-055","name":"Wayne","lat":"38.328","lon":"-110.216"},{"key":"US-UT-057","name":"Weber","lat":"41.299","lon":"-111.747"}]},"US-VA":{"key":"US-VA","name":"Virginia","lon":"-79.421","lat":"38.003","counties":[{"key":"US-VA-001","name":"Accomack","lat":"37.742","lon":"-75.714"},{"key":"US-VA-003","name":"Albemarle","lat":"38.012","lon":"-78.629"},{"key":"US-VA-005","name":"Alleghany","lat":"37.776","lon":"-80.016"},{"key":"US-VA-007","name":"Amelia","lat":"37.356","lon":"-77.885"},{"key":"US-VA-009","name":"Amherst","lat":"37.613","lon":"-79.148"},{"key":"US-VA-011","name":"Appomattox","lat":"37.363","lon":"-78.786"},{"key":"US-VA-013","name":"Arlington","lat":"38.869","lon":"-77.094"},{"key":"US-VA-015","name":"Augusta","lat":"38.158","lon":"-79.141"},{"key":"US-VA-017","name":"Bath","lat":"38.083","lon":"-79.744"},{"key":"US-VA-019","name":"Bedford","lat":"37.335","lon":"-79.548"},{"key":"US-VA-021","name":"Bland","lat":"37.102","lon":"-81.178"},{"key":"US-VA-023","name":"Botetourt","lat":"37.518","lon":"-79.777"},{"key":"US-VA-025","name":"Brunswick","lat":"36.904","lon":"-77.852"},{"key":"US-VA-027","name":"Buchanan","lat":"37.231","lon":"-81.989"},{"key":"US-VA-029","name":"Buckingham","lat":"37.561","lon":"-78.581"},{"key":"US-VA-031","name":"Campbell","lat":"37.186","lon":"-79.143"},{"key":"US-VA-033","name":"Caroline","lat":"37.997","lon":"-77.301"},{"key":"US-VA-035","name":"Carroll","lat":"36.704","lon":"-80.694"},{"key":"US-VA-036","name":"Charles City","lat":"37.378","lon":"-77.052"},{"key":"US-VA-037","name":"Charlotte","lat":"37.019","lon":"-78.693"},{"key":"US-VA-041","name":"Chesterfield","lat":"37.358","lon":"-77.527"},{"key":"US-VA-043","name":"Clarke","lat":"39.121","lon":"-78.026"},{"key":"US-VA-045","name":"Craig","lat":"37.495","lon":"-80.186"},{"key":"US-VA-047","name":"Culpeper","lat":"38.447","lon":"-77.910"},{"key":"US-VA-049","name":"Cumberland","lat":"37.474","lon":"-78.246"},{"key":"US-VA-051","name":"Dickenson","lat":"37.111","lon":"-82.301"},{"key":"US-VA-053","name":"Dinwiddie","lat":"37.108","lon":"-77.675"},{"key":"US-VA-057","name":"Essex","lat":"37.957","lon":"-76.989"},{"key":"US-VA-059","name":"Fairfax","lat":"38.824","lon":"-77.272"},{"key":"US-VA-061","name":"Fauquier","lat":"38.704","lon":"-77.883"},{"key":"US-VA-063","name":"Floyd","lat":"36.947","lon":"-80.324"},{"key":"US-VA-065","name":"Fluvanna","lat":"37.797","lon":"-78.299"},{"key":"US-VA-067","name":"Franklin","lat":"37.039","lon":"-79.916"},{"key":"US-VA-069","name":"Frederick","lat":"39.162","lon":"-78.283"},{"key":"US-VA-071","name":"Giles","lat":"37.318","lon":"-80.724"},{"key":"US-VA-073","name":"Gloucester","lat":"37.461","lon":"-76.553"},{"key":"US-VA-075","name":"Goochland","lat":"37.667","lon":"-77.856"},{"key":"US-VA-077","name":"Grayson","lat":"36.690","lon":"-81.251"},{"key":"US-VA-079","name":"Greene","lat":"38.343","lon":"-78.452"},{"key":"US-VA-081","name":"Greensville","lat":"36.685","lon":"-77.458"},{"key":"US-VA-083","name":"Halifax","lat":"36.798","lon":"-78.778"},{"key":"US-VA-085","name":"Hanover","lat":"37.742","lon":"-77.388"},{"key":"US-VA-087","name":"Henrico","lat":"37.545","lon":"-77.426"},{"key":"US-VA-089","name":"Henry","lat":"36.738","lon":"-79.904"},{"key":"US-VA-091","name":"Highland","lat":"38.356","lon":"-79.539"},{"key":"US-VA-093","name":"Isle of Wight","lat":"36.879","lon":"-76.795"},{"key":"US-VA-095","name":"James City","lat":"37.324","lon":"-76.754"},{"key":"US-VA-097","name":"King and Queen","lat":"37.745","lon":"-76.936"},{"key":"US-VA-099","name":"King George","lat":"38.244","lon":"-77.183"},{"key":"US-VA-101","name":"King William","lat":"37.702","lon":"-77.085"},{"key":"US-VA-103","name":"Lancaster","lat":"37.759","lon":"-76.463"},{"key":"US-VA-105","name":"Lee","lat":"36.746","lon":"-83.146"},{"key":"US-VA-107","name":"Loudoun","lat":"39.093","lon":"-77.621"},{"key":"US-VA-109","name":"Louisa","lat":"38.058","lon":"-77.945"},{"key":"US-VA-111","name":"Lunenburg","lat":"36.950","lon":"-78.242"},{"key":"US-VA-113","name":"Madison","lat":"38.374","lon":"-78.265"},{"key":"US-VA-115","name":"Mathews","lat":"37.454","lon":"-76.375"},{"key":"US-VA-117","name":"Mecklenburg","lat":"36.727","lon":"-78.455"},{"key":"US-VA-119","name":"Middlesex","lat":"37.608","lon":"-76.580"},{"key":"US-VA-121","name":"Montgomery","lat":"37.114","lon":"-80.483"},{"key":"US-VA-125","name":"Nelson","lat":"37.779","lon":"-78.916"},{"key":"US-VA-127","name":"New Kent","lat":"37.496","lon":"-76.980"},{"key":"US-VA-131","name":"Northampton","lat":"37.374","lon":"-75.845"},{"key":"US-VA-133","name":"Northumberland","lat":"37.862","lon":"-76.460"},{"key":"US-VA-135","name":"Nottoway","lat":"37.079","lon":"-78.044"},{"key":"US-VA-137","name":"Orange","lat":"38.269","lon":"-78.018"},{"key":"US-VA-139","name":"Page","lat":"38.609","lon":"-78.467"},{"key":"US-VA-141","name":"Patrick","lat":"36.723","lon":"-80.334"},{"key":"US-VA-143","name":"Pittsylvania","lat":"36.873","lon":"-79.383"},{"key":"US-VA-145","name":"Powhatan","lat":"37.542","lon":"-77.932"},{"key":"US-VA-147","name":"Prince Edward","lat":"37.257","lon":"-78.478"},{"key":"US-VA-149","name":"Prince George","lat":"37.239","lon":"-77.227"},{"key":"US-VA-153","name":"Prince William","lat":"38.725","lon":"-77.448"},{"key":"US-VA-155","name":"Pulaski","lat":"37.081","lon":"-80.640"},{"key":"US-VA-157","name":"Rappahannock","lat":"38.734","lon":"-78.146"},{"key":"US-VA-159","name":"Richmond","lat":"37.941","lon":"-76.702"},{"key":"US-VA-161","name":"Roanoke","lat":"37.246","lon":"-80.010"},{"key":"US-VA-163","name":"Rockbridge","lat":"37.774","lon":"-79.408"},{"key":"US-VA-165","name":"Rockingham","lat":"38.473","lon":"-78.814"},{"key":"US-VA-167","name":"Russell","lat":"36.960","lon":"-82.107"},{"key":"US-VA-169","name":"Scott","lat":"36.766","lon":"-82.685"},{"key":"US-VA-171","name":"Shenandoah","lat":"38.934","lon":"-78.486"},{"key":"US-VA-173","name":"Smyth","lat":"36.852","lon":"-81.559"},{"key":"US-VA-175","name":"Southampton","lat":"36.714","lon":"-77.087"},{"key":"US-VA-177","name":"Spotsylvania","lat":"38.195","lon":"-77.666"},{"key":"US-VA-179","name":"Stafford","lat":"38.401","lon":"-77.453"},{"key":"US-VA-181","name":"Surry","lat":"37.125","lon":"-76.941"},{"key":"US-VA-183","name":"Sussex","lat":"36.962","lon":"-77.242"},{"key":"US-VA-185","name":"Tazewell","lat":"37.132","lon":"-81.565"},{"key":"US-VA-187","name":"Warren","lat":"38.885","lon":"-78.206"},{"key":"US-VA-191","name":"Washington","lat":"36.741","lon":"-82.055"},{"key":"US-VA-193","name":"Westmoreland","lat":"38.104","lon":"-76.833"},{"key":"US-VA-195","name":"Wise","lat":"36.953","lon":"-82.633"},{"key":"US-VA-197","name":"Wythe","lat":"36.912","lon":"-81.101"},{"key":"US-VA-199","name":"York","lat":"37.246","lon":"-76.584"},{"key":"US-VA-510","name":"Alexandria","lat":"38.823","lon":"-77.094"},{"key":"US-VA-520","name":"Bristol","lat":"36.635","lon":"-82.148"},{"key":"US-VA-530","name":"Buena Vista","lat":"37.729","lon":"-79.359"},{"key":"US-VA-540","name":"Charlottesville","lat":"38.037","lon":"-78.487"},{"key":"US-VA-550","name":"Chesapeake","lat":"36.776","lon":"-76.290"},{"key":"US-VA-570","name":"Colonial Heights","lat":"37.269","lon":"-77.398"},{"key":"US-VA-580","name":"Covington","lat":"37.782","lon":"-79.987"},{"key":"US-VA-590","name":"Danville","lat":"36.595","lon":"-79.409"},{"key":"US-VA-595","name":"Emporia","lat":"36.694","lon":"-77.537"},{"key":"US-VA-600","name":"Fairfax City","lat":"38.850","lon":"-77.300"},{"key":"US-VA-610","name":"Falls Church","lat":"38.882","lon":"-77.172"},{"key":"US-VA-620","name":"Franklin City","lat":"36.683","lon":"-76.933"},{"key":"US-VA-630","name":"Fredericksburg","lat":"38.302","lon":"-77.497"},{"key":"US-VA-640","name":"Galax","lat":"36.672","lon":"-80.920"},{"key":"US-VA-650","name":"Hampton","lat":"37.055","lon":"-76.383"},{"key":"US-VA-660","name":"Harrisonburg","lat":"38.431","lon":"-78.874"},{"key":"US-VA-670","name":"Hopewell","lat":"37.290","lon":"-77.297"},{"key":"US-VA-678","name":"Lexington","lat":"37.783","lon":"-79.439"},{"key":"US-VA-680","name":"Lynchburg","lat":"37.407","lon":"-79.191"},{"key":"US-VA-683","name":"Manassas","lat":"38.746","lon":"-77.488"},{"key":"US-VA-685","name":"Manassas Park","lat":"38.774","lon":"-77.451"},{"key":"US-VA-690","name":"Martinsville","lat":"36.669","lon":"-79.857"},{"key":"US-VA-700","name":"Newport News","lat":"37.093","lon":"-76.504"},{"key":"US-VA-710","name":"Norfolk","lat":"36.880","lon":"-76.250"},{"key":"US-VA-720","name":"Norton","lat":"36.934","lon":"-82.624"},{"key":"US-VA-730","name":"Petersburg","lat":"37.203","lon":"-77.390"},{"key":"US-VA-735","name":"Poquoson","lat":"37.131","lon":"-76.367"},{"key":"US-VA-740","name":"Portsmouth","lat":"36.846","lon":"-76.361"},{"key":"US-VA-750","name":"Radford","lat":"37.121","lon":"-80.546"},{"key":"US-VA-760","name":"Richmond City","lat":"37.538","lon":"-77.481"},{"key":"US-VA-770","name":"Roanoke City","lat":"37.273","lon":"-79.957"},{"key":"US-VA-775","name":"Salem","lat":"37.286","lon":"-80.060"},{"key":"US-VA-790","name":"Staunton","lat":"38.158","lon":"-79.059"},{"key":"US-VA-800","name":"Suffolk","lat":"36.743","lon":"-76.661"},{"key":"US-VA-810","name":"Virginia Beach","lat":"36.788","lon":"-76.081"},{"key":"US-VA-820","name":"Waynesboro","lat":"38.067","lon":"-78.904"},{"key":"US-VA-830","name":"Williamsburg","lat":"37.276","lon":"-76.709"},{"key":"US-VA-840","name":"Winchester","lat":"39.173","lon":"-78.174"}]},"US-VT":{"key":"US-VT","name":"Vermont","lon":"-72.451","lat":"43.872","counties":[{"key":"US-VT-001","name":"Addison","lat":"44.032","lon":"-73.248"},{"key":"US-VT-003","name":"Bennington","lat":"43.053","lon":"-73.071"},{"key":"US-VT-005","name":"Caledonia","lat":"44.414","lon":"-72.092"},{"key":"US-VT-007","name":"Chittenden","lat":"44.476","lon":"-73.160"},{"key":"US-VT-009","name":"Essex","lat":"44.666","lon":"-71.640"},{"key":"US-VT-011","name":"Franklin","lat":"44.838","lon":"-73.002"},{"key":"US-VT-013","name":"Grand Isle","lat":"44.781","lon":"-73.301"},{"key":"US-VT-015","name":"Lamoille","lat":"44.616","lon":"-72.693"},{"key":"US-VT-017","name":"Orange","lat":"44.009","lon":"-72.230"},{"key":"US-VT-019","name":"Orleans","lat":"44.812","lon":"-72.205"},{"key":"US-VT-021","name":"Rutland","lat":"43.605","lon":"-73.179"},{"key":"US-VT-023","name":"Washington","lat":"44.285","lon":"-72.542"},{"key":"US-VT-025","name":"Windham","lat":"42.996","lon":"-72.564"},{"key":"US-VT-027","name":"Windsor","lat":"43.592","lon":"-72.520"}]},"US-WA":{"key":"US-WA","name":"Washington","lon":"-120.882","lat":"47.273","counties":[{"key":"US-WA-001","name":"Adams","lat":"46.882","lon":"-118.326"},{"key":"US-WA-003","name":"Asotin","lat":"46.266","lon":"-117.088"},{"key":"US-WA-005","name":"Benton","lat":"46.349","lon":"-119.407"},{"key":"US-WA-007","name":"Chelan","lat":"47.952","lon":"-120.681"},{"key":"US-WA-009","name":"Clallam","lat":"48.168","lon":"-124.015"},{"key":"US-WA-011","name":"Clark","lat":"45.874","lon":"-122.503"},{"key":"US-WA-013","name":"Columbia","lat":"46.453","lon":"-117.992"},{"key":"US-WA-015","name":"Cowlitz","lat":"46.021","lon":"-122.599"},{"key":"US-WA-017","name":"Douglas","lat":"47.781","lon":"-119.736"},{"key":"US-WA-019","name":"Ferry","lat":"48.388","lon":"-118.328"},{"key":"US-WA-021","name":"Franklin","lat":"46.476","lon":"-118.761"},{"key":"US-WA-023","name":"Garfield","lat":"46.556","lon":"-117.492"},{"key":"US-WA-025","name":"Grant","lat":"47.156","lon":"-119.604"},{"key":"US-WA-027","name":"Grays Harbor","lat":"47.052","lon":"-123.943"},{"key":"US-WA-029","name":"Island","lat":"48.164","lon":"-122.539"},{"key":"US-WA-031","name":"Jefferson","lat":"47.902","lon":"-123.038"},{"key":"US-WA-033","name":"King","lat":"47.416","lon":"-121.824"},{"key":"US-WA-035","name":"Kitsap","lat":"47.650","lon":"-122.624"},{"key":"US-WA-037","name":"Kittitas","lat":"47.254","lon":"-120.916"},{"key":"US-WA-039","name":"Klickitat","lat":"45.798","lon":"-120.928"},{"key":"US-WA-041","name":"Lewis","lat":"46.634","lon":"-121.927"},{"key":"US-WA-043","name":"Lincoln","lat":"47.823","lon":"-118.337"},{"key":"US-WA-045","name":"Mason","lat":"47.278","lon":"-123.047"},{"key":"US-WA-047","name":"Okanogan","lat":"48.372","lon":"-120.144"},{"key":"US-WA-049","name":"Pacific","lat":"46.546","lon":"-123.880"},{"key":"US-WA-051","name":"Pend Oreille","lat":"48.424","lon":"-117.275"},{"key":"US-WA-053","name":"Pierce","lat":"47.075","lon":"-122.196"},{"key":"US-WA-055","name":"San Juan","lat":"48.597","lon":"-122.936"},{"key":"US-WA-057","name":"Skagit","lat":"48.501","lon":"-121.928"},{"key":"US-WA-059","name":"Skamania","lat":"45.825","lon":"-121.904"},{"key":"US-WA-061","name":"Snohomish","lat":"47.992","lon":"-121.731"},{"key":"US-WA-063","name":"Spokane","lat":"47.726","lon":"-117.459"},{"key":"US-WA-065","name":"Stevens","lat":"48.281","lon":"-118.047"},{"key":"US-WA-067","name":"Thurston","lat":"46.960","lon":"-122.666"},{"key":"US-WA-069","name":"Wahkiakum","lat":"46.271","lon":"-123.516"},{"key":"US-WA-071","name":"Walla Walla","lat":"46.307","lon":"-118.594"},{"key":"US-WA-073","name":"Whatcom","lat":"48.807","lon":"-121.957"},{"key":"US-WA-075","name":"Whitman","lat":"46.694","lon":"-117.731"},{"key":"US-WA-077","name":"Yakima","lat":"46.737","lon":"-121.119"}]},"US-WI":{"key":"US-WI","name":"Wisconsin","lon":"-89.569","lat":"44.901","counties":[{"key":"US-WI-001","name":"Adams","lat":"43.982","lon":"-89.890"},{"key":"US-WI-003","name":"Ashland","lat":"46.823","lon":"-90.651"},{"key":"US-WI-005","name":"Barron","lat":"45.381","lon":"-91.865"},{"key":"US-WI-007","name":"Bayfield","lat":"46.786","lon":"-91.039"},{"key":"US-WI-009","name":"Brown","lat":"44.536","lon":"-88.020"},{"key":"US-WI-011","name":"Buffalo","lat":"44.252","lon":"-91.727"},{"key":"US-WI-013","name":"Burnett","lat":"45.886","lon":"-92.509"},{"key":"US-WI-015","name":"Calumet","lat":"44.134","lon":"-88.258"},{"key":"US-WI-017","name":"Chippewa","lat":"45.040","lon":"-91.334"},{"key":"US-WI-019","name":"Clark","lat":"44.802","lon":"-90.573"},{"key":"US-WI-021","name":"Columbia","lat":"43.489","lon":"-89.444"},{"key":"US-WI-023","name":"Crawford","lat":"43.186","lon":"-90.961"},{"key":"US-WI-025","name":"Dane","lat":"43.076","lon":"-89.424"},{"key":"US-WI-027","name":"Dodge","lat":"43.403","lon":"-88.750"},{"key":"US-WI-029","name":"Door","lat":"45.098","lon":"-87.177"},{"key":"US-WI-031","name":"Douglas","lat":"46.607","lon":"-91.992"},{"key":"US-WI-033","name":"Dunn","lat":"45.004","lon":"-91.912"},{"key":"US-WI-035","name":"Eau Claire","lat":"44.760","lon":"-91.318"},{"key":"US-WI-037","name":"Florence","lat":"45.923","lon":"-88.337"},{"key":"US-WI-039","name":"Fond du Lac","lat":"43.722","lon":"-88.494"},{"key":"US-WI-041","name":"Forest","lat":"45.790","lon":"-88.770"},{"key":"US-WI-043","name":"Grant","lat":"42.896","lon":"-90.784"},{"key":"US-WI-045","name":"Green","lat":"42.649","lon":"-89.570"},{"key":"US-WI-047","name":"Green Lake","lat":"43.785","lon":"-89.095"},{"key":"US-WI-049","name":"Iowa","lat":"43.060","lon":"-90.140"},{"key":"US-WI-051","name":"Iron","lat":"46.420","lon":"-90.265"},{"key":"US-WI-053","name":"Jackson","lat":"44.290","lon":"-90.915"},{"key":"US-WI-055","name":"Jefferson","lat":"43.030","lon":"-88.757"},{"key":"US-WI-057","name":"Juneau","lat":"43.958","lon":"-89.994"},{"key":"US-WI-059","name":"Kenosha","lat":"42.567","lon":"-88.036"},{"key":"US-WI-061","name":"Kewaunee","lat":"44.517","lon":"-87.554"},{"key":"US-WI-063","name":"La Crosse","lat":"43.962","lon":"-91.206"},{"key":"US-WI-065","name":"Lafayette","lat":"42.661","lon":"-90.173"},{"key":"US-WI-067","name":"Langlade","lat":"45.257","lon":"-89.018"},{"key":"US-WI-069","name":"Lincoln","lat":"45.372","lon":"-89.721"},{"key":"US-WI-071","name":"Manitowoc","lat":"44.102","lon":"-87.719"},{"key":"US-WI-073","name":"Marathon","lat":"44.880","lon":"-89.857"},{"key":"US-WI-075","name":"Marinette","lat":"45.328","lon":"-87.804"},{"key":"US-WI-077","name":"Marquette","lat":"43.805","lon":"-89.328"},{"key":"US-WI-078","name":"Menominee","lat":"44.980","lon":"-88.718"},{"key":"US-WI-079","name":"Milwaukee","lat":"43.035","lon":"-87.956"},{"key":"US-WI-081","name":"Monroe","lat":"43.933","lon":"-90.690"},{"key":"US-WI-083","name":"Oconto","lat":"44.933","lon":"-88.080"},{"key":"US-WI-085","name":"Oneida","lat":"45.730","lon":"-89.479"},{"key":"US-WI-087","name":"Outagamie","lat":"44.358","lon":"-88.429"},{"key":"US-WI-089","name":"Ozaukee","lat":"43.329","lon":"-87.931"},{"key":"US-WI-091","name":"Pepin","lat":"44.547","lon":"-92.064"},{"key":"US-WI-093","name":"Pierce","lat":"44.706","lon":"-92.507"},{"key":"US-WI-095","name":"Polk","lat":"45.439","lon":"-92.585"},{"key":"US-WI-097","name":"Portage","lat":"44.465","lon":"-89.538"},{"key":"US-WI-099","name":"Price","lat":"45.616","lon":"-90.375"},{"key":"US-WI-101","name":"Racine","lat":"42.746","lon":"-87.977"},{"key":"US-WI-103","name":"Richland","lat":"43.315","lon":"-90.415"},{"key":"US-WI-105","name":"Rock","lat":"42.666","lon":"-89.080"},{"key":"US-WI-107","name":"Rusk","lat":"45.456","lon":"-91.163"},{"key":"US-WI-109","name":"St. Croix","lat":"45.011","lon":"-92.566"},{"key":"US-WI-111","name":"Sauk","lat":"43.396","lon":"-89.929"},{"key":"US-WI-113","name":"Sawyer","lat":"45.899","lon":"-91.225"},{"key":"US-WI-115","name":"Shawano","lat":"44.771","lon":"-88.721"},{"key":"US-WI-117","name":"Sheboygan","lat":"43.736","lon":"-87.868"},{"key":"US-WI-119","name":"Taylor","lat":"45.231","lon":"-90.474"},{"key":"US-WI-121","name":"Trempealeau","lat":"44.162","lon":"-91.413"},{"key":"US-WI-123","name":"Vernon","lat":"43.596","lon":"-90.838"},{"key":"US-WI-125","name":"Vilas","lat":"46.013","lon":"-89.503"},{"key":"US-WI-127","name":"Walworth","lat":"42.692","lon":"-88.527"},{"key":"US-WI-129","name":"Washburn","lat":"45.849","lon":"-91.794"},{"key":"US-WI-131","name":"Washington","lat":"43.354","lon":"-88.214"},{"key":"US-WI-133","name":"Waukesha","lat":"43.022","lon":"-88.241"},{"key":"US-WI-135","name":"Waupaca","lat":"44.475","lon":"-88.904"},{"key":"US-WI-137","name":"Waushara","lat":"44.109","lon":"-89.188"},{"key":"US-WI-139","name":"Winnebago","lat":"44.146","lon":"-88.566"},{"key":"US-WI-141","name":"Wood","lat":"44.484","lon":"-89.970"}]},"US-WV":{"key":"US-WV","name":"West Virginia","lon":"-80.182","lat":"38.920","counties":[{"key":"US-WV-001","name":"Barbour","lat":"39.143","lon":"-79.949"},{"key":"US-WV-003","name":"Berkeley","lat":"39.483","lon":"-77.988"},{"key":"US-WV-005","name":"Boone","lat":"38.024","lon":"-81.700"},{"key":"US-WV-007","name":"Braxton","lat":"38.714","lon":"-80.681"},{"key":"US-WV-009","name":"Brooke","lat":"40.293","lon":"-80.607"},{"key":"US-WV-011","name":"Cabell","lat":"38.348","lon":"-82.252"},{"key":"US-WV-013","name":"Calhoun","lat":"38.838","lon":"-81.124"},{"key":"US-WV-015","name":"Clay","lat":"38.514","lon":"-80.990"},{"key":"US-WV-017","name":"Doddridge","lat":"39.290","lon":"-80.611"},{"key":"US-WV-019","name":"Fayette","lat":"38.073","lon":"-81.059"},{"key":"US-WV-021","name":"Gilmer","lat":"38.930","lon":"-80.920"},{"key":"US-WV-023","name":"Grant","lat":"39.112","lon":"-79.250"},{"key":"US-WV-025","name":"Greenbrier","lat":"37.879","lon":"-80.433"},{"key":"US-WV-027","name":"Hampshire","lat":"39.321","lon":"-78.611"},{"key":"US-WV-029","name":"Hancock","lat":"40.517","lon":"-80.589"},{"key":"US-WV-031","name":"Hardy","lat":"39.003","lon":"-78.846"},{"key":"US-WV-033","name":"Harrison","lat":"39.276","lon":"-80.476"},{"key":"US-WV-035","name":"Jackson","lat":"38.906","lon":"-81.670"},{"key":"US-WV-037","name":"Jefferson","lat":"39.353","lon":"-77.847"},{"key":"US-WV-039","name":"Kanawha","lat":"38.252","lon":"-81.636"},{"key":"US-WV-041","name":"Lewis","lat":"38.941","lon":"-80.495"},{"key":"US-WV-043","name":"Lincoln","lat":"38.183","lon":"-82.049"},{"key":"US-WV-045","name":"Logan","lat":"37.811","lon":"-81.916"},{"key":"US-WV-047","name":"McDowell","lat":"37.409","lon":"-81.680"},{"key":"US-WV-049","name":"Marion","lat":"39.538","lon":"-80.278"},{"key":"US-WV-051","name":"Marshall","lat":"39.912","lon":"-80.723"},{"key":"US-WV-053","name":"Mason","lat":"38.830","lon":"-82.057"},{"key":"US-WV-055","name":"Mercer","lat":"37.449","lon":"-81.167"},{"key":"US-WV-057","name":"Mineral","lat":"39.459","lon":"-78.906"},{"key":"US-WV-059","name":"Mingo","lat":"37.694","lon":"-82.095"},{"key":"US-WV-061","name":"Monongalia","lat":"39.608","lon":"-80.161"},{"key":"US-WV-063","name":"Monroe","lat":"37.586","lon":"-80.498"},{"key":"US-WV-065","name":"Morgan","lat":"39.581","lon":"-78.264"},{"key":"US-WV-067","name":"Nicholas","lat":"38.293","lon":"-80.921"},{"key":"US-WV-069","name":"Ohio","lat":"40.095","lon":"-80.671"},{"key":"US-WV-071","name":"Pendleton","lat":"38.711","lon":"-79.399"},{"key":"US-WV-073","name":"Pleasants","lat":"39.349","lon":"-81.189"},{"key":"US-WV-075","name":"Pocahontas","lat":"38.461","lon":"-79.812"},{"key":"US-WV-077","name":"Preston","lat":"39.382","lon":"-79.727"},{"key":"US-WV-079","name":"Putnam","lat":"38.463","lon":"-81.858"},{"key":"US-WV-081","name":"Raleigh","lat":"37.772","lon":"-81.243"},{"key":"US-WV-083","name":"Randolph","lat":"38.834","lon":"-79.700"},{"key":"US-WV-085","name":"Ritchie","lat":"39.179","lon":"-81.089"},{"key":"US-WV-087","name":"Roane","lat":"38.770","lon":"-81.269"},{"key":"US-WV-089","name":"Summers","lat":"37.673","lon":"-80.934"},{"key":"US-WV-091","name":"Taylor","lat":"39.329","lon":"-80.048"},{"key":"US-WV-093","name":"Tucker","lat":"39.112","lon":"-79.501"},{"key":"US-WV-095","name":"Tyler","lat":"39.451","lon":"-80.859"},{"key":"US-WV-097","name":"Upshur","lat":"38.907","lon":"-80.220"},{"key":"US-WV-099","name":"Wayne","lat":"38.139","lon":"-82.407"},{"key":"US-WV-101","name":"Webster","lat":"38.619","lon":"-80.406"},{"key":"US-WV-103","name":"Wetzel","lat":"39.563","lon":"-80.607"},{"key":"US-WV-105","name":"Wirt","lat":"39.031","lon":"-81.360"},{"key":"US-WV-107","name":"Wood","lat":"39.264","lon":"-81.440"},{"key":"US-WV-109","name":"Wyoming","lat":"37.582","lon":"-81.565"}]},"US-WY":{"key":"US-WY","name":"Wyoming","lon":"-107.555","lat":"43.000","counties":[{"key":"US-WY-001","name":"Albany","lat":"41.884","lon":"-105.661"},{"key":"US-WY-003","name":"Big Horn","lat":"44.642","lon":"-107.644"},{"key":"US-WY-005","name":"Campbell","lat":"44.245","lon":"-105.523"},{"key":"US-WY-007","name":"Carbon","lat":"41.644","lon":"-106.704"},{"key":"US-WY-009","name":"Converse","lat":"42.778","lon":"-105.482"},{"key":"US-WY-011","name":"Crook","lat":"44.578","lon":"-104.684"},{"key":"US-WY-013","name":"Fremont","lat":"43.417","lon":"-109.464"},{"key":"US-WY-015","name":"Goshen","lat":"42.075","lon":"-104.346"},{"key":"US-WY-017","name":"Hot Springs","lat":"43.762","lon":"-108.695"},{"key":"US-WY-019","name":"Johnson","lat":"44.330","lon":"-107.045"},{"key":"US-WY-021","name":"Laramie","lat":"41.295","lon":"-104.500"},{"key":"US-WY-023","name":"Lincoln","lat":"42.590","lon":"-110.741"},{"key":"US-WY-025","name":"Natrona","lat":"42.997","lon":"-106.749"},{"key":"US-WY-027","name":"Niobrara","lat":"42.928","lon":"-104.538"},{"key":"US-WY-029","name":"Park","lat":"44.182","lon":"-109.848"},{"key":"US-WY-031","name":"Platte","lat":"42.210","lon":"-104.937"},{"key":"US-WY-033","name":"Sheridan","lat":"44.754","lon":"-107.499"},{"key":"US-WY-035","name":"Sublette","lat":"42.954","lon":"-109.541"},{"key":"US-WY-037","name":"Sweetwater","lat":"41.599","lon":"-109.084"},{"key":"US-WY-039","name":"Teton","lat":"44.238","lon":"-110.289"},{"key":"US-WY-041","name":"Uinta","lat":"41.254","lon":"-110.462"},{"key":"US-WY-043","name":"Washakie","lat":"43.863","lon":"-107.827"},{"key":"US-WY-045","name":"Weston","lat":"43.814","lon":"-104.606"}]},"CA-AB":{"key":"CA-AB","name":"Alberta","lon":"-115.003","lat":"54.499","counties":[{"key":"CA-AB-EI","name":"Red Deer","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-EL","name":"Edmonton","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-ET","name":"Grande Cache","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-FI","name":"Drumheller","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-FN","name":"Banff","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-FO","name":"Hanna","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-FT","name":"Edson","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-NI","name":"Rocky Mountain House","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-NT","name":"Grande Prairie","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-ON","name":"Medicine Hat","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-SE","name":"Stettler","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-SI","name":"Calgary","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-SN","name":"Slave Lake","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-ST","name":"Fort McMurray","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-TE","name":"Camrose-Lloydminister","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-TN","name":"Athabasca","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-TR","name":"Fort MacLeod","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-TV","name":"St. Paul","lat":"54.499","lon":"-115.003"},{"key":"CA-AB-TW","name":"Lethbridge","lat":"54.499","lon":"-115.003"}]},"CA-BC":{"key":"CA-BC","name":"British Columbia","lon":"-126.557","lat":"54.113","counties":[{"key":"CA-BC-AC","name":"Alberni-Clayoquot","lat":"49.091","lon":"-125.668"},{"key":"CA-BC-BN","name":"Bulkley-Nechako","lat":"54.667","lon":"-125.157"},{"key":"CA-BC-CC","name":"Central Coast","lat":"52.064","lon":"-127.886"},{"key":"CA-BC-CK","name":"Central Kootenay","lat":"49.100","lon":"-117.270"},{"key":"CA-BC-CO","name":"Central Okanagan","lat":"49.727","lon":"-119.501"},{"key":"CA-BC-CP","name":"Capital","lat":"48.428","lon":"-123.390"},{"key":"CA-BC-CR","name":"Cariboo","lat":"51.911","lon":"-121.406"},{"key":"CA-BC-CS","name":"Columbia-Shuswap","lat":"51.655","lon":"-116.645"},{"key":"CA-BC-CV","name":"Cowichan Valley","lat":"48.734","lon":"-124.746"},{"key":"CA-BC-CX","name":"Comox-Strathcona","lat":"50.230","lon":"-125.181"},{"key":"CA-BC-EK","name":"East Kootenay","lat":"50.680","lon":"-115.772"},{"key":"CA-BC-FF","name":"Fraser-Fort George","lat":"53.299","lon":"-120.568"},{"key":"CA-BC-FV","name":"Fraser Valley","lat":"49.275","lon":"-121.604"},{"key":"CA-BC-GV","name":"Metro Vancouver","lat":"49.168","lon":"-122.987"},{"key":"CA-BC-KB","name":"Kootenay Boundary","lat":"49.184","lon":"-118.112"},{"key":"CA-BC-KS","name":"Kitimat-Stikine","lat":"56.745","lon":"-129.962"},{"key":"CA-BC-MW","name":"Mount Waddington","lat":"50.787","lon":"-126.859"},{"key":"CA-BC-NA","name":"Nanaimo","lat":"49.306","lon":"-124.238"},{"key":"CA-BC-NO","name":"North Okanagan","lat":"50.235","lon":"-119.327"},{"key":"CA-BC-NR","name":"Northern Rockies","lat":"59.150","lon":"-125.770"},{"key":"CA-BC-OS","name":"Okanagan-Similkameen","lat":"49.303","lon":"-120.186"},{"key":"CA-BC-PC","name":"Peace River","lat":"56.125","lon":"-121.735"},{"key":"CA-BC-PW","name":"Powell River","lat":"49.837","lon":"-124.485"},{"key":"CA-BC-SC","name":"Sunshine Coast","lat":"49.704","lon":"-123.854"},{"key":"CA-BC-SL","name":"Squamish-Lillooet","lat":"49.924","lon":"-123.015"},{"key":"CA-BC-SQ","name":"Skeena-Queen Charlotte","lat":"54.056","lon":"-131.696"},{"key":"CA-BC-ST","name":"Stikine","lat":"54.113","lon":"-126.557"},{"key":"CA-BC-TN","name":"Thompson-Nicola","lat":"50.738","lon":"-120.630"}]},"CA-MB":{"key":"CA-MB","name":"Manitoba","lon":"-95.499","lat":"54.499","counties":[{"key":"CA-MB-EE","name":"Churchill and Northern Manitoba","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-EI","name":"Central Manitoba - Central Plains","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-EL","name":"Winnipeg","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-ET","name":"North Interlake Area","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-FI","name":"South West Westman","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-FN","name":"Western Manitoba Westman","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-FO","name":"Pilot Mound Area","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-FT","name":"South Interlake","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-NI","name":"Portage la Prairie Area","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-NT","name":"North East Northern Region","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-ON","name":"Eastern Manitoba - Eastman","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-SE","name":"Brandon Area","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-SI","name":"Virden Area","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-SN","name":"Dauphin","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-ST","name":"Roblin - Russell - Rossburn Area","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-TE","name":"Whitehorse Plains","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-TN","name":"Selkirk Area","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-TO","name":"Flin Flon and North West","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-TR","name":"Pembina Valley","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-TT","name":"Swan River","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-TV","name":"Beausejour Area","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-TW","name":"Steinbach Area","lat":"54.499","lon":"-95.499"},{"key":"CA-MB-TY","name":"Thompson and North Central","lat":"54.499","lon":"-95.499"}]},"CA-NB":{"key":"CA-NB","name":"New Brunswick","lon":"-66.416","lat":"46.395","counties":[{"key":"CA-NB-AL","name":"Albert","lat":"45.547","lon":"-65.021"},{"key":"CA-NB-CA","name":"Carleton","lat":"46.310","lon":"-67.538"},{"key":"CA-NB-CH","name":"Charlotte","lat":"44.911","lon":"-66.779"},{"key":"CA-NB-GL","name":"Gloucester","lat":"48.006","lon":"-64.523"},{"key":"CA-NB-KE","name":"Kent","lat":"46.827","lon":"-64.903"},{"key":"CA-NB-KI","name":"Kings","lat":"45.462","lon":"-65.956"},{"key":"CA-NB-MA","name":"Madawaska","lat":"47.440","lon":"-68.393"},{"key":"CA-NB-NO","name":"Northumberland","lat":"47.025","lon":"-65.599"},{"key":"CA-NB-QU","name":"Queens","lat":"45.988","lon":"-65.987"},{"key":"CA-NB-RE","name":"Restigouche","lat":"47.818","lon":"-66.667"},{"key":"CA-NB-SJ","name":"Saint John","lat":"45.272","lon":"-66.067"},{"key":"CA-NB-SU","name":"Sunbury","lat":"45.911","lon":"-66.560"},{"key":"CA-NB-VI","name":"Victoria","lat":"47.420","lon":"-67.169"},{"key":"CA-NB-WE","name":"Westmorland","lat":"46.062","lon":"-64.852"},{"key":"CA-NB-YO","name":"York","lat":"45.961","lon":"-66.666"}]},"CA-NL":{"key":"CA-NL","name":"Newfoundland and Labrador","lon":"-60.230","lat":"53.496","counties":[{"key":"CA-NL-EI","name":"Notre Dame Bay-Lewisporte","lat":"53.496","lon":"-60.230"},{"key":"CA-NL-EL","name":"Nunatsiavut-Nain","lat":"53.496","lon":"-60.230"},{"key":"CA-NL-FI","name":"Humber District-Corner Brook","lat":"53.496","lon":"-60.230"},{"key":"CA-NL-FO","name":"St. George's-Stephenville","lat":"53.496","lon":"-60.230"},{"key":"CA-NL-NI","name":"Northern Peninsula-St. Anthony","lat":"53.496","lon":"-60.230"},{"key":"CA-NL-ON","name":"Avalon Peninsula-St. John's","lat":"53.496","lon":"-60.230"},{"key":"CA-NL-SE","name":"Bonavista/Trinity-Clarenville","lat":"53.496","lon":"-60.230"},{"key":"CA-NL-SI","name":"Central Newfoundland-Grand Falls-Windsor","lat":"53.496","lon":"-60.230"},{"key":"CA-NL-TE","name":"Labrador-Happy Valley-Goose Bay","lat":"53.496","lon":"-60.230"},{"key":"CA-NL-TR","name":"South Coast-Channel-Port aux Basques","lat":"53.496","lon":"-60.230"},{"key":"CA-NL-TW","name":"Burin Peninsula-Marystown","lat":"53.496","lon":"-60.230"}]},"CA-NS":{"key":"CA-NS","name":"Nova Scotia","lon":"-63.042","lat":"45.311","counties":[{"key":"CA-NS-AG","name":"Antigonish","lat":"45.717","lon":"-62.054"},{"key":"CA-NS-AP","name":"Annapolis","lat":"44.691","lon":"-65.212"},{"key":"CA-NS-CB","name":"Cape Breton","lat":"45.963","lon":"-59.985"},{"key":"CA-NS-CO","name":"Colchester","lat":"45.535","lon":"-63.347"},{"key":"CA-NS-CU","name":"Cumberland","lat":"45.780","lon":"-63.580"},{"key":"CA-NS-DI","name":"Digby","lat":"44.450","lon":"-65.851"},{"key":"CA-NS-GU","name":"Guysborough","lat":"45.054","lon":"-62.600"},{"key":"CA-NS-HL","name":"Halifax","lat":"44.663","lon":"-63.590"},{"key":"CA-NS-HN","name":"Hants","lat":"45.124","lon":"-63.933"},{"key":"CA-NS-IN","name":"Inverness","lat":"46.711","lon":"-60.941"},{"key":"CA-NS-KI","name":"Kings","lat":"45.196","lon":"-64.624"},{"key":"CA-NS-LU","name":"Lunenburg","lat":"44.536","lon":"-64.185"},{"key":"CA-NS-PI","name":"Pictou","lat":"45.659","lon":"-62.681"},{"key":"CA-NS-QU","name":"Queens","lat":"44.365","lon":"-65.211"},{"key":"CA-NS-RI","name":"Richmond","lat":"45.723","lon":"-60.922"},{"key":"CA-NS-SH","name":"Shelburne","lat":"43.709","lon":"-65.241"},{"key":"CA-NS-VI","name":"Victoria","lat":"46.741","lon":"-60.644"},{"key":"CA-NS-YA","name":"Yarmouth","lat":"43.918","lon":"-65.945"}]},"CA-NT":{"key":"CA-NT","name":"Northwest Territories","lon":"-121.502","lat":"69.564","counties":[{"key":"CA-NT-FS","name":"Fort Smith","lat":"69.564","lon":"-121.502"},{"key":"CA-NT-IN","name":"Inuvik","lat":"69.564","lon":"-121.502"}]},"CA-NU":{"key":"CA-NU","name":"Nunavut","lon":"-90.148","lat":"67.255","counties":[{"key":"CA-NU-KT","name":"Kitikmeot","lat":"67.255","lon":"-90.148"},{"key":"CA-NU-KV","name":"Keewatin","lat":"67.255","lon":"-90.148"},{"key":"CA-NU-QK","name":"Baffin","lat":"67.255","lon":"-90.148"}]},"CA-ON":{"key":"CA-ON","name":"Ontario","lon":"-84.737","lat":"49.268","counties":[{"key":"CA-ON-AL","name":"Algoma","lat":"47.335","lon":"-84.611"},{"key":"CA-ON-BC","name":"Bruce","lat":"45.138","lon":"-81.478"},{"key":"CA-ON-BN","name":"Brant","lat":"43.143","lon":"-80.015"},{"key":"CA-ON-CO","name":"Cochrane","lat":"49.153","lon":"-81.204"},{"key":"CA-ON-DF","name":"Dufferin","lat":"44.051","lon":"-80.295"},{"key":"CA-ON-DR","name":"Durham","lat":"44.049","lon":"-78.677"},{"key":"CA-ON-EL","name":"Elgin","lat":"42.623","lon":"-80.724"},{"key":"CA-ON-ES","name":"Essex","lat":"41.986","lon":"-82.513"},{"key":"CA-ON-FR","name":"Frontenac","lat":"44.550","lon":"-76.761"},{"key":"CA-ON-GR","name":"Grey","lat":"44.507","lon":"-80.319"},{"key":"CA-ON-HA","name":"Hamilton","lat":"43.161","lon":"-79.924"},{"key":"CA-ON-HB","name":"Haliburton","lat":"45.212","lon":"-78.580"},{"key":"CA-ON-HD","name":"Haldimand","lat":"42.853","lon":"-79.579"},{"key":"CA-ON-HS","name":"Hastings","lat":"44.876","lon":"-77.649"},{"key":"CA-ON-HT","name":"Halton","lat":"43.393","lon":"-79.736"},{"key":"CA-ON-HU","name":"Huron","lat":"43.877","lon":"-81.716"},{"key":"CA-ON-KR","name":"Kenora","lat":"49.931","lon":"-94.134"},{"key":"CA-ON-KT","name":"Chatham-Kent","lat":"42.315","lon":"-81.847"},{"key":"CA-ON-LA","name":"Lennox and Addington","lat":"45.202","lon":"-77.444"},{"key":"CA-ON-LG","name":"Leeds and Grenville","lat":"44.547","lon":"-76.205"},{"key":"CA-ON-LM","name":"Lambton","lat":"42.992","lon":"-82.050"},{"key":"CA-ON-LN","name":"Lanark","lat":"44.860","lon":"-76.503"},{"key":"CA-ON-MA","name":"Manitoulin","lat":"46.031","lon":"-81.691"},{"key":"CA-ON-MI","name":"Middlesex","lat":"43.121","lon":"-81.330"},{"key":"CA-ON-MU","name":"Muskoka","lat":"45.149","lon":"-79.504"},{"key":"CA-ON-NF","name":"Norfolk","lat":"42.581","lon":"-80.400"},{"key":"CA-ON-NG","name":"Niagara","lat":"43.083","lon":"-79.102"},{"key":"CA-ON-NP","name":"Nipissing","lat":"45.589","lon":"-78.661"},{"key":"CA-ON-NU","name":"Northumberland","lat":"44.249","lon":"-78.050"},{"key":"CA-ON-OT","name":"Ottawa","lat":"45.362","lon":"-75.655"},{"key":"CA-ON-OX","name":"Oxford","lat":"43.056","lon":"-80.748"},{"key":"CA-ON-PB","name":"Peterborough","lat":"44.550","lon":"-78.250"},{"key":"CA-ON-PE","name":"Prince Edward","lat":"43.940","lon":"-77.059"},{"key":"CA-ON-PL","name":"Peel","lat":"43.764","lon":"-79.817"},{"key":"CA-ON-PR","name":"Prescott and Russell","lat":"45.536","lon":"-75.091"},{"key":"CA-ON-PS","name":"Parry Sound","lat":"45.609","lon":"-80.190"},{"key":"CA-ON-PT","name":"Perth","lat":"43.376","lon":"-80.972"},{"key":"CA-ON-RE","name":"Renfrew","lat":"45.868","lon":"-77.757"},{"key":"CA-ON-RR","name":"Rainy River","lat":"48.740","lon":"-92.756"},{"key":"CA-ON-SB","name":"Sudbury","lat":"46.036","lon":"-81.388"},{"key":"CA-ON-SC","name":"Simcoe","lat":"44.560","lon":"-79.689"},{"key":"CA-ON-SD","name":"Stormont, Dundas and Glengarry","lat":"44.948","lon":"-75.070"},{"key":"CA-ON-SU","name":"Greater Sudbury","lat":"46.438","lon":"-81.042"},{"key":"CA-ON-TB","name":"Thunder Bay","lat":"48.413","lon":"-89.168"},{"key":"CA-ON-TI","name":"Timiskaming","lat":"47.352","lon":"-80.320"},{"key":"CA-ON-TO","name":"Toronto","lat":"43.702","lon":"-79.357"},{"key":"CA-ON-VI","name":"Kawartha Lakes","lat":"44.619","lon":"-78.771"},{"key":"CA-ON-WL","name":"Wellington","lat":"43.822","lon":"-80.688"},{"key":"CA-ON-WT","name":"Waterloo","lat":"43.453","lon":"-80.360"},{"key":"CA-ON-YO","name":"York","lat":"44.150","lon":"-79.531"}]},"CA-PE":{"key":"CA-PE","name":"Prince Edward Island","lon":"-63.202","lat":"46.504","counties":[{"key":"CA-PE-KI","name":"Kings","lat":"46.333","lon":"-62.362"},{"key":"CA-PE-PR","name":"Prince","lat":"46.555","lon":"-63.999"},{"key":"CA-PE-QU","name":"Queens","lat":"46.398","lon":"-63.188"}]},"CA-QC":{"key":"CA-QC","name":"Quebec","lon":"-68.440","lat":"53.786","counties":[{"key":"CA-QC-AB","name":"Abitibi","lat":"48.670","lon":"-77.976"},{"key":"CA-QC-AC","name":"Acton","lat":"45.631","lon":"-72.449"},{"key":"CA-QC-AG","name":"Argenteuil","lat":"45.682","lon":"-74.240"},{"key":"CA-QC-AL","name":"Antoine-Labelle","lat":"46.552","lon":"-75.469"},{"key":"CA-QC-AN","name":"L'Assomption","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-AO","name":"Abitibi-Ouest","lat":"48.550","lon":"-78.896"},{"key":"CA-QC-APP","name":"Les Appalaches","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-AS","name":"Les Sources","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-AT","name":"Arthabaska","lat":"46.030","lon":"-71.925"},{"key":"CA-QC-AV","name":"Avignon","lat":"48.216","lon":"-66.968"},{"key":"CA-QC-BA","name":"Les Basques","lat":"48.133","lon":"-69.186"},{"key":"CA-QC-BC","name":"BÃ©cancour","lat":"46.401","lon":"-72.369"},{"key":"CA-QC-BH","name":"Beauharnois-Salaberry","lat":"45.201","lon":"-73.916"},{"key":"CA-QC-BL","name":"Bellechasse","lat":"46.779","lon":"-70.892"},{"key":"CA-QC-BM","name":"Brome-Missisquoi","lat":"45.126","lon":"-72.592"},{"key":"CA-QC-BO","name":"Bonaventure","lat":"48.270","lon":"-65.516"},{"key":"CA-QC-BR","name":"Pierre-De Saurel","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-BS","name":"Beauce-Sartigan","lat":"45.807","lon":"-70.398"},{"key":"CA-QC-CAN","name":"Caniapiscau","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-CB","name":"La CÃ´te-de-BeauprÃ©","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-CE","name":"Charlevoix-Est","lat":"47.890","lon":"-70.025"},{"key":"CA-QC-CG","name":"La CÃ´te-de-GaspÃ©","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-CM","name":"Shawinigan","lat":"46.733","lon":"-72.993"},{"key":"CA-QC-CO","name":"Les Collines-de-l'Outaouais","lat":"45.560","lon":"-75.918"},{"key":"CA-QC-CP","name":"Longueuil","lat":"45.490","lon":"-73.491"},{"key":"CA-QC-CT","name":"Coaticook","lat":"45.037","lon":"-71.909"},{"key":"CA-QC-CV","name":"Charlevoix","lat":"47.675","lon":"-70.627"},{"key":"CA-QC-DA","name":"D'Autray","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-DD","name":"Le Domaine-du-Roy","lat":"48.668","lon":"-72.460"},{"key":"CA-QC-DE","name":"LÃ©vis","lat":"46.746","lon":"-71.290"},{"key":"CA-QC-DM","name":"Deux-Montagnes","lat":"45.572","lon":"-74.053"},{"key":"CA-QC-DR","name":"La Haute-GaspÃ©sie","lat":"48.917","lon":"-66.066"},{"key":"CA-QC-DU","name":"Drummond","lat":"45.901","lon":"-72.515"},{"key":"CA-QC-ER","name":"L'Ã‰rable","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-ET","name":"Les Etchemins","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-FR","name":"Trois-RiviÃ¨res","lat":"46.408","lon":"-72.576"},{"key":"CA-QC-FS","name":"Le Fjord-du-Saguenay","lat":"48.352","lon":"-70.342"},{"key":"CA-QC-GR","name":"Le Granit","lat":"45.473","lon":"-70.903"},{"key":"CA-QC-GSL","name":"Le Golfe-du-Saint-Laurent","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-HC","name":"La Haute-CÃ´te-Nord","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-HF","name":"Le Haut-Saint-FranÃ§ois","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-HL","name":"Le Haut-Saint-Laurent","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-HM","name":"La Tuque","lat":"47.796","lon":"-72.974"},{"key":"CA-QC-HR","name":"Le Haut-Richelieu","lat":"45.302","lon":"-73.309"},{"key":"CA-QC-HY","name":"La Haute-Yamaska","lat":"45.379","lon":"-72.607"},{"key":"CA-QC-IM","name":"Les ÃŽles-de-la-Madeleine","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-IO","name":"L'ÃŽle-d'OrlÃ©ans","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-IS","name":"L'Islet","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-JAM","name":"JamÃ©sie","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-JC","name":"La Jacques-Cartier","lat":"47.190","lon":"-71.349"},{"key":"CA-QC-JN","name":"Les Jardins-de-Napierville","lat":"45.044","lon":"-73.555"},{"key":"CA-QC-JO","name":"Joliette","lat":"46.034","lon":"-73.449"},{"key":"CA-QC-KA","name":"Kamouraska","lat":"47.762","lon":"-69.685"},{"key":"CA-QC-LCH","name":"Les Chenaux","lat":"46.413","lon":"-72.248"},{"key":"CA-QC-LJ","name":"Marguerite-D'Youville","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-LL","name":"Les Laurentides","lat":"46.195","lon":"-74.612"},{"key":"CA-QC-LO","name":"LotbiniÃ¨re","lat":"46.571","lon":"-71.490"},{"key":"CA-QC-LS","name":"Lac-Saint-Jean-Est","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-LV","name":"Laval","lat":"45.583","lon":"-73.749"},{"key":"CA-QC-MB","name":"Minganie","lat":"50.223","lon":"-63.737"},{"key":"CA-QC-MC","name":"Maria-Chapdelaine","lat":"50.017","lon":"-72.217"},{"key":"CA-QC-ME","name":"MÃ©kinac","lat":"46.885","lon":"-72.813"},{"key":"CA-QC-MG","name":"MemphrÃ©magog","lat":"45.099","lon":"-72.293"},{"key":"CA-QC-MI","name":"La Mitis","lat":"48.303","lon":"-68.151"},{"key":"CA-QC-MK","name":"Les Maskoutains","lat":"45.627","lon":"-72.952"},{"key":"CA-QC-ML","name":"Mirabel","lat":"45.662","lon":"-74.241"},{"key":"CA-QC-MM","name":"Montmagny","lat":"47.026","lon":"-70.645"},{"key":"CA-QC-MN","name":"Manicouagan","lat":"49.316","lon":"-68.055"},{"key":"CA-QC-MO","name":"Montcalm","lat":"45.936","lon":"-73.839"},{"key":"CA-QC-MP","name":"La MatapÃ©dia","lat":"48.416","lon":"-67.353"},{"key":"CA-QC-MR","name":"MontrÃ©al","lat":"45.500","lon":"-73.682"},{"key":"CA-QC-MS","name":"MaskinongÃ©","lat":"46.529","lon":"-73.186"},{"key":"CA-QC-MT","name":"La Matanie","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-MU","name":"Les Moulins","lat":"45.774","lon":"-73.608"},{"key":"CA-QC-MW","name":"Matawinie","lat":"46.414","lon":"-73.903"},{"key":"CA-QC-NB","name":"La Nouvelle-Beauce","lat":"46.412","lon":"-70.963"},{"key":"CA-QC-NQ","name":"Kativik","lat":"58.937","lon":"-69.490"},{"key":"CA-QC-NY","name":"Nicolet-Yamaska","lat":"46.272","lon":"-72.513"},{"key":"CA-QC-OU","name":"Gatineau","lat":"45.429","lon":"-75.711"},{"key":"CA-QC-PB","name":"Le Rocher-PercÃ©","lat":"48.540","lon":"-64.237"},{"key":"CA-QC-PH","name":"Les Pays-d'en-Haut","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-PN","name":"Pontiac","lat":"45.601","lon":"-76.386"},{"key":"CA-QC-PP","name":"Papineau","lat":"45.726","lon":"-75.424"},{"key":"CA-QC-PR","name":"Portneuf","lat":"46.899","lon":"-72.114"},{"key":"CA-QC-QU","name":"QuÃ©bec","lat":"46.859","lon":"-71.263"},{"key":"CA-QC-RC","name":"Robert-Cliche","lat":"46.201","lon":"-70.955"},{"key":"CA-QC-RD","name":"La RiviÃ¨re-du-Nord","lat":"45.786","lon":"-74.035"},{"key":"CA-QC-RL","name":"RiviÃ¨re-du-Loup","lat":"47.924","lon":"-69.581"},{"key":"CA-QC-RM","name":"Rimouski-Neigette","lat":"48.361","lon":"-68.801"},{"key":"CA-QC-RN","name":"Rouyn-Noranda","lat":"48.174","lon":"-78.668"},{"key":"CA-QC-RS","name":"Roussillon","lat":"45.432","lon":"-73.736"},{"key":"CA-QC-RV","name":"Rouville","lat":"45.419","lon":"-73.154"},{"key":"CA-QC-SAG","name":"Saguenay","lat":"48.422","lon":"-71.076"},{"key":"CA-QC-SH","name":"Sherbrooke","lat":"45.404","lon":"-71.895"},{"key":"CA-QC-SR","name":"Sept-RiviÃ¨res","lat":"50.235","lon":"-66.360"},{"key":"CA-QC-TB","name":"ThÃ©rÃ¨se-De Blainville","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-TM","name":"TÃ©miscamingue","lat":"47.314","lon":"-78.565"},{"key":"CA-QC-TT","name":"TÃ©miscouata","lat":"47.718","lon":"-68.889"},{"key":"CA-QC-VF","name":"Le Val-Saint-FranÃ§ois","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-VG","name":"La VallÃ©e-de-la-Gatineau","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-VO","name":"La VallÃ©e-de-l'Or","lat":"53.786","lon":"-68.440"},{"key":"CA-QC-VR","name":"La VallÃ©e-du-Richelieu","lat":"45.538","lon":"-73.353"},{"key":"CA-QC-VS","name":"Vaudreuil-Soulanges","lat":"45.393","lon":"-74.308"}]},"CA-SK":{"key":"CA-SK","name":"Saskatchewan","lon":"-105.684","lat":"54.499","counties":[{"key":"CA-SK-EI","name":"Swift Current","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-EL","name":"Saskatoon","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-ET","name":"La Ronge","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-FI","name":"Melville","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-FN","name":"Prince Albert","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-FO","name":"Maple Creek","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-FT","name":"Melfort","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-NI","name":"Yorkton","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-ON","name":"Estevan","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-SE","name":"Moose Jaw","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-SI","name":"Regina","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-SN","name":"Lloydminster","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-ST","name":"North Battleford","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-TE","name":"Wynyard","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-TN","name":"Kindersley","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-TR","name":"Assiniboia","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-TV","name":"Battleford","lat":"54.499","lon":"-105.684"},{"key":"CA-SK-TW","name":"Weyburn","lat":"54.499","lon":"-105.684"}]},"CA-YT":{"key":"CA-YT","name":"Yukon Territory","lon":"-132.406","lat":"64.823","counties":[{"key":"CA-YT-YT","name":"Yukon","lat":"64.823","lon":"-132.406"}]}}`)}function I(){return[{a:"BBWD",k:"bbwduc",n:"Black-bellied Whistling-Duck"},{a:"FUWD",k:"fuwduc",n:"Fulvous Whistling-Duck"},{a:"TABG",k:"taibeg1",n:"Taiga Bean-Goose"},{a:"TUBG",k:"tunbeg1",n:"Tundra Bean-Goose"},{a:"PFGO",k:"pifgoo",n:"Pink-footed Goose"},{a:"GWFG",k:"gwfgoo",n:"Greater White-fronted Goose"},{a:"LWFG",k:"lwfgoo",n:"Lesser White-fronted Goose"},{a:"GRGO",k:"gragoo",n:"Graylag Goose"},{a:"EMGO",k:"empgoo",n:"Emperor Goose"},{a:"SNGO",k:"snogoo",n:"Snow Goose"},{a:"ROGO",k:"rosgoo",n:"Ross's Goose"},{a:"BRAN",k:"brant",n:"Brant"},{a:"BARG",k:"bargoo",n:"Barnacle Goose"},{a:"CACG",k:"cacgoo1",n:"Cackling Goose"},{a:"CANG",k:"cangoo",n:"Canada Goose"},{a:"MUSW",k:"mutswa",n:"Mute Swan"},{a:"TRUS",k:"truswa",n:"Trumpeter Swan"},{a:"TUSW",k:"tunswa",n:"Tundra Swan"},{a:"WHOS",k:"whoswa",n:"Whooper Swan"},{a:"EGGO",k:"egygoo",n:"Egyptian Goose"},{a:"MUDU",k:"musduc",n:"Muscovy Duck"},{a:"WODU",k:"wooduc",n:"Wood Duck"},{a:"GADW",k:"gadwal",n:"Gadwall"},{a:"FADU",k:"falduc",n:"Falcated Duck"},{a:"EUWI",k:"eurwig",n:"Eurasian Wigeon"},{a:"AMWI",k:"amewig",n:"American Wigeon"},{a:"ABDU",k:"ambduc",n:"American Black Duck"},{a:"MALL",k:"mallar3",n:"Mallard"},{a:"MODU",k:"motduc",n:"Mottled Duck"},{a:"ESBD",k:"spbduc",n:"Eastern Spot-billed Duck"},{a:"BWTE",k:"buwtea",n:"Blue-winged Teal"},{a:"CITE",k:"cintea",n:"Cinnamon Teal"},{a:"NSHO",k:"norsho",n:"Northern Shoveler"},{a:"WCHP",k:"whcpin",n:"White-cheeked Pintail"},{a:"NOPI",k:"norpin",n:"Northern Pintail"},{a:"GARG",k:"gargan",n:"Garganey"},{a:"BATE",k:"baitea",n:"Baikal Teal"},{a:"GWTE",k:"gnwtea",n:"Green-winged Teal"},{a:"CANV",k:"canvas",n:"Canvasback"},{a:"REDH",k:"redhea",n:"Redhead"},{a:"COMP",k:"compoc",n:"Common Pochard"},{a:"RNDU",k:"rinduc",n:"Ring-necked Duck"},{a:"TUDU",k:"tufduc",n:"Tufted Duck"},{a:"GRSC",k:"gresca",n:"Greater Scaup"},{a:"LESC",k:"lessca",n:"Lesser Scaup"},{a:"STEI",k:"steeid",n:"Steller's Eider"},{a:"SPEI",k:"speeid",n:"Spectacled Eider"},{a:"KIEI",k:"kineid",n:"King Eider"},{a:"COEI",k:"comeid",n:"Common Eider"},{a:"HADU",k:"harduc",n:"Harlequin Duck"},{a:"LABD",k:"labduc",n:"Labrador Duck"},{a:"SUSC",k:"sursco",n:"Surf Scoter"},{a:"WWSC",k:"whwsco4",n:"White-winged Scoter"},{a:"BLSC",k:"blksco2",n:"Black Scoter"},{a:"LTDU",k:"lotduc",n:"Long-tailed Duck"},{a:"BUFF",k:"buffle",n:"Bufflehead"},{a:"COGO",k:"comgol",n:"Common Goldeneye"},{a:"BAGO",k:"bargol",n:"Barrow's Goldeneye"},{a:"SMEW",k:"smew",n:"Smew"},{a:"HOME",k:"hoomer",n:"Hooded Merganser"},{a:"COME",k:"commer",n:"Common Merganser"},{a:"RBME",k:"rebmer",n:"Red-breasted Merganser"},{a:"MADU",k:"masduc",n:"Masked Duck"},{a:"RUDU",k:"rudduc",n:"Ruddy Duck"},{a:"PLCH",k:"placha",n:"Plain Chachalaca"},{a:"MOUQ",k:"mouqua",n:"Mountain Quail"},{a:"SCQU",k:"scaqua",n:"Scaled Quail"},{a:"CAQU",k:"calqua",n:"California Quail"},{a:"GAQU",k:"gamqua",n:"Gambel's Quail"},{a:"NOBO",k:"norbob",n:"Northern Bobwhite"},{a:"MONQ",k:"monqua",n:"Montezuma Quail"},{a:"CHUK",k:"chukar",n:"Chukar"},{a:"HISN",k:"himsno",n:"Himalayan Snowcock"},{a:"GRAP",k:"grypar",n:"Gray Partridge"},{a:"RNEP",k:"rinphe",n:"Ring-necked Pheasant"},{a:"RUGR",k:"rufgro",n:"Ruffed Grouse"},{a:"GRSG",k:"saggro",n:"Greater Sage-Grouse"},{a:"GUSG",k:"gusgro",n:"Gunnison Sage-Grouse"},{a:"SPGR",k:"sprgro",n:"Spruce Grouse"},{a:"WIPT",k:"wilpta",n:"Willow Ptarmigan"},{a:"ROPT",k:"rocpta1",n:"Rock Ptarmigan"},{a:"WTPT",k:"whtpta1",n:"White-tailed Ptarmigan"},{a:"DUGR",k:"dusgro",n:"Dusky Grouse"},{a:"SOGR",k:"soogro1",n:"Sooty Grouse"},{a:"STGR",k:"shtgro",n:"Sharp-tailed Grouse"},{a:"GRPC",k:"grpchi",n:"Greater Prairie-Chicken"},{a:"LEPC",k:"lepchi",n:"Lesser Prairie-Chicken"},{a:"WITU",k:"wiltur",n:"Wild Turkey"},{a:"RTLO",k:"retloo",n:"Red-throated Loon"},{a:"ARLO",k:"arcloo",n:"Arctic Loon"},{a:"PALO",k:"pacloo",n:"Pacific Loon"},{a:"COLO",k:"comloo",n:"Common Loon"},{a:"YBLO",k:"yebloo",n:"Yellow-billed Loon"},{a:"LEGR",k:"leagre",n:"Least Grebe"},{a:"PBGR",k:"pibgre",n:"Pied-billed Grebe"},{a:"HOGR",k:"horgre",n:"Horned Grebe"},{a:"RNGR",k:"rengre",n:"Red-necked Grebe"},{a:"EAGR",k:"eargre",n:"Eared Grebe"},{a:"WEGR",k:"wesgre",n:"Western Grebe"},{a:"CLGR",k:"clagre",n:"Clark's Grebe"},{a:"AMFL",k:"grefla2",n:"American Flamingo"},{a:"YNAL",k:"yenalb",n:"Yellow-nosed Albatross"},{a:"WCAL",k:"whcalb1",n:"White-capped Albatross"},{a:"SAAL",k:"salalb1",n:"Salvin's Albatross"},{a:"BBAL",k:"bkbalb",n:"Black-browed Albatross"},{a:"LMAL",k:"limalb1",n:"Light-mantled Albatross"},{a:"WAAL",k:"wanalb",n:"Wandering Albatross"},{a:"LAAL",k:"layalb",n:"Laysan Albatross"},{a:"BFAL",k:"bkfalb",n:"Black-footed Albatross"},{a:"STAL",k:"shtalb",n:"Short-tailed Albatross"},{a:"NOFU",k:"norful",n:"Northern Fulmar"},{a:"GWPE",k:"grwpet3",n:"Great-winged Petrel"},{a:"PRPE",k:"solpet1",n:"Providence Petrel"},{a:"HEPE",k:"herpet2",n:"Herald Petrel"},{a:"MUPE",k:"murpet",n:"Murphy's Petrel"},{a:"MOPE",k:"motpet",n:"Mottled Petrel"},{a:"BEPE",k:"berpet",n:"Bermuda Petrel"},{a:"BCPE",k:"bkcpet",n:"Black-capped Petrel"},{a:"HAPE",k:"hawpet1",n:"Hawaiian Petrel"},{a:"FEPE",k:"feapet1",n:"Fea's Petrel"},{a:"ZIPE",k:"madpet",n:"Zino's Petrel"},{a:"COPE",k:"coopet",n:"Cook's Petrel"},{a:"STPE",k:"stepet",n:"Stejneger's Petrel"},{a:"BUPE",k:"bulpet",n:"Bulwer's Petrel"},{a:"WCPE",k:"whcpet1",n:"White-chinned Petrel"},{a:"PAPE",k:"parpet1",n:"Parkinson's Petrel"},{a:"STRS",k:"strshe",n:"Streaked Shearwater"},{a:"CORS",k:"corshe",n:"Cory's Shearwater"},{a:"CVSH",k:"cavshe1",n:"Cape Verde Shearwater"},{a:"PFSH",k:"pifshe",n:"Pink-footed Shearwater"},{a:"FFSH",k:"flfshe",n:"Flesh-footed Shearwater"},{a:"GRSH",k:"greshe",n:"Great Shearwater"},{a:"WTSH",k:"wetshe",n:"Wedge-tailed Shearwater"},{a:"BULS",k:"bulshe",n:"Buller's Shearwater"},{a:"SOSH",k:"sooshe",n:"Sooty Shearwater"},{a:"STTS",k:"shtshe",n:"Short-tailed Shearwater"},{a:"MASH",k:"manshe",n:"Manx Shearwater"},{a:"TOSH",k:"towshe1",n:"Townsend's Shearwater"},{a:"BVSH",k:"bkvshe",n:"Black-vented Shearwater"},{a:"AUSH",k:"audshe",n:"Audubon's Shearwater"},{a:"BASH",k:"litshe1",n:"Barolo Shearwater"},{a:"WISP",k:"wispet",n:"Wilson's Storm-Petrel"},{a:"WFSP",k:"wfspet",n:"White-faced Storm-Petrel"},{a:"EUSP",k:"bripet",n:"European Storm-Petrel"},{a:"BBSP",k:"bbspet1",n:"Black-bellied Storm-Petrel"},{a:"FTSP",k:"ftspet",n:"Fork-tailed Storm-Petrel"},{a:"RISP",k:"rispet1",n:"Ringed Storm-Petrel"},{a:"SSTP",k:"swspet",n:"Swinhoe's Storm-Petrel"},{a:"LESP",k:"lcspet",n:"Leach's Storm-Petrel"},{a:"ASSP",k:"asspet",n:"Ashy Storm-Petrel"},{a:"BSTP",k:"barpet",n:"Band-rumped Storm-Petrel"},{a:"WRSP",k:"wrspet",n:"Wedge-rumped Storm-Petrel"},{a:"BLSP",k:"bkspet",n:"Black Storm-Petrel"},{a:"TRSP",k:"trspet",n:"Tristram's Storm-Petrel"},{a:"LSTP",k:"lsspet",n:"Least Storm-Petrel"},{a:"WTTR",k:"whttro",n:"White-tailed Tropicbird"},{a:"RBTR",k:"rebtro",n:"Red-billed Tropicbird"},{a:"RTTR",k:"rettro",n:"Red-tailed Tropicbird"},{a:"JABI",k:"jabiru",n:"Jabiru"},{a:"WOST",k:"woosto",n:"Wood Stork"},{a:"MAFR",k:"magfri",n:"Magnificent Frigatebird"},{a:"GREF",k:"grefri",n:"Great Frigatebird"},{a:"LEFR",k:"lesfri",n:"Lesser Frigatebird"},{a:"MABO",k:"masboo",n:"Masked Booby"},{a:"BFBO",k:"bfoboo",n:"Blue-footed Booby"},{a:"BRBO",k:"brnboo",n:"Brown Booby"},{a:"RFBO",k:"refboo",n:"Red-footed Booby"},{a:"NOGA",k:"norgan",n:"Northern Gannet"},{a:"BRAC",k:"bracor",n:"Brandt's Cormorant"},{a:"NECO",k:"neocor",n:"Neotropic Cormorant"},{a:"DCCO",k:"doccor",n:"Double-crested Cormorant"},{a:"GRCO",k:"grecor",n:"Great Cormorant"},{a:"RFCO",k:"refcor",n:"Red-faced Cormorant"},{a:"PECO",k:"pelcor",n:"Pelagic Cormorant"},{a:"ANHI",k:"anhing",n:"Anhinga"},{a:"AWPE",k:"amwpel",n:"American White Pelican"},{a:"BRPE",k:"brnpel",n:"Brown Pelican"},{a:"AMBI",k:"amebit",n:"American Bittern"},{a:"YEBI",k:"yelbit",n:"Yellow Bittern"},{a:"LEBI",k:"leabit",n:"Least Bittern"},{a:"BTTH",k:"btther1",n:"Bare-throated Tiger-Heron"},{a:"GBHE",k:"grbher3",n:"Great Blue Heron"},{a:"GRAH",k:"graher1",n:"Gray Heron"},{a:"GREG",k:"greegr",n:"Great Egret"},{a:"INEG",k:"integr",n:"Intermediate Egret"},{a:"CHEG",k:"chiegr",n:"Chinese Egret"},{a:"LIEG",k:"litegr",n:"Little Egret"},{a:"WERH",k:"werher",n:"Western Reef-Heron"},{a:"SNEG",k:"snoegr",n:"Snowy Egret"},{a:"LBHE",k:"libher",n:"Little Blue Heron"},{a:"TRHE",k:"triher",n:"Tricolored Heron"},{a:"REEG",k:"redegr",n:"Reddish Egret"},{a:"CAEG",k:"categr",n:"Cattle Egret"},{a:"CHPH",k:"chpher1",n:"Chinese Pond-Heron"},{a:"GRHE",k:"grnher",n:"Green Heron"},{a:"BCNH",k:"bcnher",n:"Black-crowned Night-Heron"},{a:"YCNH",k:"ycnher",n:"Yellow-crowned Night-Heron"},{a:"WHIB",k:"whiibi",n:"White Ibis"},{a:"SCIB",k:"scaibi",n:"Scarlet Ibis"},{a:"GLIB",k:"gloibi",n:"Glossy Ibis"},{a:"WFIB",k:"whfibi",n:"White-faced Ibis"},{a:"ROSP",k:"rosspo1",n:"Roseate Spoonbill"},{a:"BLVU",k:"blkvul",n:"Black Vulture"},{a:"TUVU",k:"turvul",n:"Turkey Vulture"},{a:"CACO",k:"calcon",n:"California Condor"},{a:"OSPR",k:"osprey",n:"Osprey"},{a:"HBKI",k:"hobkit",n:"Hook-billed Kite"},{a:"STKI",k:"swtkit",n:"Swallow-tailed Kite"},{a:"WTKI",k:"whtkit",n:"White-tailed Kite"},{a:"SNKI",k:"snakit",n:"Snail Kite"},{a:"DTKI",k:"dotkit1",n:"Double-toothed Kite"},{a:"MIKI",k:"miskit",n:"Mississippi Kite"},{a:"BAEA",k:"baleag",n:"Bald Eagle"},{a:"WTEA",k:"whteag",n:"White-tailed Eagle"},{a:"STSE",k:"stseag",n:"Steller's Sea-Eagle"},{a:"NOHA",k:"norhar2",n:"Northern Harrier"},{a:"SSHA",k:"shshaw",n:"Sharp-shinned Hawk"},{a:"COHA",k:"coohaw",n:"Cooper's Hawk"},{a:"NOGO",k:"norgos",n:"Northern Goshawk"},{a:"CRHA",k:"crahaw",n:"Crane Hawk"},{a:"COBH",k:"comblh1",n:"Common Black Hawk"},{a:"HASH",k:"hrshaw",n:"Harris's Hawk"},{a:"ROHA",k:"roahaw",n:"Roadside Hawk"},{a:"RSHA",k:"reshaw",n:"Red-shouldered Hawk"},{a:"BWHA",k:"brwhaw",n:"Broad-winged Hawk"},{a:"GRHA",k:"gryhaw2",n:"Gray Hawk"},{a:"STHA",k:"shthaw",n:"Short-tailed Hawk"},{a:"SWHA",k:"swahaw",n:"Swainson's Hawk"},{a:"WTHA",k:"whthaw",n:"White-tailed Hawk"},{a:"ZTHA",k:"zothaw",n:"Zone-tailed Hawk"},{a:"RTHA",k:"rethaw",n:"Red-tailed Hawk"},{a:"FEHA",k:"ferhaw",n:"Ferruginous Hawk"},{a:"RLHA",k:"rolhaw",n:"Rough-legged Hawk"},{a:"GOEA",k:"goleag",n:"Golden Eagle"},{a:"YERA",k:"yelrai",n:"Yellow Rail"},{a:"BLRA",k:"blkrai",n:"Black Rail"},{a:"CORC",k:"corcra",n:"Corn Crake"},{a:"RIRA",k:"ridrai1",n:"Ridgway's Rail"},{a:"CLRA",k:"clarai11",n:"Clapper Rail"},{a:"KIRA",k:"kinrai4",n:"King Rail"},{a:"VIRA",k:"virrai",n:"Virginia Rail"},{a:"SORA",k:"sora",n:"Sora"},{a:"PBCR",k:"pabcra",n:"Paint-billed Crake"},{a:"SPRA",k:"sporai",n:"Spotted Rail"},{a:"GHSW",k:"purswa3",n:"Gray-headed Swamphen"},{a:"PUGA",k:"purgal2",n:"Purple Gallinule"},{a:"COGA",k:"comgal1",n:"Common Gallinule"},{a:"COMO",k:"commoo3",n:"Eurasian Moorhen"},{a:"EUCO",k:"eurcoo",n:"Eurasian Coot"},{a:"AMCO",k:"y00475",n:"American Coot"},{a:"SUNG",k:"sungre1",n:"Sungrebe"},{a:"LIMP",k:"limpki",n:"Limpkin"},{a:"SACR",k:"sancra",n:"Sandhill Crane"},{a:"CCRA",k:"comcra",n:"Common Crane"},{a:"WHCR",k:"whocra",n:"Whooping Crane"},{a:"DSTK",k:"dstkne",n:"Double-striped Thick-knee"},{a:"BWST",k:"bkwsti",n:"Black-winged Stilt"},{a:"BNST",k:"bknsti",n:"Black-necked Stilt"},{a:"AMAV",k:"ameavo",n:"American Avocet"},{a:"EUOY",k:"euroys1",n:"Eurasian Oystercatcher"},{a:"AMOY",k:"ameoys",n:"American Oystercatcher"},{a:"BLOY",k:"blkoys",n:"Black Oystercatcher"},{a:"NOLA",k:"norlap",n:"Northern Lapwing"},{a:"BBPL",k:"bkbplo",n:"Black-bellied Plover"},{a:"EUGP",k:"eugplo",n:"European Golden-Plover"},{a:"AMGP",k:"amgplo",n:"American Golden-Plover"},{a:"PAGP",k:"pagplo",n:"Pacific Golden-Plover"},{a:"LSAP",k:"lesplo",n:"Lesser Sand-Plover"},{a:"GSAP",k:"grsplo",n:"Greater Sand-Plover"},{a:"COPL",k:"colplo1",n:"Collared Plover"},{a:"SNPL",k:"snoplo5",n:"Snowy Plover"},{a:"WIPL",k:"wilplo",n:"Wilson's Plover"},{a:"CRPL",k:"corplo",n:"Common Ringed Plover"},{a:"SEPL",k:"semplo",n:"Semipalmated Plover"},{a:"PIPL",k:"pipplo",n:"Piping Plover"},{a:"LRPL",k:"lirplo",n:"Little Ringed Plover"},{a:"KILL",k:"killde",n:"Killdeer"},{a:"MOPL",k:"mouplo",n:"Mountain Plover"},{a:"EUDO",k:"eurdot",n:"Eurasian Dotterel"},{a:"NOJA",k:"norjac",n:"Northern Jacana"},{a:"TESA",k:"tersan",n:"Terek Sandpiper"},{a:"COSA",k:"comsan",n:"Common Sandpiper"},{a:"SPSA",k:"sposan",n:"Spotted Sandpiper"},{a:"GRSA",k:"grnsan",n:"Green Sandpiper"},{a:"SOSA",k:"solsan",n:"Solitary Sandpiper"},{a:"GTTA",k:"gyttat1",n:"Gray-tailed Tattler"},{a:"WATA",k:"wantat1",n:"Wandering Tattler"},{a:"SPRE",k:"spored",n:"Spotted Redshank"},{a:"GRYE",k:"greyel",n:"Greater Yellowlegs"},{a:"COMG",k:"comgre",n:"Common Greenshank"},{a:"WILL",k:"willet1",n:"Willet"},{a:"LEYE",k:"lesyel",n:"Lesser Yellowlegs"},{a:"MASA",k:"marsan",n:"Marsh Sandpiper"},{a:"WOSA",k:"woosan",n:"Wood Sandpiper"},{a:"CREH",k:"comred1",n:"Common Redshank"},{a:"UPSA",k:"uplsan",n:"Upland Sandpiper"},{a:"LICU",k:"litcur",n:"Little Curlew"},{a:"ESCU",k:"eskcur",n:"Eskimo Curlew"},{a:"WHIM",k:"whimbr",n:"Whimbrel"},{a:"BTCU",k:"brtcur",n:"Bristle-thighed Curlew"},{a:"FECU",k:"faecur",n:"Far Eastern Curlew"},{a:"SBCU",k:"slbcur",n:"Slender-billed Curlew"},{a:"EUCU",k:"eurcur",n:"Eurasian Curlew"},{a:"LBCU",k:"lobcur",n:"Long-billed Curlew"},{a:"BTGD",k:"bktgod",n:"Black-tailed Godwit"},{a:"HUGO",k:"hudgod",n:"Hudsonian Godwit"},{a:"BTGO",k:"batgod",n:"Bar-tailed Godwit"},{a:"MAGO",k:"margod",n:"Marbled Godwit"},{a:"RUTU",k:"rudtur",n:"Ruddy Turnstone"},{a:"BLTU",k:"blktur",n:"Black Turnstone"},{a:"GRKN",k:"grekno",n:"Great Knot"},{a:"REKN",k:"redkno",n:"Red Knot"},{a:"SURF",k:"surfbi",n:"Surfbird"},{a:"RUFF",k:"ruff",n:"Ruff"},{a:"BBIS",k:"brbsan",n:"Broad-billed Sandpiper"},{a:"SPTS",k:"shtsan",n:"Sharp-tailed Sandpiper"},{a:"STSA",k:"stisan",n:"Stilt Sandpiper"},{a:"CUSA",k:"cursan",n:"Curlew Sandpiper"},{a:"TEST",k:"temsti",n:"Temminck's Stint"},{a:"LTST",k:"lotsti",n:"Long-toed Stint"},{a:"SBSA",k:"spbsan1",n:"Spoon-billed Sandpiper"},{a:"RNST",k:"rensti",n:"Red-necked Stint"},{a:"SAND",k:"sander",n:"Sanderling"},{a:"DUNL",k:"dunlin",n:"Dunlin"},{a:"ROSA",k:"rocsan",n:"Rock Sandpiper"},{a:"PUSA",k:"pursan",n:"Purple Sandpiper"},{a:"BASA",k:"baisan",n:"Baird's Sandpiper"},{a:"LIST",k:"litsti",n:"Little Stint"},{a:"LESA",k:"leasan",n:"Least Sandpiper"},{a:"WRSA",k:"whrsan",n:"White-rumped Sandpiper"},{a:"BBSA",k:"bubsan",n:"Buff-breasted Sandpiper"},{a:"PESA",k:"pecsan",n:"Pectoral Sandpiper"},{a:"SESA",k:"semsan",n:"Semipalmated Sandpiper"},{a:"WESA",k:"wessan",n:"Western Sandpiper"},{a:"SBDO",k:"shbdow",n:"Short-billed Dowitcher"},{a:"LBDO",k:"lobdow",n:"Long-billed Dowitcher"},{a:"JASN",k:"jacsni",n:"Jack Snipe"},{a:"WISN",k:"wilsni1",n:"Wilson's Snipe"},{a:"COSN",k:"comsni",n:"Common Snipe"},{a:"PTSN",k:"pitsni",n:"Pin-tailed Snipe"},{a:"SOSN",k:"solsni1",n:"Solitary Snipe"},{a:"EUWO",k:"eurwoo",n:"Eurasian Woodcock"},{a:"AMWO",k:"amewoo",n:"American Woodcock"},{a:"WIPH",k:"wilpha",n:"Wilson's Phalarope"},{a:"RNPH",k:"renpha",n:"Red-necked Phalarope"},{a:"REPH",k:"redpha1",n:"Red Phalarope"},{a:"ORPR",k:"oripra",n:"Oriental Pratincole"},{a:"GRSK",k:"gresku1",n:"Great Skua"},{a:"SPSK",k:"sopsku1",n:"South Polar Skua"},{a:"POJA",k:"pomjae",n:"Pomarine Jaeger"},{a:"PAJA",k:"parjae",n:"Parasitic Jaeger"},{a:"LTJA",k:"lotjae",n:"Long-tailed Jaeger"},{a:"DOVE",k:"doveki",n:"Dovekie"},{a:"COMU",k:"commur",n:"Common Murre"},{a:"TBMU",k:"thbmur",n:"Thick-billed Murre"},{a:"RAZO",k:"razorb",n:"Razorbill"},{a:"GRAU",k:"greauk",n:"Great Auk"},{a:"BLGU",k:"blkgui",n:"Black Guillemot"},{a:"PIGU",k:"piggui",n:"Pigeon Guillemot"},{a:"LBMU",k:"lobmur",n:"Long-billed Murrelet"},{a:"MAMU",k:"marmur",n:"Marbled Murrelet"},{a:"KIMU",k:"kitmur",n:"Kittlitz's Murrelet"},{a:"SCMU",k:"xanmur2",n:"Scripps's Murrelet"},{a:"GUMU",k:"xanmur1",n:"Guadalupe Murrelet"},{a:"CRMU",k:"cramur",n:"Craveri's Murrelet"},{a:"ANMU",k:"ancmur",n:"Ancient Murrelet"},{a:"CAAU",k:"casauk",n:"Cassin's Auklet"},{a:"PAAU",k:"parauk",n:"Parakeet Auklet"},{a:"LEAU",k:"leaauk",n:"Least Auklet"},{a:"WHAU",k:"whiauk",n:"Whiskered Auklet"},{a:"CRAU",k:"creauk",n:"Crested Auklet"},{a:"RHAU",k:"rhiauk",n:"Rhinoceros Auklet"},{a:"ATPU",k:"atlpuf",n:"Atlantic Puffin"},{a:"HOPU",k:"horpuf",n:"Horned Puffin"},{a:"TUPU",k:"tufpuf",n:"Tufted Puffin"},{a:"STGU",k:"swtgul1",n:"Swallow-tailed Gull"},{a:"BLKI",k:"bklkit",n:"Black-legged Kittiwake"},{a:"RLKI",k:"relkit",n:"Red-legged Kittiwake"},{a:"IVGU",k:"ivogul",n:"Ivory Gull"},{a:"SAGU",k:"sabgul",n:"Sabine's Gull"},{a:"BOGU",k:"bongul",n:"Bonaparte's Gull"},{a:"GHGU",k:"grhgul",n:"Gray-hooded Gull"},{a:"BHGU",k:"bkhgul",n:"Black-headed Gull"},{a:"LIGU",k:"litgul",n:"Little Gull"},{a:"ROGU",k:"rosgul",n:"Ross's Gull"},{a:"LAGU",k:"laugul",n:"Laughing Gull"},{a:"FRGU",k:"fragul",n:"Franklin's Gull"},{a:"BEGU",k:"belgul",n:"Belcher's Gull"},{a:"BTGU",k:"bktgul",n:"Black-tailed Gull"},{a:"HEEG",k:"heegul",n:"Heermann's Gull"},{a:"MEGU",k:"mewgul",n:"Mew Gull"},{a:"RBGU",k:"ribgul",n:"Ring-billed Gull"},{a:"WEGU",k:"wesgul",n:"Western Gull"},{a:"YFGU",k:"yefgul",n:"Yellow-footed Gull"},{a:"CAGU",k:"calgul",n:"California Gull"},{a:"HERG",k:"hergul",n:"Herring Gull"},{a:"YLGU",k:"yelgul1",n:"Yellow-legged Gull"},{a:"ICGU",k:"y00478",n:"Iceland Gull"},{a:"LBBG",k:"lbbgul",n:"Lesser Black-backed Gull"},{a:"SBGU",k:"slbgul",n:"Slaty-backed Gull"},{a:"GWGU",k:"glwgul",n:"Glaucous-winged Gull"},{a:"GLGU",k:"glagul",n:"Glaucous Gull"},{a:"GBBG",k:"gbbgul",n:"Great Black-backed Gull"},{a:"KEGU",k:"kelgul",n:"Kelp Gull"},{a:"BRNO",k:"brnnod",n:"Brown Noddy"},{a:"BLNO",k:"blknod",n:"Black Noddy"},{a:"SOTE",k:"sooter1",n:"Sooty Tern"},{a:"BRTE",k:"briter1",n:"Bridled Tern"},{a:"ALTE",k:"aleter1",n:"Aleutian Tern"},{a:"LETE",k:"leater1",n:"Least Tern"},{a:"LBTE",k:"labter1",n:"Large-billed Tern"},{a:"GBTE",k:"gubter1",n:"Gull-billed Tern"},{a:"CATE",k:"caster1",n:"Caspian Tern"},{a:"BLTE",k:"blkter",n:"Black Tern"},{a:"WWTE",k:"whwter",n:"White-winged Tern"},{a:"WHST",k:"whiter2",n:"Whiskered Tern"},{a:"ROST",k:"roster",n:"Roseate Tern"},{a:"COTE",k:"comter",n:"Common Tern"},{a:"ARTE",k:"arcter",n:"Arctic Tern"},{a:"FOTE",k:"forter",n:"Forster's Tern"},{a:"ROYT",k:"royter1",n:"Royal Tern"},{a:"SATE",k:"santer1",n:"Sandwich Tern"},{a:"ELTE",k:"eleter1",n:"Elegant Tern"},{a:"BLSK",k:"blkski",n:"Black Skimmer"},{a:"ROPI",k:"rocpig",n:"Rock Pigeon"},{a:"SNPI",k:"scnpig1",n:"Scaly-naped Pigeon"},{a:"WCPI",k:"whcpig2",n:"White-crowned Pigeon"},{a:"RBPI",k:"rebpig1",n:"Red-billed Pigeon"},{a:"BTPI",k:"batpig1",n:"Band-tailed Pigeon"},{a:"ORTD",k:"ortdov",n:"Oriental Turtle-Dove"},{a:"EUTD",k:"eutdov",n:"European Turtle-Dove"},{a:"EUCD",k:"eucdov",n:"Eurasian Collared-Dove"},{a:"SPDO",k:"spodov",n:"Spotted Dove"},{a:"PAPI",k:"paspig",n:"Passenger Pigeon"},{a:"INDO",k:"incdov",n:"Inca Dove"},{a:"COGD",k:"cogdov",n:"Common Ground-Dove"},{a:"RUGD",k:"rugdov",n:"Ruddy Ground-Dove"},{a:"RUQD",k:"ruqdov",n:"Ruddy Quail-Dove"},{a:"KWQD",k:"kwqdov",n:"Key West Quail-Dove"},{a:"WTDO",k:"whtdov",n:"White-tipped Dove"},{a:"WWDO",k:"whwdov",n:"White-winged Dove"},{a:"ZEND",k:"zendov",n:"Zenaida Dove"},{a:"MODO",k:"moudov",n:"Mourning Dove"},{a:"COCU",k:"comcuc",n:"Common Cuckoo"},{a:"ORCU",k:"oricuc2",n:"Oriental Cuckoo"},{a:"YBCU",k:"yebcuc",n:"Yellow-billed Cuckoo"},{a:"MACU",k:"mancuc",n:"Mangrove Cuckoo"},{a:"BBCU",k:"bkbcuc",n:"Black-billed Cuckoo"},{a:"GRRO",k:"greroa",n:"Greater Roadrunner"},{a:"SBAN",k:"smbani",n:"Smooth-billed Ani"},{a:"GBAN",k:"grbani",n:"Groove-billed Ani"},{a:"BANO",k:"brnowl",n:"Barn Owl"},{a:"FLOW",k:"flaowl",n:"Flammulated Owl"},{a:"ORSO",k:"orsowl",n:"Oriental Scops-Owl"},{a:"WESO",k:"wesowl1",n:"Western Screech-Owl"},{a:"EASO",k:"easowl1",n:"Eastern Screech-Owl"},{a:"WHSO",k:"whsowl1",n:"Whiskered Screech-Owl"},{a:"GHOW",k:"grhowl",n:"Great Horned Owl"},{a:"SNOW",k:"snoowl1",n:"Snowy Owl"},{a:"NHOW",k:"nohowl",n:"Northern Hawk Owl"},{a:"NOPO",k:"nopowl",n:"Northern Pygmy-Owl"},{a:"FEPO",k:"fepowl",n:"Ferruginous Pygmy-Owl"},{a:"ELOW",k:"elfowl",n:"Elf Owl"},{a:"BUOW",k:"burowl",n:"Burrowing Owl"},{a:"MOOW",k:"motowl",n:"Mottled Owl"},{a:"SPOW",k:"spoowl",n:"Spotted Owl"},{a:"BADO",k:"brdowl",n:"Barred Owl"},{a:"GGOW",k:"grgowl",n:"Great Gray Owl"},{a:"LEOW",k:"loeowl",n:"Long-eared Owl"},{a:"STOW",k:"styowl1",n:"Stygian Owl"},{a:"SEOW",k:"sheowl",n:"Short-eared Owl"},{a:"BOOW",k:"borowl",n:"Boreal Owl"},{a:"NSWO",k:"nswowl",n:"Northern Saw-whet Owl"},{a:"NOBB",k:"norboo1",n:"Northern Boobook"},{a:"LENI",k:"lesnig",n:"Lesser Nighthawk"},{a:"CONI",k:"comnig",n:"Common Nighthawk"},{a:"ANNI",k:"antnig",n:"Antillean Nighthawk"},{a:"COPA",k:"compau",n:"Common Pauraque"},{a:"COPO",k:"compoo",n:"Common Poorwill"},{a:"CWWI",k:"chwwid",n:"Chuck-will's-widow"},{a:"BCNI",k:"bucnig",n:"Buff-collared Nightjar"},{a:"EWPW",k:"whip-p1",n:"Eastern Whip-poor-will"},{a:"MWPW",k:"souwpw1",n:"Mexican Whip-poor-will"},{a:"GRNI",k:"grynig1",n:"Gray Nightjar"},{a:"BLSW",k:"blkswi",n:"Black Swift"},{a:"WCSW",k:"whcswi",n:"White-collared Swift"},{a:"CHSW",k:"chiswi",n:"Chimney Swift"},{a:"VASW",k:"vauswi",n:"Vaux's Swift"},{a:"WTNE",k:"whtnee",n:"White-throated Needletail"},{a:"COSW",k:"comswi",n:"Common Swift"},{a:"FTSW",k:"fotswi",n:"Pacific Swift"},{a:"WTSW",k:"whtswi",n:"White-throated Swift"},{a:"ANPS",k:"anpswi",n:"Antillean Palm-Swift"},{a:"MEVI",k:"grnvie1",n:"Mexican Violetear"},{a:"GNBM",k:"gnbman",n:"Green-breasted Mango"},{a:"RIHU",k:"maghum1",n:"Rivoli's Hummingbird"},{a:"PCST",k:"plcsta",n:"Plain-capped Starthroat"},{a:"BTHH",k:"buthum",n:"Blue-throated Hummingbird"},{a:"BAWO",k:"bahwoo",n:"Bahama Woodstar"},{a:"LUHU",k:"luchum",n:"Lucifer Hummingbird"},{a:"RTHU",k:"rthhum",n:"Ruby-throated Hummingbird"},{a:"BCHU",k:"bkchum",n:"Black-chinned Hummingbird"},{a:"ANHU",k:"annhum",n:"Anna's Hummingbird"},{a:"COHU",k:"coshum",n:"Costa's Hummingbird"},{a:"BUHU",k:"bumhum",n:"Bumblebee Hummingbird"},{a:"BTAH",k:"brthum",n:"Broad-tailed Hummingbird"},{a:"RUHU",k:"rufhum",n:"Rufous Hummingbird"},{a:"ALHU",k:"allhum",n:"Allen's Hummingbird"},{a:"CAHU",k:"calhum",n:"Calliope Hummingbird"},{a:"BBIH",k:"brbhum",n:"Broad-billed Hummingbird"},{a:"BEHU",k:"berhum",n:"Berylline Hummingbird"},{a:"BBEH",k:"bubhum",n:"Buff-bellied Hummingbird"},{a:"CIHU",k:"cinhum1",n:"Cinnamon Hummingbird"},{a:"VCHU",k:"vichum",n:"Violet-crowned Hummingbird"},{a:"WEHU",k:"whehum",n:"White-eared Hummingbird"},{a:"XAHU",k:"xanhum",n:"Xantus's Hummingbird"},{a:"ELTR",k:"eletro",n:"Elegant Trogon"},{a:"EAQU",k:"earque",n:"Eared Quetzal"},{a:"EHOO",k:"hoopoe",n:"Eurasian Hoopoe"},{a:"RIKI",k:"rinkin1",n:"Ringed Kingfisher"},{a:"BEKI",k:"belkin1",n:"Belted Kingfisher"},{a:"AMKI",k:"amakin1",n:"Amazon Kingfisher"},{a:"GKIN",k:"grnkin",n:"Green Kingfisher"},{a:"EUWR",k:"eurwry",n:"Eurasian Wryneck"},{a:"LEWO",k:"lewwoo",n:"Lewis's Woodpecker"},{a:"RHWO",k:"rehwoo",n:"Red-headed Woodpecker"},{a:"ACWO",k:"acowoo",n:"Acorn Woodpecker"},{a:"GIWO",k:"gilwoo",n:"Gila Woodpecker"},{a:"GFWO",k:"gofwoo",n:"Golden-fronted Woodpecker"},{a:"RBWO",k:"rebwoo",n:"Red-bellied Woodpecker"},{a:"WISA",k:"wilsap",n:"Williamson's Sapsucker"},{a:"YBSA",k:"yebsap",n:"Yellow-bellied Sapsucker"},{a:"RNSA",k:"rensap",n:"Red-naped Sapsucker"},{a:"RBSA",k:"rebsap",n:"Red-breasted Sapsucker"},{a:"GSWO",k:"grswoo",n:"Great Spotted Woodpecker"},{a:"LBWO",k:"labwoo",n:"Ladder-backed Woodpecker"},{a:"NUWO",k:"nutwoo",n:"Nuttall's Woodpecker"},{a:"DOWO",k:"dowwoo",n:"Downy Woodpecker"},{a:"HAWO",k:"haiwoo",n:"Hairy Woodpecker"},{a:"ARWO",k:"ariwoo",n:"Arizona Woodpecker"},{a:"RCWO",k:"recwoo",n:"Red-cockaded Woodpecker"},{a:"WHWO",k:"whhwoo",n:"White-headed Woodpecker"},{a:"ATTW",k:"attwoo1",n:"American Three-toed Woodpecker"},{a:"BBWO",k:"bkbwoo",n:"Black-backed Woodpecker"},{a:"NOFL",k:"norfli",n:"Northern Flicker"},{a:"GIFL",k:"gilfli",n:"Gilded Flicker"},{a:"PIWO",k:"pilwoo",n:"Pileated Woodpecker"},{a:"IBWO",k:"ivbwoo",n:"Ivory-billed Woodpecker"},{a:"COFF",k:"coffal1",n:"Collared Forest-Falcon"},{a:"CRCA",k:"crecar1",n:"Crested Caracara"},{a:"EUKE",k:"eurkes",n:"Eurasian Kestrel"},{a:"AMKE",k:"amekes",n:"American Kestrel"},{a:"RFFA",k:"reffal1",n:"Red-footed Falcon"},{a:"MERL",k:"merlin",n:"Merlin"},{a:"EHOB",k:"eurhob",n:"Eurasian Hobby"},{a:"APFA",k:"aplfal",n:"Aplomado Falcon"},{a:"GYRF",k:"gyrfal",n:"Gyrfalcon"},{a:"PEFA",k:"perfal",n:"Peregrine Falcon"},{a:"PRFA",k:"prafal",n:"Prairie Falcon"},{a:"BUDG",k:"budger",n:"Budgerigar"},{a:"RFLO",k:"peflov",n:"Rosy-faced Lovebird"},{a:"MOPA",k:"monpar",n:"Monk Parakeet"},{a:"CAPA",k:"carpar",n:"Carolina Parakeet"},{a:"NAPA",k:"bkhpar",n:"Nanday Parakeet"},{a:"GREP",k:"grnpar",n:"Green Parakeet"},{a:"TBPA",k:"thbpar",n:"Thick-billed Parrot"},{a:"WWPA",k:"whwpar",n:"White-winged Parakeet"},{a:"RCPA",k:"recpar",n:"Red-crowned Parrot"},{a:"NOBT",k:"nobtyr",n:"Northern Beardless-Tyrannulet"},{a:"GREL",k:"greela",n:"Greenish Elaenia"},{a:"WCEL",k:"whcela1",n:"White-crested Elaenia"},{a:"TUFL",k:"tuffly",n:"Tufted Flycatcher"},{a:"OSFL",k:"olsfly",n:"Olive-sided Flycatcher"},{a:"GRPE",k:"grepew",n:"Greater Pewee"},{a:"WEWP",k:"wewpew",n:"Western Wood-Pewee"},{a:"EAWP",k:"eawpew",n:"Eastern Wood-Pewee"},{a:"CUPE",k:"cubpew1",n:"Cuban Pewee"},{a:"YBFL",k:"yebfly",n:"Yellow-bellied Flycatcher"},{a:"ACFL",k:"acafly",n:"Acadian Flycatcher"},{a:"ALFL",k:"aldfly",n:"Alder Flycatcher"},{a:"WIFL",k:"wilfly",n:"Willow Flycatcher"},{a:"LEFL",k:"leafly",n:"Least Flycatcher"},{a:"HAFL",k:"hamfly",n:"Hammond's Flycatcher"},{a:"GRFL",k:"gryfly",n:"Gray Flycatcher"},{a:"DUFL",k:"dusfly",n:"Dusky Flycatcher"},{a:"PSFL",k:"pasfly",n:"Pacific-slope Flycatcher"},{a:"COFL",k:"corfly",n:"Cordilleran Flycatcher"},{a:"BBFL",k:"bubfly",n:"Buff-breasted Flycatcher"},{a:"BLPH",k:"blkpho",n:"Black Phoebe"},{a:"EAPH",k:"easpho",n:"Eastern Phoebe"},{a:"SAPH",k:"saypho",n:"Say's Phoebe"},{a:"VEFL",k:"verfly",n:"Vermilion Flycatcher"},{a:"DCFL",k:"ducfly",n:"Dusky-capped Flycatcher"},{a:"ATFL",k:"astfly",n:"Ash-throated Flycatcher"},{a:"NUFL",k:"nutfly",n:"Nutting's Flycatcher"},{a:"GCFL",k:"grcfly",n:"Great Crested Flycatcher"},{a:"BCFL",k:"bncfly",n:"Brown-crested Flycatcher"},{a:"LSFL",k:"lasfly",n:"La Sagra's Flycatcher"},{a:"GKIS",k:"grekis",n:"Great Kiskadee"},{a:"SOFL",k:"socfly1",n:"Social Flycatcher"},{a:"SBFL",k:"subfly",n:"Sulphur-bellied Flycatcher"},{a:"PIRF",k:"pirfly1",n:"Piratic Flycatcher"},{a:"VAFL",k:"varfly",n:"Variegated Flycatcher"},{a:"CSFL",k:"croslf1",n:"Crowned Slaty Flycatcher"},{a:"TRKI",k:"trokin",n:"Tropical Kingbird"},{a:"COKI",k:"coukin",n:"Couch's Kingbird"},{a:"CAKI",k:"caskin",n:"Cassin's Kingbird"},{a:"TBKI",k:"thbkin",n:"Thick-billed Kingbird"},{a:"WEKI",k:"weskin",n:"Western Kingbird"},{a:"EAKI",k:"easkin",n:"Eastern Kingbird"},{a:"GRAK",k:"grykin",n:"Gray Kingbird"},{a:"LOKI",k:"logkin",n:"Loggerhead Kingbird"},{a:"STFL",k:"sctfly",n:"Scissor-tailed Flycatcher"},{a:"FTFL",k:"fotfly",n:"Fork-tailed Flycatcher"},{a:"MATI",k:"mastit1",n:"Masked Tityra"},{a:"GCBE",k:"grcbec1",n:"Gray-collared Becard"},{a:"RTBE",k:"rotbec",n:"Rose-throated Becard"},{a:"BROS",k:"brnshr",n:"Brown Shrike"},{a:"LOSH",k:"logshr",n:"Loggerhead Shrike"},{a:"NSHR",k:"norshr4",n:"Northern Shrike"},{a:"WEVI",k:"whevir",n:"White-eyed Vireo"},{a:"TBVI",k:"thbvir",n:"Thick-billed Vireo"},{a:"BEVI",k:"belvir",n:"Bell's Vireo"},{a:"BCVI",k:"bkcvir1",n:"Black-capped Vireo"},{a:"GRVI",k:"gryvir",n:"Gray Vireo"},{a:"YTVI",k:"yetvir",n:"Yellow-throated Vireo"},{a:"PLVI",k:"plsvir",n:"Plumbeous Vireo"},{a:"CAVI",k:"casvir",n:"Cassin's Vireo"},{a:"BHVI",k:"buhvir",n:"Blue-headed Vireo"},{a:"HUVI",k:"hutvir",n:"Hutton's Vireo"},{a:"WAVI",k:"warvir",n:"Warbling Vireo"},{a:"PHVI",k:"phivir",n:"Philadelphia Vireo"},{a:"REVI",k:"reevir1",n:"Red-eyed Vireo"},{a:"YGVI",k:"yegvir",n:"Yellow-green Vireo"},{a:"BWVI",k:"bkwvir",n:"Black-whiskered Vireo"},{a:"YUVI",k:"yucvir",n:"Yucatan Vireo"},{a:"CAJA",k:"gryjay",n:"Canada Jay"},{a:"BRJA",k:"brnjay",n:"Brown Jay"},{a:"GRJA",k:"grnjay",n:"Green Jay"},{a:"PIJA",k:"pinjay",n:"Pinyon Jay"},{a:"STJA",k:"stejay",n:"Steller's Jay"},{a:"BLJA",k:"blujay",n:"Blue Jay"},{a:"FLSJ",k:"flsjay",n:"Florida Scrub-Jay"},{a:"ISSJ",k:"issjay",n:"Island Scrub-Jay"},{a:"CASJ",k:"cowscj1",n:"California Scrub-Jay"},{a:"MEJA",k:"mexjay4",n:"Mexican Jay"},{a:"CLNU",k:"clanut",n:"Clark's Nutcracker"},{a:"BBMA",k:"bkbmag1",n:"Black-billed Magpie"},{a:"YBMA",k:"yebmag",n:"Yellow-billed Magpie"},{a:"EUJA",k:"eurjac",n:"Eurasian Jackdaw"},{a:"AMCR",k:"amecro",n:"American Crow"},{a:"NOCR",k:"norcro",n:"Northwestern Crow"},{a:"TACR",k:"tamcro",n:"Tamaulipas Crow"},{a:"FICR",k:"fiscro",n:"Fish Crow"},{a:"CHRA",k:"chirav",n:"Chihuahuan Raven"},{a:"CORA",k:"comrav",n:"Common Raven"},{a:"EUSK",k:"skylar",n:"Eurasian Skylark"},{a:"HOLA",k:"horlar",n:"Horned Lark"},{a:"PUMA",k:"purmar",n:"Purple Martin"},{a:"CUMA",k:"cubmar",n:"Cuban Martin"},{a:"GYBM",k:"gybmar",n:"Gray-breasted Martin"},{a:"SOMA",k:"soumar",n:"Southern Martin"},{a:"BCMA",k:"brcmar1",n:"Brown-chested Martin"},{a:"TRES",k:"treswa",n:"Tree Swallow"},{a:"MANS",k:"manswa1",n:"Mangrove Swallow"},{a:"VGSW",k:"vigswa",n:"Violet-green Swallow"},{a:"BAHS",k:"bahswa",n:"Bahama Swallow"},{a:"NRWS",k:"nrwswa",n:"Northern Rough-winged Swallow"},{a:"BANS",k:"banswa",n:"Bank Swallow"},{a:"CLSW",k:"cliswa",n:"Cliff Swallow"},{a:"CASW",k:"cavswa",n:"Cave Swallow"},{a:"BARS",k:"barswa",n:"Barn Swallow"},{a:"COHM",k:"cohmar1",n:"Common House-Martin"},{a:"CACH",k:"carchi",n:"Carolina Chickadee"},{a:"BCCH",k:"bkcchi",n:"Black-capped Chickadee"},{a:"MOCH",k:"mouchi",n:"Mountain Chickadee"},{a:"MECH",k:"mexchi",n:"Mexican Chickadee"},{a:"CBCH",k:"chbchi",n:"Chestnut-backed Chickadee"},{a:"BOCH",k:"borchi2",n:"Boreal Chickadee"},{a:"GHCH",k:"gyhchi",n:"Gray-headed Chickadee"},{a:"BRTI",k:"britit",n:"Bridled Titmouse"},{a:"OATI",k:"oaktit",n:"Oak Titmouse"},{a:"JUTI",k:"juntit1",n:"Juniper Titmouse"},{a:"TUTI",k:"tuftit",n:"Tufted Titmouse"},{a:"BCTI",k:"blctit4",n:"Black-crested Titmouse"},{a:"VERD",k:"verdin",n:"Verdin"},{a:"BUSH",k:"bushti",n:"Bushtit"},{a:"RBNU",k:"rebnut",n:"Red-breasted Nuthatch"},{a:"WBNU",k:"whbnut",n:"White-breasted Nuthatch"},{a:"PYNU",k:"pygnut",n:"Pygmy Nuthatch"},{a:"BHNU",k:"bnhnut",n:"Brown-headed Nuthatch"},{a:"BRCR",k:"brncre",n:"Brown Creeper"},{a:"ROWR",k:"rocwre",n:"Rock Wren"},{a:"CANW",k:"canwre",n:"Canyon Wren"},{a:"HOWR",k:"houwre",n:"House Wren"},{a:"PAWR",k:"pacwre1",n:"Pacific Wren"},{a:"WIWR",k:"winwre3",n:"Winter Wren"},{a:"SEWR",k:"sedwre",n:"Sedge Wren"},{a:"MAWR",k:"marwre",n:"Marsh Wren"},{a:"CARW",k:"carwre",n:"Carolina Wren"},{a:"BEWR",k:"bewwre",n:"Bewick's Wren"},{a:"CACW",k:"cacwre",n:"Cactus Wren"},{a:"SIWR",k:"sinwre1",n:"Sinaloa Wren"},{a:"BGGN",k:"buggna",n:"Blue-gray Gnatcatcher"},{a:"CAGN",k:"calgna",n:"California Gnatcatcher"},{a:"BTGN",k:"bktgna",n:"Black-tailed Gnatcatcher"},{a:"BCGN",k:"bkcgna",n:"Black-capped Gnatcatcher"},{a:"AMDI",k:"amedip",n:"American Dipper"},{a:"RWBU",k:"rewbul",n:"Red-whiskered Bulbul"},{a:"GCKI",k:"gockin",n:"Golden-crowned Kinglet"},{a:"RCKI",k:"ruckin",n:"Ruby-crowned Kinglet"},{a:"WILW",k:"wlwwar",n:"Willow Warbler"},{a:"CCHI",k:"comchi1",n:"Common Chiffchaff"},{a:"WOWA",k:"woowar",n:"Wood Warbler"},{a:"DUWA",k:"duswar",n:"Dusky Warbler"},{a:"PLEW",k:"palwar5",n:"Pallas's Leaf Warbler"},{a:"YBWA",k:"yebwar3",n:"Yellow-browed Warbler"},{a:"ARWA",k:"arcwar1",n:"Arctic Warbler"},{a:"KLWA",k:"arcwar2",n:"Kamchatka Leaf Warbler"},{a:"LEWH",k:"leswhi1",n:"Lesser Whitethroat"},{a:"WREN",k:"wrenti",n:"Wrentit"},{a:"SEWA",k:"sedwar1",n:"Sedge Warbler"},{a:"MIGW",k:"migwar",n:"Middendorff's Grasshopper-Warbler"},{a:"LANW",k:"lanwar",n:"Lanceolated Warbler"},{a:"GSFL",k:"gysfly1",n:"Gray-streaked Flycatcher"},{a:"ABFL",k:"asbfly",n:"Asian Brown Flycatcher"},{a:"SPFL",k:"spofly1",n:"Spotted Flycatcher"},{a:"DSFL",k:"dasfly",n:"Dark-sided Flycatcher"},{a:"RTRO",k:"rutrob1",n:"Rufous-tailed Robin"},{a:"SIRU",k:"sibrub",n:"Siberian Rubythroat"},{a:"BLUE",k:"blueth",n:"Bluethroat"},{a:"SBRO",k:"sibrob",n:"Siberian Blue Robin"},{a:"RFBL",k:"refblu",n:"Red-flanked Bluetail"},{a:"NAFL",k:"narfly",n:"Narcissus Flycatcher"},{a:"MUFL",k:"mugfly",n:"Mugimaki Flycatcher"},{a:"TAFL",k:"taifly1",n:"Taiga Flycatcher"},{a:"NOWH",k:"norwhe",n:"Northern Wheatear"},{a:"CRET",k:"comred2",n:"Common Redstart"},{a:"SIST",k:"sibsto1",n:"Siberian Stonechat"},{a:"EABL",k:"easblu",n:"Eastern Bluebird"},{a:"WEBL",k:"wesblu",n:"Western Bluebird"},{a:"MOBL",k:"moublu",n:"Mountain Bluebird"},{a:"TOSO",k:"towsol",n:"Townsend's Solitaire"},{a:"BBSO",k:"brbsol1",n:"Brown-backed Solitaire"},{a:"OBNT",k:"obnthr1",n:"Orange-billed Nightingale-Thrush"},{a:"BHNT",k:"bhnthr1",n:"Black-headed Nightingale-Thrush"},{a:"VEER",k:"veery",n:"Veery"},{a:"GCTH",k:"gycthr",n:"Gray-cheeked Thrush"},{a:"BITH",k:"bicthr",n:"Bicknell's Thrush"},{a:"SWTH",k:"swathr",n:"Swainson's Thrush"},{a:"HETH",k:"herthr",n:"Hermit Thrush"},{a:"WOTH",k:"woothr",n:"Wood Thrush"},{a:"EUBB",k:"eurbla",n:"Eurasian Blackbird"},{a:"EYTH",k:"eyethr",n:"Eyebrowed Thrush"},{a:"NATH",k:"dusthr1",n:"Naumann's Thrush"},{a:"FIEL",k:"fieldf",n:"Fieldfare"},{a:"REDW",k:"redwin",n:"Redwing"},{a:"SOTH",k:"sonthr1",n:"Song Thrush"},{a:"CCTH",k:"clcrob",n:"Clay-colored Thrush"},{a:"WTTH",k:"whtrob1",n:"White-throated Thrush"},{a:"RBRO",k:"rubrob",n:"Rufous-backed Robin"},{a:"AMRO",k:"amerob",n:"American Robin"},{a:"RLTH",k:"relthr1",n:"Red-legged Thrush"},{a:"VATH",k:"varthr",n:"Varied Thrush"},{a:"AZTH",k:"aztthr",n:"Aztec Thrush"},{a:"BLMO",k:"blumoc",n:"Blue Mockingbird"},{a:"GRCA",k:"grycat",n:"Gray Catbird"},{a:"CBTH",k:"cubthr",n:"Curve-billed Thrasher"},{a:"BRTH",k:"brnthr",n:"Brown Thrasher"},{a:"LBTH",k:"lobthr",n:"Long-billed Thrasher"},{a:"BETH",k:"benthr",n:"Bendire's Thrasher"},{a:"CATH",k:"calthr",n:"California Thrasher"},{a:"LCTH",k:"lecthr",n:"LeConte's Thrasher"},{a:"CRTH",k:"crithr",n:"Crissal Thrasher"},{a:"SATH",k:"sagthr",n:"Sage Thrasher"},{a:"BAMO",k:"bahmoc",n:"Bahama Mockingbird"},{a:"NOMO",k:"normoc",n:"Northern Mockingbird"},{a:"EUST",k:"eursta",n:"European Starling"},{a:"COMY",k:"commyn",n:"Common Myna"},{a:"SIAC",k:"sibacc",n:"Siberian Accentor"},{a:"EYWA",k:"eaywag",n:"Eastern Yellow Wagtail"},{a:"CIWA",k:"citwag",n:"Citrine Wagtail"},{a:"GRAW",k:"grywag",n:"Gray Wagtail"},{a:"WHWA",k:"whiwag",n:"White Wagtail"},{a:"TRPI",k:"trepip",n:"Tree Pipit"},{a:"OBPI",k:"olbpip",n:"Olive-backed Pipit"},{a:"PEPI",k:"pecpip",n:"Pechora Pipit"},{a:"RTPI",k:"retpip",n:"Red-throated Pipit"},{a:"AMPI",k:"amepip",n:"American Pipit"},{a:"SPPI",k:"sprpip",n:"Sprague's Pipit"},{a:"BOWA",k:"bohwax",n:"Bohemian Waxwing"},{a:"CEDW",k:"cedwax",n:"Cedar Waxwing"},{a:"GRSF",k:"grsfly1",n:"Gray Silky-flycatcher"},{a:"PHAI",k:"phaino",n:"Phainopepla"},{a:"OLWA",k:"oliwar",n:"Olive Warbler"},{a:"LALO",k:"laplon",n:"Lapland Longspur"},{a:"CCLO",k:"chclon",n:"Chestnut-collared Longspur"},{a:"SMLO",k:"smilon",n:"Smith's Longspur"},{a:"MCLO",k:"mcclon",n:"McCown's Longspur"},{a:"SNBU",k:"snobun",n:"Snow Bunting"},{a:"MKBU",k:"mckbun",n:"McKay's Bunting"},{a:"OVEN",k:"ovenbi1",n:"Ovenbird"},{a:"WEWA",k:"woewar1",n:"Worm-eating Warbler"},{a:"LOWA",k:"louwat",n:"Louisiana Waterthrush"},{a:"NOWA",k:"norwat",n:"Northern Waterthrush"},{a:"BAWA",k:"bacwar",n:"Bachman's Warbler"},{a:"GWWA",k:"gowwar",n:"Golden-winged Warbler"},{a:"BWWA",k:"buwwar",n:"Blue-winged Warbler"},{a:"BAWW",k:"bawwar",n:"Black-and-white Warbler"},{a:"PROW",k:"prowar",n:"Prothonotary Warbler"},{a:"SWWA",k:"swawar",n:"Swainson's Warbler"},{a:"CCWA",k:"crcwar",n:"Crescent-chested Warbler"},{a:"TEWA",k:"tenwar",n:"Tennessee Warbler"},{a:"OCWA",k:"orcwar",n:"Orange-crowned Warbler"},{a:"COLW",k:"colwar",n:"Colima Warbler"},{a:"LUWA",k:"lucwar",n:"Lucy's Warbler"},{a:"NAWA",k:"naswar",n:"Nashville Warbler"},{a:"VIWA",k:"virwar",n:"Virginia's Warbler"},{a:"CONW",k:"conwar",n:"Connecticut Warbler"},{a:"GCYE",k:"gycyel",n:"Gray-crowned Yellowthroat"},{a:"MGWA",k:"macwar",n:"MacGillivray's Warbler"},{a:"MOWA",k:"mouwar",n:"Mourning Warbler"},{a:"KEWA",k:"kenwar",n:"Kentucky Warbler"},{a:"COYE",k:"comyel",n:"Common Yellowthroat"},{a:"HOWA",k:"hoowar",n:"Hooded Warbler"},{a:"AMRE",k:"amered",n:"American Redstart"},{a:"KIWA",k:"kirwar",n:"Kirtland's Warbler"},{a:"CMWA",k:"camwar",n:"Cape May Warbler"},{a:"CERW",k:"cerwar",n:"Cerulean Warbler"},{a:"NOPA",k:"norpar",n:"Northern Parula"},{a:"TRPA",k:"tropar",n:"Tropical Parula"},{a:"MAWA",k:"magwar",n:"Magnolia Warbler"},{a:"BBWA",k:"babwar",n:"Bay-breasted Warbler"},{a:"BLBW",k:"bkbwar",n:"Blackburnian Warbler"},{a:"YEWA",k:"yelwar",n:"Yellow Warbler"},{a:"CSWA",k:"chswar",n:"Chestnut-sided Warbler"},{a:"BLPW",k:"bkpwar",n:"Blackpoll Warbler"},{a:"BTBW",k:"btbwar",n:"Black-throated Blue Warbler"},{a:"PAWA",k:"palwar",n:"Palm Warbler"},{a:"PIWA",k:"pinwar",n:"Pine Warbler"},{a:"YRWA",k:"yerwar",n:"Yellow-rumped Warbler"},{a:"YTWA",k:"yetwar",n:"Yellow-throated Warbler"},{a:"PRAW",k:"prawar",n:"Prairie Warbler"},{a:"GRWA",k:"grawar",n:"Grace's Warbler"},{a:"BTYW",k:"btywar",n:"Black-throated Gray Warbler"},{a:"TOWA",k:"towwar",n:"Townsend's Warbler"},{a:"HEWA",k:"herwar",n:"Hermit Warbler"},{a:"GCWA",k:"gchwar",n:"Golden-cheeked Warbler"},{a:"BTNW",k:"btnwar",n:"Black-throated Green Warbler"},{a:"FTWA",k:"fatwar",n:"Fan-tailed Warbler"},{a:"RCWA",k:"rucwar",n:"Rufous-capped Warbler"},{a:"GCRW",k:"gcrwar",n:"Golden-crowned Warbler"},{a:"CAWA",k:"canwar",n:"Canada Warbler"},{a:"WIWA",k:"wlswar",n:"Wilson's Warbler"},{a:"RFWA",k:"refwar",n:"Red-faced Warbler"},{a:"PARE",k:"paired",n:"Painted Redstart"},{a:"STRE",k:"sltred",n:"Slate-throated Redstart"},{a:"YBCH",k:"yebcha",n:"Yellow-breasted Chat"},{a:"BANA",k:"banana",n:"Bananaquit"},{a:"WESP",k:"wesspi",n:"Western Spindalis"},{a:"CRSE",k:"whcsee2",n:"Cinnamon-rumped Seedeater"},{a:"YFGR",k:"yefgra1",n:"Yellow-faced Grassquit"},{a:"BFGR",k:"bkfgra",n:"Black-faced Grassquit"},{a:"OLSP",k:"olispa",n:"Olive Sparrow"},{a:"GTTO",k:"gnttow",n:"Green-tailed Towhee"},{a:"SPTO",k:"spotow",n:"Spotted Towhee"},{a:"EATO",k:"eastow",n:"Eastern Towhee"},{a:"RCSP",k:"rucspa",n:"Rufous-crowned Sparrow"},{a:"CANT",k:"cantow",n:"Canyon Towhee"},{a:"CALT",k:"caltow",n:"California Towhee"},{a:"ABTO",k:"abetow",n:"Abert's Towhee"},{a:"RWSP",k:"ruwspa",n:"Rufous-winged Sparrow"},{a:"BOSP",k:"botspa",n:"Botteri's Sparrow"},{a:"CASP",k:"casspa",n:"Cassin's Sparrow"},{a:"BACS",k:"bacspa",n:"Bachman's Sparrow"},{a:"ATSP",k:"amtspa",n:"American Tree Sparrow"},{a:"CHSP",k:"chispa",n:"Chipping Sparrow"},{a:"CCSP",k:"clcspa",n:"Clay-colored Sparrow"},{a:"BRSP",k:"brespa",n:"Brewer's Sparrow"},{a:"FISP",k:"fiespa",n:"Field Sparrow"},{a:"WOSP",k:"worspa",n:"Worthen's Sparrow"},{a:"BCSP",k:"bkcspa",n:"Black-chinned Sparrow"},{a:"VESP",k:"vesspa",n:"Vesper Sparrow"},{a:"LASP",k:"larspa",n:"Lark Sparrow"},{a:"FSSP",k:"fisspa",n:"Five-striped Sparrow"},{a:"BTSP",k:"bktspa",n:"Black-throated Sparrow"},{a:"SABS",k:"sagspa1",n:"Sagebrush Sparrow"},{a:"BESP",k:"belspa2",n:"Bell's Sparrow"},{a:"LARB",k:"larbun",n:"Lark Bunting"},{a:"SAVS",k:"savspa",n:"Savannah Sparrow"},{a:"GRSP",k:"graspa",n:"Grasshopper Sparrow"},{a:"BAIS",k:"baispa",n:"Baird's Sparrow"},{a:"HESP",k:"henspa",n:"Henslow's Sparrow"},{a:"LCSP",k:"lecspa",n:"LeConte's Sparrow"},{a:"NESP",k:"nstspa",n:"Nelson's Sparrow"},{a:"SALS",k:"sstspa",n:"Saltmarsh Sparrow"},{a:"SESP",k:"seaspa",n:"Seaside Sparrow"},{a:"FOSP",k:"foxspa",n:"Fox Sparrow"},{a:"SOSP",k:"sonspa",n:"Song Sparrow"},{a:"LISP",k:"linspa",n:"Lincoln's Sparrow"},{a:"SWSP",k:"swaspa",n:"Swamp Sparrow"},{a:"WTSP",k:"whtspa",n:"White-throated Sparrow"},{a:"HASP",k:"harspa",n:"Harris's Sparrow"},{a:"WCSP",k:"whcspa",n:"White-crowned Sparrow"},{a:"GCSP",k:"gocspa",n:"Golden-crowned Sparrow"},{a:"DEJU",k:"daejun",n:"Dark-eyed Junco"},{a:"YEJU",k:"yeejun",n:"Yellow-eyed Junco"},{a:"PIBU",k:"pinbun",n:"Pine Bunting"},{a:"YBWB",k:"yebbun1",n:"Yellow-browed Bunting"},{a:"LIBU",k:"litbun",n:"Little Bunting"},{a:"RUBU",k:"rusbun",n:"Rustic Bunting"},{a:"YTBU",k:"yetbun1",n:"Yellow-throated Bunting"},{a:"YBSB",k:"yebbun",n:"Yellow-breasted Bunting"},{a:"GRBU",k:"grybun",n:"Gray Bunting"},{a:"PALB",k:"palbun",n:"Pallas's Bunting"},{a:"REBU",k:"reebun",n:"Reed Bunting"},{a:"HETA",k:"heptan",n:"Hepatic Tanager"},{a:"SUTA",k:"sumtan",n:"Summer Tanager"},{a:"SCTA",k:"scatan",n:"Scarlet Tanager"},{a:"WETA",k:"westan",n:"Western Tanager"},{a:"FCTA",k:"flctan",n:"Flame-colored Tanager"},{a:"CCGR",k:"crcgro",n:"Crimson-collared Grosbeak"},{a:"NOCA",k:"norcar",n:"Northern Cardinal"},{a:"PYRR",k:"pyrrhu",n:"Pyrrhuloxia"},{a:"YEGR",k:"yelgro",n:"Yellow Grosbeak"},{a:"RBGR",k:"robgro",n:"Rose-breasted Grosbeak"},{a:"BHGR",k:"bkhgro",n:"Black-headed Grosbeak"},{a:"BLBU",k:"blubun",n:"Blue Bunting"},{a:"BLGR",k:"blugrb1",n:"Blue Grosbeak"},{a:"LAZB",k:"lazbun",n:"Lazuli Bunting"},{a:"INBU",k:"indbun",n:"Indigo Bunting"},{a:"VABU",k:"varbun",n:"Varied Bunting"},{a:"PABU",k:"paibun",n:"Painted Bunting"},{a:"DICK",k:"dickci",n:"Dickcissel"},{a:"BOBO",k:"boboli",n:"Bobolink"},{a:"RWBL",k:"rewbla",n:"Red-winged Blackbird"},{a:"TRBL",k:"tribla",n:"Tricolored Blackbird"},{a:"TSBL",k:"tasbla",n:"Tawny-shouldered Blackbird"},{a:"EAME",k:"easmea",n:"Eastern Meadowlark"},{a:"WEME",k:"wesmea",n:"Western Meadowlark"},{a:"YHBL",k:"yehbla",n:"Yellow-headed Blackbird"},{a:"RUBL",k:"rusbla",n:"Rusty Blackbird"},{a:"BRBL",k:"brebla",n:"Brewer's Blackbird"},{a:"COGR",k:"comgra",n:"Common Grackle"},{a:"BTGR",k:"botgra",n:"Boat-tailed Grackle"},{a:"GTGR",k:"grtgra",n:"Great-tailed Grackle"},{a:"SHCO",k:"shicow",n:"Shiny Cowbird"},{a:"BROC",k:"brocow",n:"Bronzed Cowbird"},{a:"BHCO",k:"bnhcow",n:"Brown-headed Cowbird"},{a:"BVOR",k:"bkvori",n:"Black-vented Oriole"},{a:"OROR",k:"orcori",n:"Orchard Oriole"},{a:"HOOR",k:"hooori",n:"Hooded Oriole"},{a:"SBAO",k:"stbori",n:"Streak-backed Oriole"},{a:"BUOR",k:"bulori",n:"Bullock's Oriole"},{a:"SBOR",k:"spbori",n:"Spot-breasted Oriole"},{a:"ALOR",k:"altori",n:"Altamira Oriole"},{a:"AUOR",k:"audori",n:"Audubon's Oriole"},{a:"BAOR",k:"balori",n:"Baltimore Oriole"},{a:"SCOR",k:"scoori",n:"Scott's Oriole"},{a:"CCHA",k:"comcha",n:"Common Chaffinch"},{a:"BRAM",k:"brambl",n:"Brambling"},{a:"ASRF",k:"asrfin1",n:"Asian Rosy-Finch"},{a:"GCRF",k:"gcrfin",n:"Gray-crowned Rosy-Finch"},{a:"BLRF",k:"bkrfin",n:"Black Rosy-Finch"},{a:"BCRF",k:"bcrfin",n:"Brown-capped Rosy-Finch"},{a:"PIGR",k:"pingro",n:"Pine Grosbeak"},{a:"EUBU",k:"eurbul",n:"Eurasian Bullfinch"},{a:"CORO",k:"comros",n:"Common Rosefinch"},{a:"HOFI",k:"houfin",n:"House Finch"},{a:"PUFI",k:"purfin",n:"Purple Finch"},{a:"CAFI",k:"casfin",n:"Cassin's Finch"},{a:"RECR",k:"redcro",n:"Red Crossbill"},{a:"WWCR",k:"whwcro",n:"White-winged Crossbill"},{a:"CORE",k:"comred",n:"Common Redpoll"},{a:"HORE",k:"hoared",n:"Hoary Redpoll"},{a:"EUSI",k:"eursis",n:"Eurasian Siskin"},{a:"PISI",k:"pinsis",n:"Pine Siskin"},{a:"LEGO",k:"lesgol",n:"Lesser Goldfinch"},{a:"LAGO",k:"lawgol",n:"Lawrence's Goldfinch"},{a:"AMGO",k:"amegfi",n:"American Goldfinch"},{a:"ORGR",k:"origre",n:"Oriental Greenfinch"},{a:"EVGR",k:"evegro",n:"Evening Grosbeak"},{a:"HAWF",k:"hawfin",n:"Hawfinch"},{a:"HOSP",k:"houspa",n:"House Sparrow"},{a:"ETSP",k:"eutspa",n:"Eurasian Tree Sparrow"},{a:"SBMU",k:"nutman",n:"Scaly-breasted Munia"}]}function fe(){for(var _={},W=window.location.href,T=W.split(/[?&]+/),R=0;R<T.length;R++){var x=T[R].split("=");_[x[0]]=x[1]}return _}function me(_,W){let T="https://skuarua.serv00.net/srapi/v1";_.sid&&(T+="/rba");let R=JSON.stringify(_),x={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json","X-API-KEY":i,"X-API_USER":l},body:R};console.log("skipsWGet: "+R),n.el.InfoPanel.innerHTML="<p>fetching results ... (may take up to 30 seconds to wake after idle)</p>",fetch(T,x).then(function(X){return console.log("ok="+X.ok+", status="+X.status),X.ok?(n.el.InfoPanel.innerHTML="",Promise.resolve(X)):(n.el.InfoPanel.innerHTML="status "+X.statusText,Promise.reject(new Error(X.statusText)))}).then(function(X){return X.json()}).then(function(X){W(X)}).catch(function(X){n.el.InfoPanel.innerHTML=X,console.log("Request failed",X)})}function he(_,W){return _!=null&&W!=null&&_.lastIndexOf(W)==0}function Ce(_){return _.replace(/ /g,"&nbsp;")}function ge(_,W){var T=_.toFixed(3)+","+W.toFixed(3);console.log("markerClickHandler: latLng="+T),n.el.ApiLatLngText.value=T;var R=!0;p(n.el.ApiLatLngText.form,R)}function Re(_,W,T){var R=new Date;R.setTime(R.getTime()+T*24*60*60*1e3);var x="expires="+R.toUTCString();document.cookie=_+"="+encodeURIComponent(W)+";"+x+";path=/"}function We(_){for(var W=_+"=",T=document.cookie.split(";"),R=0;R<T.length;R++){for(var x=T[R];x.charAt(0)==" ";)x=x.substring(1);if(x.indexOf(W)==0)return decodeURIComponent(x.substring(W.length,x.length))}return""}function _e(){l=We("sess");let _=btoa(i);return!l||!/[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}/.test(l.toUpperCase())?(l=prompt("Email:"),l&&Re("sess",l,365),window.location.reload(!0),document.getElementById("skipsPageWrapper").innerHTML="Please refresh the page."):_}}const De={ADD:"add",REMOVE:"remove"},xn={PROPERTYCHANGE:"propertychange"},z={CHANGE:"change",ERROR:"error",CONTEXTMENU:"contextmenu",CLICK:"click",DBLCLICK:"dblclick",KEYDOWN:"keydown",KEYPRESS:"keypress",LOAD:"load",TOUCHMOVE:"touchmove",WHEEL:"wheel"};class ii{constructor(){this.disposed=!1}dispose(){this.disposed||(this.disposed=!0,this.disposeInternal())}disposeInternal(){}}function Ts(a,e,t){let n,i;t=t||It;let l=0,o=a.length,r=!1;for(;l<o;)n=l+(o-l>>1),i=+t(a[n],e),i<0?l=n+1:(o=n,r=!i);return r?l:~l}function It(a,e){return a>e?1:a<e?-1:0}function ws(a,e){return a<e?1:a>e?-1:0}function ml(a,e,t){if(a[0]<=e)return 0;const n=a.length;if(e<=a[n-1])return n-1;if(typeof t=="function"){for(let i=1;i<n;++i){const l=a[i];if(l===e)return i;if(l<e)return t(e,a[i-1],l)>0?i-1:i}return n-1}if(t>0){for(let i=1;i<n;++i)if(a[i]<e)return i-1;return n-1}if(t<0){for(let i=1;i<n;++i)if(a[i]<=e)return i;return n-1}for(let i=1;i<n;++i){if(a[i]==e)return i;if(a[i]<e)return a[i-1]-e<e-a[i]?i-1:i}return n-1}function Es(a,e,t){for(;e<t;){const n=a[e];a[e]=a[t],a[t]=n,++e,--t}}function yl(a,e){const t=Array.isArray(e)?e:[e],n=t.length;for(let i=0;i<n;i++)a[a.length]=t[i]}function qt(a,e){const t=a.length;if(t!==e.length)return!1;for(let n=0;n<t;n++)if(a[n]!==e[n])return!1;return!0}function Rs(a,e,t){const n=e||It;return a.every(function(i,l){if(l===0)return!0;const o=n(a[l-1],i);return!(o>0||o===0)})}function ha(){return!0}function li(){return!1}function ca(){}function ir(a){let e,t,n;return function(){const i=Array.prototype.slice.call(arguments);return(!t||this!==n||!qt(i,t))&&(n=this,t=i,e=a.apply(this,arguments)),e}}function Is(a){function e(){let t;try{t=a()}catch(n){return Promise.reject(n)}return t instanceof Promise?t:Promise.resolve(t)}return e()}function _a(a){for(const e in a)delete a[e]}function vn(a){let e;for(e in a)return!1;return!e}class Pt{constructor(e){this.propagationStopped,this.defaultPrevented,this.type=e,this.target=null}preventDefault(){this.defaultPrevented=!0}stopPropagation(){this.propagationStopped=!0}}class oi extends ii{constructor(e){super(),this.eventTarget_=e,this.pendingRemovals_=null,this.dispatching_=null,this.listeners_=null}addEventListener(e,t){if(!e||!t)return;const n=this.listeners_||(this.listeners_={}),i=n[e]||(n[e]=[]);i.includes(t)||i.push(t)}dispatchEvent(e){const t=typeof e=="string",n=t?e:e.type,i=this.listeners_&&this.listeners_[n];if(!i)return;const l=t?new Pt(e):e;l.target||(l.target=this.eventTarget_||this);const o=this.dispatching_||(this.dispatching_={}),r=this.pendingRemovals_||(this.pendingRemovals_={});n in o||(o[n]=0,r[n]=0),++o[n];let s;for(let h=0,c=i.length;h<c;++h)if("handleEvent"in i[h]?s=i[h].handleEvent(l):s=i[h].call(this,l),s===!1||l.propagationStopped){s=!1;break}if(--o[n]===0){let h=r[n];for(delete r[n];h--;)this.removeEventListener(n,ca);delete o[n]}return s}disposeInternal(){this.listeners_&&_a(this.listeners_)}getListeners(e){return this.listeners_&&this.listeners_[e]||void 0}hasListener(e){return this.listeners_?e?e in this.listeners_:Object.keys(this.listeners_).length>0:!1}removeEventListener(e,t){if(!this.listeners_)return;const n=this.listeners_[e];if(!n)return;const i=n.indexOf(t);i!==-1&&(this.pendingRemovals_&&e in this.pendingRemovals_?(n[i]=ca,++this.pendingRemovals_[e]):(n.splice(i,1),n.length===0&&delete this.listeners_[e]))}}function $(a,e,t,n,i){if(i){const o=t;t=function(r){return a.removeEventListener(e,t),o.call(n??this,r)}}else n&&n!==a&&(t=t.bind(n));const l={target:a,type:e,listener:t};return a.addEventListener(e,t),l}function Ka(a,e,t,n){return $(a,e,t,n,!0)}function de(a){a&&a.target&&(a.target.removeEventListener(a.type,a.listener),_a(a))}class Ma extends oi{constructor(){super(),this.on=this.onInternal,this.once=this.onceInternal,this.un=this.unInternal,this.revision_=0}changed(){++this.revision_,this.dispatchEvent(z.CHANGE)}getRevision(){return this.revision_}onInternal(e,t){if(Array.isArray(e)){const n=e.length,i=new Array(n);for(let l=0;l<n;++l)i[l]=$(this,e[l],t);return i}return $(this,e,t)}onceInternal(e,t){let n;if(Array.isArray(e)){const i=e.length;n=new Array(i);for(let l=0;l<i;++l)n[l]=Ka(this,e[l],t)}else n=Ka(this,e,t);return t.ol_key=n,n}unInternal(e,t){const n=t.ol_key;if(n)Gs(n);else if(Array.isArray(e))for(let i=0,l=e.length;i<l;++i)this.removeEventListener(e[i],t);else this.removeEventListener(e,t)}}Ma.prototype.on;Ma.prototype.once;Ma.prototype.un;function Gs(a){if(Array.isArray(a))for(let e=0,t=a.length;e<t;++e)de(a[e]);else de(a)}function te(){throw new Error("Unimplemented abstract method.")}let Bs=0;function ae(a){return a.ol_uid||(a.ol_uid=String(++Bs))}class Zl extends Pt{constructor(e,t,n){super(e),this.key=t,this.oldValue=n}}class st extends Ma{constructor(e){super(),this.on,this.once,this.un,ae(this),this.values_=null,e!==void 0&&this.setProperties(e)}get(e){let t;return this.values_&&this.values_.hasOwnProperty(e)&&(t=this.values_[e]),t}getKeys(){return this.values_&&Object.keys(this.values_)||[]}getProperties(){return this.values_&&Object.assign({},this.values_)||{}}getPropertiesInternal(){return this.values_}hasProperties(){return!!this.values_}notify(e,t){let n;n=`change:${e}`,this.hasListener(n)&&this.dispatchEvent(new Zl(n,e,t)),n=xn.PROPERTYCHANGE,this.hasListener(n)&&this.dispatchEvent(new Zl(n,e,t))}addChangeListener(e,t){this.addEventListener(`change:${e}`,t)}removeChangeListener(e,t){this.removeEventListener(`change:${e}`,t)}set(e,t,n){const i=this.values_||(this.values_={});if(n)i[e]=t;else{const l=i[e];i[e]=t,l!==t&&this.notify(e,l)}}setProperties(e,t){for(const n in e)this.set(n,e[n],t)}applyProperties(e){e.values_&&Object.assign(this.values_||(this.values_={}),e.values_)}unset(e,t){if(this.values_&&e in this.values_){const n=this.values_[e];delete this.values_[e],vn(this.values_)&&(this.values_=null),t||this.notify(e,n)}}}const ql={LENGTH:"length"};class Ia extends Pt{constructor(e,t,n){super(e),this.element=t,this.index=n}}class yt extends st{constructor(e,t){if(super(),this.on,this.once,this.un,t=t||{},this.unique_=!!t.unique,this.array_=e||[],this.unique_)for(let n=0,i=this.array_.length;n<i;++n)this.assertUnique_(this.array_[n],n);this.updateLength_()}clear(){for(;this.getLength()>0;)this.pop()}extend(e){for(let t=0,n=e.length;t<n;++t)this.push(e[t]);return this}forEach(e){const t=this.array_;for(let n=0,i=t.length;n<i;++n)e(t[n],n,t)}getArray(){return this.array_}item(e){return this.array_[e]}getLength(){return this.get(ql.LENGTH)}insertAt(e,t){if(e<0||e>this.getLength())throw new Error("Index out of bounds: "+e);this.unique_&&this.assertUnique_(t),this.array_.splice(e,0,t),this.updateLength_(),this.dispatchEvent(new Ia(De.ADD,t,e))}pop(){return this.removeAt(this.getLength()-1)}push(e){this.unique_&&this.assertUnique_(e);const t=this.getLength();return this.insertAt(t,e),this.getLength()}remove(e){const t=this.array_;for(let n=0,i=t.length;n<i;++n)if(t[n]===e)return this.removeAt(n)}removeAt(e){if(e<0||e>=this.getLength())return;const t=this.array_[e];return this.array_.splice(e,1),this.updateLength_(),this.dispatchEvent(new Ia(De.REMOVE,t,e)),t}setAt(e,t){const n=this.getLength();if(e>=n){this.insertAt(e,t);return}if(e<0)throw new Error("Index out of bounds: "+e);this.unique_&&this.assertUnique_(t,e);const i=this.array_[e];this.array_[e]=t,this.dispatchEvent(new Ia(De.REMOVE,i,e)),this.dispatchEvent(new Ia(De.ADD,t,e))}updateLength_(){this.set(ql.LENGTH,this.array_.length)}assertUnique_(e,t){for(let n=0,i=this.array_.length;n<i;++n)if(this.array_[n]===e&&n!==t)throw new Error("Duplicate item added to a unique collection")}}function oe(a,e){if(!a)throw new Error(e)}class oa extends st{constructor(e){if(super(),this.on,this.once,this.un,this.id_=void 0,this.geometryName_="geometry",this.style_=null,this.styleFunction_=void 0,this.geometryChangeKey_=null,this.addChangeListener(this.geometryName_,this.handleGeometryChanged_),e)if(typeof e.getSimplifiedGeometry=="function"){const t=e;this.setGeometry(t)}else{const t=e;this.setProperties(t)}}clone(){const e=new oa(this.hasProperties()?this.getProperties():null);e.setGeometryName(this.getGeometryName());const t=this.getGeometry();t&&e.setGeometry(t.clone());const n=this.getStyle();return n&&e.setStyle(n),e}getGeometry(){return this.get(this.geometryName_)}getId(){return this.id_}getGeometryName(){return this.geometryName_}getStyle(){return this.style_}getStyleFunction(){return this.styleFunction_}handleGeometryChange_(){this.changed()}handleGeometryChanged_(){this.geometryChangeKey_&&(de(this.geometryChangeKey_),this.geometryChangeKey_=null);const e=this.getGeometry();e&&(this.geometryChangeKey_=$(e,z.CHANGE,this.handleGeometryChange_,this)),this.changed()}setGeometry(e){this.set(this.geometryName_,e)}setStyle(e){this.style_=e,this.styleFunction_=e?bs(e):void 0,this.changed()}setId(e){this.id_=e,this.changed()}setGeometryName(e){this.removeChangeListener(this.geometryName_,this.handleGeometryChanged_),this.geometryName_=e,this.addChangeListener(this.geometryName_,this.handleGeometryChanged_),this.handleGeometryChanged_()}}function bs(a){if(typeof a=="function")return a;let e;return Array.isArray(a)?e=a:(oe(typeof a.getZIndex=="function","Expected an `ol/style/Style` or an array of `ol/style/Style.js`"),e=[a]),function(){return e}}const Me={UNKNOWN:0,INTERSECTING:1,ABOVE:2,RIGHT:4,BELOW:8,LEFT:16};function jl(a){const e=nt();for(let t=0,n=a.length;t<n;++t)ra(e,a[t]);return e}function Sl(a,e,t){return t?(t[0]=a[0]-e,t[1]=a[1]-e,t[2]=a[2]+e,t[3]=a[3]+e,t):[a[0]-e,a[1]-e,a[2]+e,a[3]+e]}function lr(a,e){return e?(e[0]=a[0],e[1]=a[1],e[2]=a[2],e[3]=a[3],e):a.slice()}function or(a,e,t){let n,i;return e<a[0]?n=a[0]-e:a[2]<e?n=e-a[2]:n=0,t<a[1]?i=a[1]-t:a[3]<t?i=t-a[3]:i=0,n*n+i*i}function Nn(a,e){return rr(a,e[0],e[1])}function Rn(a,e){return a[0]<=e[0]&&e[2]<=a[2]&&a[1]<=e[1]&&e[3]<=a[3]}function rr(a,e,t){return a[0]<=e&&e<=a[2]&&a[1]<=t&&t<=a[3]}function Qi(a,e){const t=a[0],n=a[1],i=a[2],l=a[3],o=e[0],r=e[1];let s=Me.UNKNOWN;return o<t?s=s|Me.LEFT:o>i&&(s=s|Me.RIGHT),r<n?s=s|Me.BELOW:r>l&&(s=s|Me.ABOVE),s===Me.UNKNOWN&&(s=Me.INTERSECTING),s}function nt(){return[1/0,1/0,-1/0,-1/0]}function Zt(a,e,t,n,i){return i?(i[0]=a,i[1]=e,i[2]=t,i[3]=n,i):[a,e,t,n]}function ri(a){return Zt(1/0,1/0,-1/0,-1/0,a)}function sr(a,e){const t=a[0],n=a[1];return Zt(t,n,t,n,e)}function kl(a,e,t,n,i){const l=ri(i);return hr(l,a,e,t,n)}function ua(a,e){return a[0]==e[0]&&a[2]==e[2]&&a[1]==e[1]&&a[3]==e[3]}function Ps(a,e){return e[0]<a[0]&&(a[0]=e[0]),e[2]>a[2]&&(a[2]=e[2]),e[1]<a[1]&&(a[1]=e[1]),e[3]>a[3]&&(a[3]=e[3]),a}function ra(a,e){e[0]<a[0]&&(a[0]=e[0]),e[0]>a[2]&&(a[2]=e[0]),e[1]<a[1]&&(a[1]=e[1]),e[1]>a[3]&&(a[3]=e[1])}function hr(a,e,t,n,i){for(;t<n;t+=i)Ds(a,e[t],e[t+1]);return a}function Ds(a,e,t){a[0]=Math.min(a[0],e),a[1]=Math.min(a[1],t),a[2]=Math.max(a[2],e),a[3]=Math.max(a[3],t)}function cr(a,e){let t;return t=e(si(a)),t||(t=e(hi(a)),t)||(t=e(ci(a)),t)||(t=e(Sn(a)),t)?t:!1}function $i(a){let e=0;return ui(a)||(e=se(a)*be(a)),e}function si(a){return[a[0],a[1]]}function hi(a){return[a[2],a[1]]}function un(a){return[(a[0]+a[2])/2,(a[1]+a[3])/2]}function Os(a,e){let t;if(e==="bottom-left")t=si(a);else if(e==="bottom-right")t=hi(a);else if(e==="top-left")t=Sn(a);else if(e==="top-right")t=ci(a);else throw new Error("Invalid corner");return t}function el(a,e,t,n,i){const[l,o,r,s,h,c,u,d]=ur(a,e,t,n);return Zt(Math.min(l,r,h,u),Math.min(o,s,c,d),Math.max(l,r,h,u),Math.max(o,s,c,d),i)}function ur(a,e,t,n){const i=e*n[0]/2,l=e*n[1]/2,o=Math.cos(t),r=Math.sin(t),s=i*o,h=i*r,c=l*o,u=l*r,d=a[0],m=a[1];return[d-s+u,m-h-c,d-s-u,m-h+c,d+s-u,m+h+c,d+s+u,m+h-c,d-s+u,m-h-c]}function be(a){return a[3]-a[1]}function hn(a,e,t){const n=t||nt();return ve(a,e)?(a[0]>e[0]?n[0]=a[0]:n[0]=e[0],a[1]>e[1]?n[1]=a[1]:n[1]=e[1],a[2]<e[2]?n[2]=a[2]:n[2]=e[2],a[3]<e[3]?n[3]=a[3]:n[3]=e[3]):ri(n),n}function Sn(a){return[a[0],a[3]]}function ci(a){return[a[2],a[3]]}function se(a){return a[2]-a[0]}function ve(a,e){return a[0]<=e[2]&&a[2]>=e[0]&&a[1]<=e[3]&&a[3]>=e[1]}function ui(a){return a[2]<a[0]||a[3]<a[1]}function xs(a,e){return e?(e[0]=a[0],e[1]=a[1],e[2]=a[2],e[3]=a[3],e):a}function vs(a,e,t){let n=!1;const i=Qi(a,e),l=Qi(a,t);if(i===Me.INTERSECTING||l===Me.INTERSECTING)n=!0;else{const o=a[0],r=a[1],s=a[2],h=a[3],c=e[0],u=e[1],d=t[0],m=t[1],y=(m-u)/(d-c);let k,S;l&Me.ABOVE&&!(i&Me.ABOVE)&&(k=d-(m-h)/y,n=k>=o&&k<=s),!n&&l&Me.RIGHT&&!(i&Me.RIGHT)&&(S=m-(d-s)*y,n=S>=r&&S<=h),!n&&l&Me.BELOW&&!(i&Me.BELOW)&&(k=d-(m-r)/y,n=k>=o&&k<=s),!n&&l&Me.LEFT&&!(i&Me.LEFT)&&(S=m-(d-o)*y,n=S>=r&&S<=h)}return n}function dr(a,e){const t=e.getExtent(),n=un(a);if(e.canWrapX()&&(n[0]<t[0]||n[0]>=t[2])){const i=se(t),o=Math.floor((n[0]-t[0])/i)*i;a[0]-=o,a[2]-=o}return a}function mr(a,e,t){if(e.canWrapX()){const n=e.getExtent();if(!isFinite(a[0])||!isFinite(a[2]))return[[n[0],a[1],n[2],a[3]]];dr(a,e);const i=se(n);if(se(a)>i&&!t)return[[n[0],a[1],n[2],a[3]]];if(a[0]<n[0])return[[a[0]+i,a[1],n[2],a[3]],[n[0],a[1],a[2],a[3]]];if(a[2]>n[2])return[[a[0],a[1],n[2],a[3]],[n[0],a[1],a[2]-i,a[3]]]}return[a]}function ye(a,e,t){return Math.min(Math.max(a,e),t)}function Ns(a,e,t,n,i,l){const o=i-t,r=l-n;if(o!==0||r!==0){const s=((a-t)*o+(e-n)*r)/(o*o+r*r);s>1?(t=i,n=l):s>0&&(t+=o*s,n+=r*s)}return bn(a,e,t,n)}function bn(a,e,t,n){const i=t-a,l=n-e;return i*i+l*l}function Hs(a){const e=a.length;for(let n=0;n<e;n++){let i=n,l=Math.abs(a[n][n]);for(let r=n+1;r<e;r++){const s=Math.abs(a[r][n]);s>l&&(l=s,i=r)}if(l===0)return null;const o=a[i];a[i]=a[n],a[n]=o;for(let r=n+1;r<e;r++){const s=-a[r][n]/a[n][n];for(let h=n;h<e+1;h++)n==h?a[r][h]=0:a[r][h]+=s*a[n][h]}}const t=new Array(e);for(let n=e-1;n>=0;n--){t[n]=a[n][e]/a[n][n];for(let i=n-1;i>=0;i--)a[i][e]-=a[i][n]*t[n]}return t}function Ql(a){return a*180/Math.PI}function Xt(a){return a*Math.PI/180}function cn(a,e){const t=a%e;return t*e<0?t+e:t}function Qe(a,e,t){return a+t*(e-a)}function di(a,e){const t=Math.pow(10,e);return Math.round(a*t)/t}function Ga(a,e){return Math.floor(di(a,e))}function Ba(a,e){return Math.ceil(di(a,e))}function tl(a,e,t){if(a>=e&&a<t)return a;const n=t-e;return((a-e)%n+n)%n+e}const Js=63710088e-1;function $l(a,e,t){t=t||Js;const n=Xt(a[1]),i=Xt(e[1]),l=(i-n)/2,o=Xt(e[0]-a[0])/2,r=Math.sin(l)*Math.sin(l)+Math.sin(o)*Math.sin(o)*Math.cos(n)*Math.cos(i);return 2*t*Math.atan2(Math.sqrt(r),Math.sqrt(1-r))}function yr(...a){console.warn(...a)}function Fs(a,e){return a[0]+=+e[0],a[1]+=+e[1],a}function Ya(a,e){let t=!0;for(let n=a.length-1;n>=0;--n)if(a[n]!=e[n]){t=!1;break}return t}function fl(a,e){const t=Math.cos(e),n=Math.sin(e),i=a[0]*t-a[1]*n,l=a[1]*t+a[0]*n;return a[0]=i,a[1]=l,a}function Ks(a,e){return a[0]*=e,a[1]*=e,a}function Sr(a,e){if(e.canWrapX()){const t=se(e.getExtent()),n=Ys(a,e,t);n&&(a[0]-=n*t)}return a}function Ys(a,e,t){const n=e.getExtent();let i=0;return e.canWrapX()&&(a[0]<n[0]||a[0]>n[2])&&(t=t||se(n),i=Math.floor((a[0]-n[0])/t)),i}const gl={radians:6370997/(2*Math.PI),degrees:2*Math.PI*6370997/360,ft:.3048,m:1,"us-ft":1200/3937};class Cl{constructor(e){this.code_=e.code,this.units_=e.units,this.extent_=e.extent!==void 0?e.extent:null,this.worldExtent_=e.worldExtent!==void 0?e.worldExtent:null,this.axisOrientation_=e.axisOrientation!==void 0?e.axisOrientation:"enu",this.global_=e.global!==void 0?e.global:!1,this.canWrapX_=!!(this.global_&&this.extent_),this.getPointResolutionFunc_=e.getPointResolution,this.defaultTileGrid_=null,this.metersPerUnit_=e.metersPerUnit}canWrapX(){return this.canWrapX_}getCode(){return this.code_}getExtent(){return this.extent_}getUnits(){return this.units_}getMetersPerUnit(){return this.metersPerUnit_||gl[this.units_]}getWorldExtent(){return this.worldExtent_}getAxisOrientation(){return this.axisOrientation_}isGlobal(){return this.global_}setGlobal(e){this.global_=e,this.canWrapX_=!!(e&&this.extent_)}getDefaultTileGrid(){return this.defaultTileGrid_}setDefaultTileGrid(e){this.defaultTileGrid_=e}setExtent(e){this.extent_=e,this.canWrapX_=!!(this.global_&&e)}setWorldExtent(e){this.worldExtent_=e}setGetPointResolution(e){this.getPointResolutionFunc_=e}getPointResolutionFunc(){return this.getPointResolutionFunc_}}const La=6378137,In=Math.PI*La,Vs=[-In,-In,In,In],Xs=[-180,-85,180,85],ba=La*Math.log(Math.tan(Math.PI/2));class Cn extends Cl{constructor(e){super({code:e,units:"m",extent:Vs,global:!0,worldExtent:Xs,getPointResolution:function(t,n){return t/Math.cosh(n[1]/La)}})}}const eo=[new Cn("EPSG:3857"),new Cn("EPSG:102100"),new Cn("EPSG:102113"),new Cn("EPSG:900913"),new Cn("http://www.opengis.net/def/crs/EPSG/0/3857"),new Cn("http://www.opengis.net/gml/srs/epsg.xml#3857")];function zs(a,e,t,n){const i=a.length;t=t>1?t:2,n=n??t,e===void 0&&(t>2?e=a.slice():e=new Array(i));for(let l=0;l<i;l+=n){e[l]=In*a[l]/180;let o=La*Math.log(Math.tan(Math.PI*(+a[l+1]+90)/360));o>ba?o=ba:o<-ba&&(o=-ba),e[l+1]=o}return e}function Zs(a,e,t,n){const i=a.length;t=t>1?t:2,n=n??t,e===void 0&&(t>2?e=a.slice():e=new Array(i));for(let l=0;l<i;l+=n)e[l]=180*a[l]/In,e[l+1]=360*Math.atan(Math.exp(a[l+1]/La))/Math.PI-90;return e}const qs=6378137,to=[-180,-90,180,90],js=Math.PI*qs/180;class tn extends Cl{constructor(e,t){super({code:e,units:"degrees",extent:to,axisOrientation:t,global:!0,metersPerUnit:js,worldExtent:to})}}const no=[new tn("CRS:84"),new tn("EPSG:4326","neu"),new tn("urn:ogc:def:crs:OGC:1.3:CRS84"),new tn("urn:ogc:def:crs:OGC:2:84"),new tn("http://www.opengis.net/def/crs/OGC/1.3/CRS84"),new tn("http://www.opengis.net/gml/srs/epsg.xml#4326","neu"),new tn("http://www.opengis.net/def/crs/EPSG/0/4326","neu")];let nl={};function Qs(a){return nl[a]||nl[a.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\w+)$/,"EPSG:$3")]||null}function $s(a,e){nl[a]=e}let Pn={};function da(a,e,t){const n=a.getCode(),i=e.getCode();n in Pn||(Pn[n]={}),Pn[n][i]=t}function Wi(a,e){return a in Pn&&e in Pn[a]?Pn[a][e]:null}const Va=.9996,tt=.00669438,mi=tt*tt,yi=mi*tt,ln=tt/(1-tt),ao=Math.sqrt(1-tt),Hn=(1-ao)/(1+ao),kr=Hn*Hn,Ul=kr*Hn,pl=Ul*Hn,fr=pl*Hn,gr=1-tt/4-3*mi/64-5*yi/256,e1=3*tt/8+3*mi/32+45*yi/1024,t1=15*mi/256+45*yi/1024,n1=35*yi/3072,a1=3/2*Hn-27/32*Ul+269/512*fr,i1=21/16*kr-55/32*pl,l1=151/96*Ul-417/128*fr,o1=1097/512*pl,Xa=6378137;function r1(a,e,t){const n=a-5e5,o=(t.north?e:e-1e7)/Va/(Xa*gr),r=o+a1*Math.sin(2*o)+i1*Math.sin(4*o)+l1*Math.sin(6*o)+o1*Math.sin(8*o),s=Math.sin(r),h=s*s,c=Math.cos(r),u=s/c,d=u*u,m=d*d,y=1-tt*h,k=Math.sqrt(1-tt*h),S=Xa/k,g=(1-tt)/y,f=ln*c**2,p=f*f,C=n/(S*Va),U=C*C,L=U*C,w=L*C,M=w*C,E=M*C,G=r-u/g*(U/2-w/24*(5+3*d+10*f-4*p-9*ln))+E/720*(61+90*d+298*f+45*m-252*ln-3*p);let P=(C-L/6*(1+2*d+f)+M/120*(5-2*f+28*d-3*p+8*ln+24*m))/c;return P=tl(P+Xt(Cr(t.number)),-Math.PI,Math.PI),[Ql(P),Ql(G)]}const io=-80,lo=84,s1=-180,h1=180;function c1(a,e,t){a=tl(a,s1,h1),e<io?e=io:e>lo&&(e=lo);const n=Xt(e),i=Math.sin(n),l=Math.cos(n),o=i/l,r=o*o,s=r*r,h=Xt(a),c=Cr(t.number),u=Xt(c),d=Xa/Math.sqrt(1-tt*i**2),m=ln*l**2,y=l*tl(h-u,-Math.PI,Math.PI),k=y*y,S=k*y,g=S*y,f=g*y,p=f*y,C=Xa*(gr*n-e1*Math.sin(2*n)+t1*Math.sin(4*n)-n1*Math.sin(6*n)),U=Va*d*(y+S/6*(1-r+m)+f/120*(5-18*r+s+72*m-58*ln))+5e5;let L=Va*(C+d*o*(k/2+g/24*(5-r+9*m+4*m**2)+p/720*(61-58*r+s+600*m-330*ln)));return t.north||(L+=1e7),[U,L]}function Cr(a){return(a-1)*6-180+3}const u1=[/^EPSG:(\d+)$/,/^urn:ogc:def:crs:EPSG::(\d+)$/,/^http:\/\/www\.opengis\.net\/def\/crs\/EPSG\/0\/(\d+)$/];function Ur(a){let e=0;for(const i of u1){const l=a.match(i);if(l){e=parseInt(l[1]);break}}if(!e)return null;let t=0,n=!1;return e>32700&&e<32761?t=e-32700:e>32600&&e<32661&&(n=!0,t=e-32600),t?{number:t,north:n}:null}function oo(a,e){return function(t,n,i,l){const o=t.length;i=i>1?i:2,l=l??i,n||(i>2?n=t.slice():n=new Array(o));for(let r=0;r<o;r+=l){const s=t[r],h=t[r+1],c=a(s,h,e);n[r]=c[0],n[r+1]=c[1]}return n}}function d1(a){return Ur(a)?new Cl({code:a,units:"m"}):null}function m1(a){const e=Ur(a.getCode());return e?{forward:oo(c1,e),inverse:oo(r1,e)}:null}const y1=[m1],S1=[d1];let al=!0;function pr(a){al=!1}function _l(a,e){if(e!==void 0){for(let t=0,n=a.length;t<n;++t)e[t]=a[t];e=e}else e=a.slice();return e}function il(a){$s(a.getCode(),a),da(a,a,_l)}function k1(a){a.forEach(il)}function Je(a){if(typeof a!="string")return a;const e=Qs(a);if(e)return e;for(const t of S1){const n=t(a);if(n)return n}return null}function ro(a,e,t,n){a=Je(a);let i;const l=a.getPointResolutionFunc();if(l)i=l(e,t);else{const o=a.getUnits();if(o=="degrees"||n=="degrees")i=e;else{const r=Ll(a,Je("EPSG:4326"));if(!r&&o!=="degrees")i=e*a.getMetersPerUnit();else{let h=[t[0]-e/2,t[1],t[0]+e/2,t[1],t[0],t[1]-e/2,t[0],t[1]+e/2];h=r(h,h,2);const c=$l(h.slice(0,2),h.slice(2,4)),u=$l(h.slice(4,6),h.slice(6,8));i=(c+u)/2}const s=a.getMetersPerUnit();s!==void 0&&(i/=s)}}return i}function so(a){k1(a),a.forEach(function(e){a.forEach(function(t){e!==t&&da(e,t,_l)})})}function f1(a,e,t,n){a.forEach(function(i){e.forEach(function(l){da(i,l,t),da(l,i,n)})})}function Ml(a,e){return a?typeof a=="string"?Je(a):a:Je(e)}function g1(a){return function(e,t,n,i){const l=e.length;n=n!==void 0?n:2,i=i??n,t=t!==void 0?t:new Array(l);for(let o=0;o<l;o+=i){const r=a(e.slice(o,o+n)),s=r.length;for(let h=0,c=i;h<c;++h)t[o+h]=h>=s?e[o+h]:r[h]}return t}}function Pa(a,e){return pr(),Si(a,"EPSG:4326","EPSG:3857")}function ho(a,e){const t=Si(a,"EPSG:3857","EPSG:4326"),n=t[0];return(n<-180||n>180)&&(t[0]=cn(n+180,360)-180),t}function Ti(a,e){if(a===e)return!0;const t=a.getUnits()===e.getUnits();return(a.getCode()===e.getCode()||Ll(a,e)===_l)&&t}function Ll(a,e){const t=a.getCode(),n=e.getCode();let i=Wi(t,n);if(i)return i;let l=null,o=null;for(const s of y1)l||(l=s(a)),o||(o=s(e));if(!l&&!o)return null;const r="EPSG:4326";if(o)if(l)i=wi(l.inverse,o.forward);else{const s=Wi(t,r);s&&(i=wi(s,o.forward))}else{const s=Wi(r,n);s&&(i=wi(l.inverse,s))}return i&&(il(a),il(e),da(a,e,i)),i}function wi(a,e){return function(t,n,i,l){return n=a(t,n,i,l),e(n,n,i,l)}}function za(a,e){const t=Je(a),n=Je(e);return Ll(t,n)}function Si(a,e,t){const n=za(e,t);if(!n){const i=Je(e).getCode(),l=Je(t).getCode();throw new Error(`No transform available between ${i} and ${l}`)}return n(a,void 0,a.length)}function ll(a,e){return a}function Tt(a,e){return al&&!Ya(a,[0,0])&&a[0]>=-180&&a[0]<=180&&a[1]>=-90&&a[1]<=90&&(al=!1,yr("Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.")),a}function _r(a,e){return a}function Yt(a,e){return a}function C1(){so(eo),so(no),f1(no,eo,zs,Zs)}C1();new Array(6);function ot(){return[1,0,0,1,0,0]}function U1(a,e){return a[0]=e[0],a[1]=e[1],a[2]=e[2],a[3]=e[3],a[4]=e[4],a[5]=e[5],a}function Le(a,e){const t=e[0],n=e[1];return e[0]=a[0]*t+a[2]*n+a[4],e[1]=a[1]*t+a[3]*n+a[5],e}function bt(a,e,t,n,i,l,o,r){const s=Math.sin(l),h=Math.cos(l);return a[0]=n*h,a[1]=i*s,a[2]=-n*s,a[3]=i*h,a[4]=o*n*h-r*n*s+e,a[5]=o*i*s+r*i*h+t,a}function Mr(a,e){const t=p1(e);oe(t!==0,"Transformation matrix cannot be inverted");const n=e[0],i=e[1],l=e[2],o=e[3],r=e[4],s=e[5];return a[0]=o/t,a[1]=-i/t,a[2]=-l/t,a[3]=n/t,a[4]=(l*s-o*r)/t,a[5]=-(n*s-i*r)/t,a}function p1(a){return a[0]*a[3]-a[1]*a[2]}const _1=[1e5,1e5,1e5,1e5,2,2];function M1(a){return"matrix("+a.join(", ")+")"}function co(a){return a.substring(7,a.length-1).split(",").map(parseFloat)}function L1(a,e){const t=co(a),n=co(e);for(let i=0;i<6;++i)if(Math.round((t[i]-n[i])*_1[i])!==0)return!1;return!0}function zt(a,e,t,n,i,l,o){l=l||[],o=o||2;let r=0;for(let s=e;s<t;s+=n){const h=a[s],c=a[s+1];l[r++]=i[0]*h+i[2]*c+i[4],l[r++]=i[1]*h+i[3]*c+i[5];for(let u=2;u<o;u++)l[r++]=a[s+u]}return l&&l.length!=r&&(l.length=r),l}function Lr(a,e,t,n,i,l,o){o=o||[];const r=Math.cos(i),s=Math.sin(i),h=l[0],c=l[1];let u=0;for(let d=e;d<t;d+=n){const m=a[d]-h,y=a[d+1]-c;o[u++]=h+m*r-y*s,o[u++]=c+m*s+y*r;for(let k=d+2;k<d+n;++k)o[u++]=a[k]}return o&&o.length!=u&&(o.length=u),o}function A1(a,e,t,n,i,l,o,r){r=r||[];const s=o[0],h=o[1];let c=0;for(let u=e;u<t;u+=n){const d=a[u]-s,m=a[u+1]-h;r[c++]=s+i*d,r[c++]=h+l*m;for(let y=u+2;y<u+n;++y)r[c++]=a[y]}return r&&r.length!=c&&(r.length=c),r}function W1(a,e,t,n,i,l,o){o=o||[];let r=0;for(let s=e;s<t;s+=n){o[r++]=a[s]+i,o[r++]=a[s+1]+l;for(let h=s+2;h<s+n;++h)o[r++]=a[h]}return o&&o.length!=r&&(o.length=r),o}const uo=ot(),T1=[NaN,NaN];class w1 extends st{constructor(){super(),this.extent_=nt(),this.extentRevision_=-1,this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=0,this.simplifyTransformedInternal=ir((e,t,n)=>{if(!n)return this.getSimplifiedGeometry(t);const i=this.clone();return i.applyTransform(n),i.getSimplifiedGeometry(t)})}simplifyTransformed(e,t){return this.simplifyTransformedInternal(this.getRevision(),e,t)}clone(){return te()}closestPointXY(e,t,n,i){return te()}containsXY(e,t){return this.closestPointXY(e,t,T1,Number.MIN_VALUE)===0}getClosestPoint(e,t){return t=t||[NaN,NaN],this.closestPointXY(e[0],e[1],t,1/0),t}intersectsCoordinate(e){return this.containsXY(e[0],e[1])}computeExtent(e){return te()}getExtent(e){if(this.extentRevision_!=this.getRevision()){const t=this.computeExtent(this.extent_);(isNaN(t[0])||isNaN(t[1]))&&ri(t),this.extentRevision_=this.getRevision()}return xs(this.extent_,e)}rotate(e,t){te()}scale(e,t,n){te()}simplify(e){return this.getSimplifiedGeometry(e*e)}getSimplifiedGeometry(e){return te()}getType(){return te()}applyTransform(e){te()}intersectsExtent(e){return te()}translate(e,t){te()}transform(e,t){const n=Je(e),i=n.getUnits()=="tile-pixels"?function(l,o,r){const s=n.getExtent(),h=n.getWorldExtent(),c=be(h)/be(s);bt(uo,h[0],h[3],c,-c,0,0,0);const u=zt(l,0,l.length,r,uo,o),d=za(n,t);return d?d(u,u,r):u}:za(n,t);return this.applyTransform(i),this}}class Al extends w1{constructor(){super(),this.layout="XY",this.stride=2,this.flatCoordinates}computeExtent(e){return kl(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,e)}getCoordinates(){return te()}getFirstCoordinate(){return this.flatCoordinates.slice(0,this.stride)}getFlatCoordinates(){return this.flatCoordinates}getLastCoordinate(){return this.flatCoordinates.slice(this.flatCoordinates.length-this.stride)}getLayout(){return this.layout}getSimplifiedGeometry(e){if(this.simplifiedGeometryRevision!==this.getRevision()&&(this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),e<0||this.simplifiedGeometryMaxMinSquaredTolerance!==0&&e<=this.simplifiedGeometryMaxMinSquaredTolerance)return this;const t=this.getSimplifiedGeometryInternal(e);return t.getFlatCoordinates().length<this.flatCoordinates.length?t:(this.simplifiedGeometryMaxMinSquaredTolerance=e,this)}getSimplifiedGeometryInternal(e){return this}getStride(){return this.stride}setFlatCoordinates(e,t){this.stride=mo(e),this.layout=e,this.flatCoordinates=t}setCoordinates(e,t){te()}setLayout(e,t,n){let i;if(e)i=mo(e);else{for(let l=0;l<n;++l){if(t.length===0){this.layout="XY",this.stride=2;return}t=t[0]}i=t.length,e=E1(i)}this.layout=e,this.stride=i}applyTransform(e){this.flatCoordinates&&(e(this.flatCoordinates,this.flatCoordinates,this.layout.startsWith("XYZ")?3:2,this.stride),this.changed())}rotate(e,t){const n=this.getFlatCoordinates();if(n){const i=this.getStride();Lr(n,0,n.length,i,e,t,n),this.changed()}}scale(e,t,n){t===void 0&&(t=e),n||(n=un(this.getExtent()));const i=this.getFlatCoordinates();if(i){const l=this.getStride();A1(i,0,i.length,l,e,t,n,i),this.changed()}}translate(e,t){const n=this.getFlatCoordinates();if(n){const i=this.getStride();W1(n,0,n.length,i,e,t,n),this.changed()}}}function E1(a){let e;return a==2?e="XY":a==3?e="XYZ":a==4&&(e="XYZM"),e}function mo(a){let e;return a=="XY"?e=2:a=="XYZ"||a=="XYM"?e=3:a=="XYZM"&&(e=4),e}function R1(a,e,t){const n=a.getFlatCoordinates();if(!n)return null;const i=a.getStride();return zt(n,0,n.length,i,e,t)}function Ar(a,e,t,n){let i=0;const l=a[t-n],o=a[t-n+1];let r=0,s=0;for(;e<t;e+=n){const h=a[e]-l,c=a[e+1]-o;i+=s*h-r*c,r=h,s=c}return i/2}function I1(a,e,t,n){let i=0;for(let l=0,o=t.length;l<o;++l){const r=t[l];i+=Ar(a,e,r,n),e=r}return i}function yo(a,e,t,n,i,l,o){const r=a[e],s=a[e+1],h=a[t]-r,c=a[t+1]-s;let u;if(h===0&&c===0)u=e;else{const d=((i-r)*h+(l-s)*c)/(h*h+c*c);if(d>1)u=t;else if(d>0){for(let m=0;m<n;++m)o[m]=Qe(a[e+m],a[t+m],d);o.length=n;return}else u=e}for(let d=0;d<n;++d)o[d]=a[u+d];o.length=n}function Wr(a,e,t,n,i){let l=a[e],o=a[e+1];for(e+=n;e<t;e+=n){const r=a[e],s=a[e+1],h=bn(l,o,r,s);h>i&&(i=h),l=r,o=s}return i}function G1(a,e,t,n,i){for(let l=0,o=t.length;l<o;++l){const r=t[l];i=Wr(a,e,r,n,i),e=r}return i}function Tr(a,e,t,n,i,l,o,r,s,h,c){if(e==t)return h;let u,d;if(i===0){if(d=bn(o,r,a[e],a[e+1]),d<h){for(u=0;u<n;++u)s[u]=a[e+u];return s.length=n,d}return h}c=c||[NaN,NaN];let m=e+n;for(;m<t;)if(yo(a,m-n,m,n,o,r,c),d=bn(o,r,c[0],c[1]),d<h){for(h=d,u=0;u<n;++u)s[u]=c[u];s.length=n,m+=n}else m+=n*Math.max((Math.sqrt(d)-Math.sqrt(h))/i|0,1);if(yo(a,t-n,e,n,o,r,c),d=bn(o,r,c[0],c[1]),d<h){for(h=d,u=0;u<n;++u)s[u]=c[u];s.length=n}return h}function B1(a,e,t,n,i,l,o,r,s,h,c){c=c||[NaN,NaN];for(let u=0,d=t.length;u<d;++u){const m=t[u];h=Tr(a,e,m,n,i,l,o,r,s,h,c),e=m}return h}function b1(a,e,t,n){for(let i=0,l=t.length;i<l;++i)a[e++]=t[i];return e}function wr(a,e,t,n){for(let i=0,l=t.length;i<l;++i){const o=t[i];for(let r=0;r<n;++r)a[e++]=o[r]}return e}function P1(a,e,t,n,i){i=i||[];let l=0;for(let o=0,r=t.length;o<r;++o){const s=wr(a,e,t[o],n);i[l++]=s,e=s}return i.length=l,i}function Gn(a,e,t,n,i){i=i!==void 0?i:[];let l=0;for(let o=e;o<t;o+=n)i[l++]=a.slice(o,o+n);return i.length=l,i}function Za(a,e,t,n,i){i=i!==void 0?i:[];let l=0;for(let o=0,r=t.length;o<r;++o){const s=t[o];i[l++]=Gn(a,e,s,n,i[l]),e=s}return i.length=l,i}function So(a,e,t,n,i){i=i!==void 0?i:[];let l=0;for(let o=0,r=t.length;o<r;++o){const s=t[o];i[l++]=s.length===1&&s[0]===e?[]:Za(a,e,s,n,i[l]),e=s[s.length-1]}return i.length=l,i}function Wl(a,e,t,n,i,l,o){const r=(t-e)/n;if(r<3){for(;e<t;e+=n)l[o++]=a[e],l[o++]=a[e+1];return o}const s=new Array(r);s[0]=1,s[r-1]=1;const h=[e,t-n];let c=0;for(;h.length>0;){const u=h.pop(),d=h.pop();let m=0;const y=a[d],k=a[d+1],S=a[u],g=a[u+1];for(let f=d+n;f<u;f+=n){const p=a[f],C=a[f+1],U=Ns(p,C,y,k,S,g);U>m&&(c=f,m=U)}m>i&&(s[(c-e)/n]=1,d+n<c&&h.push(d,c),c+n<u&&h.push(c,u))}for(let u=0;u<r;++u)s[u]&&(l[o++]=a[e+u*n],l[o++]=a[e+u*n+1]);return o}function D1(a,e,t,n,i,l,o,r){for(let s=0,h=t.length;s<h;++s){const c=t[s];o=Wl(a,e,c,n,i,l,o),r.push(o),e=c}return o}function an(a,e){return e*Math.round(a/e)}function O1(a,e,t,n,i,l,o){if(e==t)return o;let r=an(a[e],i),s=an(a[e+1],i);e+=n,l[o++]=r,l[o++]=s;let h,c;do if(h=an(a[e],i),c=an(a[e+1],i),e+=n,e==t)return l[o++]=h,l[o++]=c,o;while(h==r&&c==s);for(;e<t;){const u=an(a[e],i),d=an(a[e+1],i);if(e+=n,u==h&&d==c)continue;const m=h-r,y=c-s,k=u-r,S=d-s;if(m*S==y*k&&(m<0&&k<m||m==k||m>0&&k>m)&&(y<0&&S<y||y==S||y>0&&S>y)){h=u,c=d;continue}l[o++]=h,l[o++]=c,r=h,s=c,h=u,c=d}return l[o++]=h,l[o++]=c,o}function Er(a,e,t,n,i,l,o,r){for(let s=0,h=t.length;s<h;++s){const c=t[s];o=O1(a,e,c,n,i,l,o),r.push(o),e=c}return o}class ma extends Al{constructor(e,t){super(),this.maxDelta_=-1,this.maxDeltaRevision_=-1,t!==void 0&&!Array.isArray(e[0])?this.setFlatCoordinates(t,e):this.setCoordinates(e,t)}clone(){return new ma(this.flatCoordinates.slice(),this.layout)}closestPointXY(e,t,n,i){return i<or(this.getExtent(),e,t)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(Wr(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),Tr(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,this.maxDelta_,!0,e,t,n,i))}getArea(){return Ar(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getCoordinates(){return Gn(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getSimplifiedGeometryInternal(e){const t=[];return t.length=Wl(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,e,t,0),new ma(t,"XY")}getType(){return"LinearRing"}intersectsExtent(e){return!1}setCoordinates(e,t){this.setLayout(t,e,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=wr(this.flatCoordinates,0,e,this.stride),this.changed()}}class ya extends Al{constructor(e,t){super(),this.setCoordinates(e,t)}clone(){const e=new ya(this.flatCoordinates.slice(),this.layout);return e.applyProperties(this),e}closestPointXY(e,t,n,i){const l=this.flatCoordinates,o=bn(e,t,l[0],l[1]);if(o<i){const r=this.stride;for(let s=0;s<r;++s)n[s]=l[s];return n.length=r,o}return i}getCoordinates(){return this.flatCoordinates.slice()}computeExtent(e){return sr(this.flatCoordinates,e)}getType(){return"Point"}intersectsExtent(e){return rr(e,this.flatCoordinates[0],this.flatCoordinates[1])}setCoordinates(e,t){this.setLayout(t,e,0),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=b1(this.flatCoordinates,0,e,this.stride),this.changed()}}function x1(a,e,t,n,i){return!cr(i,function(o){return!on(a,e,t,n,o[0],o[1])})}function on(a,e,t,n,i,l){let o=0,r=a[t-n],s=a[t-n+1];for(;e<t;e+=n){const h=a[e],c=a[e+1];s<=l?c>l&&(h-r)*(l-s)-(i-r)*(c-s)>0&&o++:c<=l&&(h-r)*(l-s)-(i-r)*(c-s)<0&&o--,r=h,s=c}return o!==0}function Rr(a,e,t,n,i,l){if(t.length===0||!on(a,e,t[0],n,i,l))return!1;for(let o=1,r=t.length;o<r;++o)if(on(a,t[o-1],t[o],n,i,l))return!1;return!0}function Tl(a,e,t,n,i,l,o){let r,s,h,c,u,d,m;const y=i[l+1],k=[];for(let f=0,p=t.length;f<p;++f){const C=t[f];for(c=a[C-n],d=a[C-n+1],r=e;r<C;r+=n)u=a[r],m=a[r+1],(y<=d&&m<=y||d<=y&&y<=m)&&(h=(y-d)/(m-d)*(u-c)+c,k.push(h)),c=u,d=m}let S=NaN,g=-1/0;for(k.sort(It),c=k[0],r=1,s=k.length;r<s;++r){u=k[r];const f=Math.abs(u-c);f>g&&(h=(c+u)/2,Rr(a,e,t,n,h,y)&&(S=h,g=f)),c=u}return isNaN(S)&&(S=i[l]),o?(o.push(S,y,g),o):[S,y,g]}function v1(a,e,t,n,i){let l=[];for(let o=0,r=t.length;o<r;++o){const s=t[o];l=Tl(a,e,s,n,i,2*o,l),e=s[s.length-1]}return l}function N1(a,e,t,n,i){let l;for(e+=n;e<t;e+=n)if(l=i(a.slice(e-n,e),a.slice(e,e+n)),l)return l;return!1}function Ir(a,e,t,n,i,l){return l=l??hr(nt(),a,e,t,n),ve(i,l)?l[0]>=i[0]&&l[2]<=i[2]||l[1]>=i[1]&&l[3]<=i[3]?!0:N1(a,e,t,n,function(o,r){return vs(i,o,r)}):!1}function Gr(a,e,t,n,i){return!!(Ir(a,e,t,n,i)||on(a,e,t,n,i[0],i[1])||on(a,e,t,n,i[0],i[3])||on(a,e,t,n,i[2],i[1])||on(a,e,t,n,i[2],i[3]))}function H1(a,e,t,n,i){if(!Gr(a,e,t[0],n,i))return!1;if(t.length===1)return!0;for(let l=1,o=t.length;l<o;++l)if(x1(a,t[l-1],t[l],n,i)&&!Ir(a,t[l-1],t[l],n,i))return!1;return!0}function J1(a,e,t,n){for(;e<t-n;){for(let i=0;i<n;++i){const l=a[e+i];a[e+i]=a[t-n+i],a[t-n+i]=l}e+=n,t-=n}}function wl(a,e,t,n){let i=0,l=a[t-n],o=a[t-n+1];for(;e<t;e+=n){const r=a[e],s=a[e+1];i+=(r-l)*(s+o),l=r,o=s}return i===0?void 0:i>0}function F1(a,e,t,n,i){i=i!==void 0?i:!1;for(let l=0,o=t.length;l<o;++l){const r=t[l],s=wl(a,e,r,n);if(l===0){if(i&&s||!i&&!s)return!1}else if(i&&!s||!i&&s)return!1;e=r}return!0}function ko(a,e,t,n,i){i=i!==void 0?i:!1;for(let l=0,o=t.length;l<o;++l){const r=t[l],s=wl(a,e,r,n);(l===0?i&&s||!i&&!s:i&&!s||!i&&s)&&J1(a,e,r,n),e=r}return e}function K1(a,e){const t=[];let n=0,i=0,l;for(let o=0,r=e.length;o<r;++o){const s=e[o],h=wl(a,n,s,2);if(l===void 0&&(l=h),h===l)t.push(e.slice(i,o+1));else{if(t.length===0)continue;t[t.length-1].push(e[i])}i=o+1,n=s}return t}class Sa extends Al{constructor(e,t,n){super(),this.ends_=[],this.flatInteriorPointRevision_=-1,this.flatInteriorPoint_=null,this.maxDelta_=-1,this.maxDeltaRevision_=-1,this.orientedRevision_=-1,this.orientedFlatCoordinates_=null,t!==void 0&&n?(this.setFlatCoordinates(t,e),this.ends_=n):this.setCoordinates(e,t)}appendLinearRing(e){this.flatCoordinates?yl(this.flatCoordinates,e.getFlatCoordinates()):this.flatCoordinates=e.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()}clone(){const e=new Sa(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return e.applyProperties(this),e}closestPointXY(e,t,n,i){return i<or(this.getExtent(),e,t)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(G1(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),B1(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!0,e,t,n,i))}containsXY(e,t){return Rr(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,e,t)}getArea(){return I1(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride)}getCoordinates(e){let t;return e!==void 0?(t=this.getOrientedFlatCoordinates().slice(),ko(t,0,this.ends_,this.stride,e)):t=this.flatCoordinates,Za(t,0,this.ends_,this.stride)}getEnds(){return this.ends_}getFlatInteriorPoint(){if(this.flatInteriorPointRevision_!=this.getRevision()){const e=un(this.getExtent());this.flatInteriorPoint_=Tl(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,e,0),this.flatInteriorPointRevision_=this.getRevision()}return this.flatInteriorPoint_}getInteriorPoint(){return new ya(this.getFlatInteriorPoint(),"XYM")}getLinearRingCount(){return this.ends_.length}getLinearRing(e){return e<0||this.ends_.length<=e?null:new ma(this.flatCoordinates.slice(e===0?0:this.ends_[e-1],this.ends_[e]),this.layout)}getLinearRings(){const e=this.layout,t=this.flatCoordinates,n=this.ends_,i=[];let l=0;for(let o=0,r=n.length;o<r;++o){const s=n[o],h=new ma(t.slice(l,s),e);i.push(h),l=s}return i}getOrientedFlatCoordinates(){if(this.orientedRevision_!=this.getRevision()){const e=this.flatCoordinates;F1(e,0,this.ends_,this.stride)?this.orientedFlatCoordinates_=e:(this.orientedFlatCoordinates_=e.slice(),this.orientedFlatCoordinates_.length=ko(this.orientedFlatCoordinates_,0,this.ends_,this.stride)),this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_}getSimplifiedGeometryInternal(e){const t=[],n=[];return t.length=Er(this.flatCoordinates,0,this.ends_,this.stride,Math.sqrt(e),t,0,n),new Sa(t,"XY",n)}getType(){return"Polygon"}intersectsExtent(e){return H1(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,e)}setCoordinates(e,t){this.setLayout(t,e,2),this.flatCoordinates||(this.flatCoordinates=[]);const n=P1(this.flatCoordinates,0,e,this.stride,this.ends_);this.flatCoordinates.length=n.length===0?0:n[n.length-1],this.changed()}}function fo(a){if(ui(a))throw new Error("Cannot create polygon from empty extent");const e=a[0],t=a[1],n=a[2],i=a[3],l=[e,t,e,i,n,i,n,t,e,t];return new Sa(l,"XY",[l.length])}function go(a,e,t,n,i,l,o){let r,s;const h=(t-e)/n;if(h===1)r=e;else if(h===2)r=e,s=i;else if(h!==0){let c=a[e],u=a[e+1],d=0;const m=[0];for(let S=e+n;S<t;S+=n){const g=a[S],f=a[S+1];d+=Math.sqrt((g-c)*(g-c)+(f-u)*(f-u)),m.push(d),c=g,u=f}const y=i*d,k=Ts(m,y);k<0?(s=(y-m[-k-2])/(m[-k-1]-m[-k-2]),r=e+(-k-2)*n):r=e+k*n}o=o>1?o:2,l=l||new Array(o);for(let c=0;c<o;++c)l[c]=r===void 0?NaN:s===void 0?a[r+c]:Qe(a[r+c],a[r+n+c],s);return l}function Y1(a,e,t,n){let i=a[e],l=a[e+1],o=0;for(let r=e+n;r<t;r+=n){const s=a[r],h=a[r+1];o+=Math.sqrt((s-i)*(s-i)+(h-l)*(h-l)),i=s,l=h}return o}const $e={PRERENDER:"prerender",POSTRENDER:"postrender",PRECOMPOSE:"precompose",POSTCOMPOSE:"postcompose",RENDERCOMPLETE:"rendercomplete"},dn=typeof navigator<"u"&&typeof navigator.userAgent<"u"?navigator.userAgent.toLowerCase():"",V1=dn.includes("safari")&&!dn.includes("chrom");V1&&(dn.includes("version/15.4")||/cpu (os|iphone os) 15_4 like mac os x/.test(dn));const X1=dn.includes("webkit")&&!dn.includes("edge"),Br=dn.includes("macintosh"),z1=typeof devicePixelRatio<"u"?devicePixelRatio:1,br=typeof WorkerGlobalScope<"u"&&typeof OffscreenCanvas<"u"&&self instanceof WorkerGlobalScope,Pr=typeof Image<"u"&&Image.prototype.decode,Dr=function(){let a=!1;try{const e=Object.defineProperty({},"passive",{get:function(){a=!0}});window.addEventListener("_",null,e),window.removeEventListener("_",null,e)}catch{}return a}(),j={IDLE:0,LOADING:1,LOADED:2,ERROR:3};function pe(a,e,t,n){let i;return t&&t.length?i=t.shift():br?i=new OffscreenCanvas(a||300,e||300):i=document.createElement("canvas"),a&&(i.width=a),e&&(i.height=e),i.getContext("2d",n)}let Ei;function qa(){return Ei||(Ei=pe(1,1)),Ei}function ki(a){const e=a.canvas;e.width=1,e.height=1,a.clearRect(0,0,1,1)}function Z1(a){let e=a.offsetWidth;const t=getComputedStyle(a);return e+=parseInt(t.marginLeft,10)+parseInt(t.marginRight,10),e}function q1(a){let e=a.offsetHeight;const t=getComputedStyle(a);return e+=parseInt(t.marginTop,10)+parseInt(t.marginBottom,10),e}function Co(a,e){const t=e.parentNode;t&&t.replaceChild(a,e)}function Or(a){for(;a.lastChild;)a.lastChild.remove()}function j1(a,e){const t=a.childNodes;for(let n=0;;++n){const i=t[n],l=e[n];if(!i&&!l)break;if(i!==l){if(!i){a.appendChild(l);continue}if(!l){a.removeChild(i),--n;continue}a.insertBefore(l,i)}}}const El=[NaN,NaN,NaN,0];let Ri;function Q1(){return Ri||(Ri=pe(1,1,void 0,{willReadFrequently:!0,desynchronized:!0})),Ri}const $1=/^rgba?\(\s*(\d+%?)\s+(\d+%?)\s+(\d+%?)(?:\s*\/\s*(\d+%|\d*\.\d+|[01]))?\s*\)$/i,eh=/^rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)(?:\s*,\s*(\d+%|\d*\.\d+|[01]))?\s*\)$/i,th=/^rgba?\(\s*(\d+%)\s*,\s*(\d+%)\s*,\s*(\d+%)(?:\s*,\s*(\d+%|\d*\.\d+|[01]))?\s*\)$/i,nh=/^#([\da-f]{3,4}|[\da-f]{6}|[\da-f]{8})$/i;function Da(a,e){return a.endsWith("%")?Number(a.substring(0,a.length-1))/e:Number(a)}function sa(a){throw new Error('failed to parse "'+a+'" as color')}function xr(a){if(a.toLowerCase().startsWith("rgb")){const l=a.match(eh)||a.match($1)||a.match(th);if(l){const o=l[4],r=100/255;return[ye(Da(l[1],r)+.5|0,0,255),ye(Da(l[2],r)+.5|0,0,255),ye(Da(l[3],r)+.5|0,0,255),o!==void 0?ye(Da(o,100),0,1):1]}sa(a)}if(a.startsWith("#")){if(nh.test(a)){const l=a.substring(1),o=l.length<=4?1:2,r=[0,0,0,255];for(let s=0,h=l.length;s<h;s+=o){let c=parseInt(l.substring(s,s+o),16);o===1&&(c+=c<<4),r[s/o]=c}return r[3]=r[3]/255,r}sa(a)}const e=Q1();e.fillStyle="#abcdef";let t=e.fillStyle;e.fillStyle=a,e.fillStyle===t&&(e.fillStyle="#fedcba",t=e.fillStyle,e.fillStyle=a,e.fillStyle===t&&sa(a));const n=e.fillStyle;if(n.startsWith("#")||n.startsWith("rgba"))return xr(n);e.clearRect(0,0,1,1),e.fillRect(0,0,1,1);const i=Array.from(e.getImageData(0,0,1,1).data);return i[3]=di(i[3]/255,3),i}function ah(a){return typeof a=="string"?a:Il(a)}const ih=1024,qn={};let Ii=0;function lh(a){if(a.length===4)return a;const e=a.slice();return e[3]=1,e}function Gi(a){return a>.0031308?Math.pow(a,1/2.4)*269.025-14.025:a*3294.6}function Bi(a){return a>.2068965?Math.pow(a,3):(a-4/29)*(108/841)}function bi(a){return a>10.314724?Math.pow((a+14.025)/269.025,2.4):a/3294.6}function Pi(a){return a>.0088564?Math.pow(a,1/3):a/(108/841)+4/29}function Uo(a){const e=bi(a[0]),t=bi(a[1]),n=bi(a[2]),i=Pi(e*.222488403+t*.716873169+n*.06060791),l=500*(Pi(e*.452247074+t*.399439023+n*.148375274)-i),o=200*(i-Pi(e*.016863605+t*.117638439+n*.865350722)),r=Math.atan2(o,l)*(180/Math.PI);return[116*i-16,Math.sqrt(l*l+o*o),r<0?r+360:r,a[3]]}function oh(a){const e=(a[0]+16)/116,t=a[1],n=a[2]*Math.PI/180,i=Bi(e),l=Bi(e+t/500*Math.cos(n)),o=Bi(e-t/200*Math.sin(n)),r=Gi(l*3.021973625-i*1.617392459-o*.404875592),s=Gi(l*-.943766287+i*1.916279586+o*.027607165),h=Gi(l*.069407491-i*.22898585+o*1.159737864);return[ye(r+.5|0,0,255),ye(s+.5|0,0,255),ye(h+.5|0,0,255),a[3]]}function Rl(a){if(a==="none")return El;if(qn.hasOwnProperty(a))return qn[a];if(Ii>=ih){let t=0;for(const n in qn)(t++&3)===0&&(delete qn[n],--Ii)}const e=xr(a);e.length!==4&&sa(a);for(const t of e)isNaN(t)&&sa(a);return qn[a]=e,++Ii,e}function Jn(a){return Array.isArray(a)?a:Rl(a)}function Il(a){let e=a[0];e!=(e|0)&&(e=e+.5|0);let t=a[1];t!=(t|0)&&(t=t+.5|0);let n=a[2];n!=(n|0)&&(n=n+.5|0);const i=a[3]===void 0?1:Math.round(a[3]*1e3)/1e3;return"rgba("+e+","+t+","+n+","+i+")"}function rh(a,e,t){const n=a;let i=!0,l=!1,o=!1;const r=[Ka(n,z.LOAD,function(){o=!0,l||e()})];return n.src&&Pr?(l=!0,n.decode().then(function(){i&&e()}).catch(function(s){i&&(o?e():t())})):r.push(Ka(n,z.ERROR,t)),function(){i=!1,r.forEach(de)}}function sh(a,e){return new Promise((t,n)=>{function i(){o(),t(a)}function l(){o(),n(new Error("Image load error"))}function o(){a.removeEventListener("load",i),a.removeEventListener("error",l)}a.addEventListener("load",i),a.addEventListener("error",l)})}function hh(a,e){return e&&(a.src=e),a.src&&Pr?new Promise((t,n)=>a.decode().then(()=>t(a)).catch(i=>a.complete&&a.width?t(a):n(i))):sh(a)}class ch{constructor(){this.cache_={},this.patternCache_={},this.cacheSize_=0,this.maxCacheSize_=1024}clear(){this.cache_={},this.patternCache_={},this.cacheSize_=0}canExpireCache(){return this.cacheSize_>this.maxCacheSize_}expire(){if(this.canExpireCache()){let e=0;for(const t in this.cache_){const n=this.cache_[t];(e++&3)===0&&!n.hasListener()&&(delete this.cache_[t],delete this.patternCache_[t],--this.cacheSize_)}}}get(e,t,n){const i=Di(e,t,n);return i in this.cache_?this.cache_[i]:null}getPattern(e,t,n){const i=Di(e,t,n);return i in this.patternCache_?this.patternCache_[i]:null}set(e,t,n,i,l){const o=Di(e,t,n),r=o in this.cache_;this.cache_[o]=i,l&&(i.getImageState()===j.IDLE&&i.load(),i.getImageState()===j.LOADING?i.ready().then(()=>{this.patternCache_[o]=qa().createPattern(i.getImage(1),"repeat")}):this.patternCache_[o]=qa().createPattern(i.getImage(1),"repeat")),r||++this.cacheSize_}setSize(e){this.maxCacheSize_=e,this.expire()}}function Di(a,e,t){const n=t?Jn(t):"null";return e+":"+a+":"+n}const et=new ch;let jn=null;class vr extends oi{constructor(e,t,n,i,l){super(),this.hitDetectionImage_=null,this.image_=e,this.crossOrigin_=n,this.canvas_={},this.color_=l,this.imageState_=i===void 0?j.IDLE:i,this.size_=e&&e.width&&e.height?[e.width,e.height]:null,this.src_=t,this.tainted_,this.ready_=null}initializeImage_(){this.image_=new Image,this.crossOrigin_!==null&&(this.image_.crossOrigin=this.crossOrigin_)}isTainted_(){if(this.tainted_===void 0&&this.imageState_===j.LOADED){jn||(jn=pe(1,1,void 0,{willReadFrequently:!0})),jn.drawImage(this.image_,0,0);try{jn.getImageData(0,0,1,1),this.tainted_=!1}catch{jn=null,this.tainted_=!0}}return this.tainted_===!0}dispatchChangeEvent_(){this.dispatchEvent(z.CHANGE)}handleImageError_(){this.imageState_=j.ERROR,this.dispatchChangeEvent_()}handleImageLoad_(){this.imageState_=j.LOADED,this.size_=[this.image_.width,this.image_.height],this.dispatchChangeEvent_()}getImage(e){return this.image_||this.initializeImage_(),this.replaceColor_(e),this.canvas_[e]?this.canvas_[e]:this.image_}getPixelRatio(e){return this.replaceColor_(e),this.canvas_[e]?e:1}getImageState(){return this.imageState_}getHitDetectionImage(){if(this.image_||this.initializeImage_(),!this.hitDetectionImage_)if(this.isTainted_()){const e=this.size_[0],t=this.size_[1],n=pe(e,t);n.fillRect(0,0,e,t),this.hitDetectionImage_=n.canvas}else this.hitDetectionImage_=this.image_;return this.hitDetectionImage_}getSize(){return this.size_}getSrc(){return this.src_}load(){if(this.imageState_===j.IDLE){this.image_||this.initializeImage_(),this.imageState_=j.LOADING;try{this.src_!==void 0&&(this.image_.src=this.src_)}catch{this.handleImageError_()}this.image_ instanceof HTMLImageElement&&hh(this.image_,this.src_).then(e=>{this.image_=e,this.handleImageLoad_()}).catch(this.handleImageError_.bind(this))}}replaceColor_(e){if(!this.color_||this.canvas_[e]||this.imageState_!==j.LOADED)return;const t=this.image_,n=pe(Math.ceil(t.width*e),Math.ceil(t.height*e)),i=n.canvas;n.scale(e,e),n.drawImage(t,0,0),n.globalCompositeOperation="multiply",n.fillStyle=ah(this.color_),n.fillRect(0,0,i.width/e,i.height/e),n.globalCompositeOperation="destination-in",n.drawImage(t,0,0),this.canvas_[e]=i}ready(){return this.ready_||(this.ready_=new Promise(e=>{if(this.imageState_===j.LOADED||this.imageState_===j.ERROR)e();else{const t=()=>{(this.imageState_===j.LOADED||this.imageState_===j.ERROR)&&(this.removeEventListener(z.CHANGE,t),e())};this.addEventListener(z.CHANGE,t)}})),this.ready_}}function Gl(a,e,t,n,i,l){let o=e===void 0?void 0:et.get(e,t,i);return o||(o=new vr(a,a&&"src"in a?a.src||void 0:e,t,n,i),et.set(e,t,i,o,l)),l&&o&&!et.getPattern(e,t,i)&&et.set(e,t,i,o,l),o}function St(a){return a?Array.isArray(a)?Il(a):typeof a=="object"&&"src"in a?uh(a):a:null}function uh(a){if(!a.offset||!a.size)return et.getPattern(a.src,"anonymous",a.color);const e=a.src+":"+a.offset,t=et.getPattern(e,void 0,a.color);if(t)return t;const n=et.get(a.src,"anonymous",null);if(n.getImageState()!==j.LOADED)return null;const i=pe(a.size[0],a.size[1]);return i.drawImage(n.getImage(1),a.offset[0],a.offset[1],a.size[0],a.size[1],0,0,a.size[0],a.size[1]),Gl(i.canvas,e,void 0,j.LOADED,a.color,!0),et.getPattern(e,void 0,a.color)}class Nr{drawCustom(e,t,n,i,l){}drawGeometry(e){}setStyle(e){}drawCircle(e,t,n){}drawFeature(e,t,n){}drawGeometryCollection(e,t,n){}drawLineString(e,t,n){}drawMultiLineString(e,t,n){}drawMultiPoint(e,t,n){}drawMultiPolygon(e,t,n){}drawPoint(e,t,n){}drawPolygon(e,t,n){}drawText(e,t,n){}setFillStrokeStyle(e,t){}setImageStyle(e,t){}setTextStyle(e,t){}}const Oa="ol-hidden",dh="ol-selectable",fi="ol-unselectable",Bl="ol-control",po="ol-collapsed",mh=new RegExp(["^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)","(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)","(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)","(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?","(?:small|large)|medium|smaller|larger|[\\.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))","(?:\\s*\\/\\s*(normal|[\\.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])?))",`?\\s*([-,\\"\\'\\sa-z0-9]+?)\\s*$`].join(""),"i"),_o=["style","variant","weight","size","lineHeight","family"],Hr=function(a){const e=a.match(mh);if(!e)return null;const t={lineHeight:"normal",size:"1.2em",style:"normal",weight:"normal",variant:"normal"};for(let n=0,i=_o.length;n<i;++n){const l=e[n+1];l!==void 0&&(t[_o[n]]=l)}return t.families=t.family.split(/,\s?/),t},Jr="10px sans-serif",Oe="#000",Fn="round",Gt=[],Bt=0,Kn="round",ka=10,fa="#000",ga="center",ja="middle",rn=[0,0,0,0],Ca=1,wt=new st;let Wn=null,ol;const rl={},yh=function(){const e="32px ",t=["monospace","serif"],n=t.length,i="wmytzilWMYTZIL@#/&?$%10";let l,o;function r(h,c,u){let d=!0;for(let m=0;m<n;++m){const y=t[m];if(o=Qa(h+" "+c+" "+e+y,i),u!=y){const k=Qa(h+" "+c+" "+e+u+","+y,i);d=d&&k!=o}}return!!d}function s(){let h=!0;const c=wt.getKeys();for(let u=0,d=c.length;u<d;++u){const m=c[u];if(wt.get(m)<100){const[y,k,S]=m.split(`
`);r(y,k,S)?(_a(rl),Wn=null,ol=void 0,wt.set(m,100)):(wt.set(m,wt.get(m)+1,!0),h=!1)}}h&&(clearInterval(l),l=void 0)}return function(h){const c=Hr(h);if(!c)return;const u=c.families;for(let d=0,m=u.length;d<m;++d){const y=u[d],k=c.style+`
`+c.weight+`
`+y;wt.get(k)===void 0&&(wt.set(k,100,!0),r(c.style,c.weight,y)||(wt.set(k,0,!0),l===void 0&&(l=setInterval(s,32))))}}}(),Sh=function(){let a;return function(e){let t=rl[e];if(t==null){if(br){const n=Hr(e),i=Fr(e,"Žg");t=(isNaN(Number(n.lineHeight))?1.2:Number(n.lineHeight))*(i.actualBoundingBoxAscent+i.actualBoundingBoxDescent)}else a||(a=document.createElement("div"),a.innerHTML="M",a.style.minHeight="0",a.style.maxHeight="none",a.style.height="auto",a.style.padding="0",a.style.border="none",a.style.position="absolute",a.style.display="block",a.style.left="-99999px"),a.style.font=e,document.body.appendChild(a),t=a.offsetHeight,document.body.removeChild(a);rl[e]=t}return t}}();function Fr(a,e){return Wn||(Wn=pe(1,1)),a!=ol&&(Wn.font=a,ol=Wn.font),Wn.measureText(e)}function Qa(a,e){return Fr(a,e).width}function Mo(a,e,t){if(e in t)return t[e];const n=e.split(`
`).reduce((i,l)=>Math.max(i,Qa(a,l)),0);return t[e]=n,n}function kh(a,e){const t=[],n=[],i=[];let l=0,o=0,r=0,s=0;for(let h=0,c=e.length;h<=c;h+=2){const u=e[h];if(u===`
`||h===c){l=Math.max(l,o),i.push(o),o=0,r+=s,s=0;continue}const d=e[h+1]||a.font,m=Qa(d,u);t.push(m),o+=m;const y=Sh(d);n.push(y),s=Math.max(s,y)}return{width:l,height:r,widths:t,heights:n,lineWidths:i}}function fh(a,e,t,n,i,l,o,r,s,h,c){a.save(),t!==1&&(a.globalAlpha===void 0?a.globalAlpha=u=>u.globalAlpha*=t:a.globalAlpha*=t),e&&a.transform.apply(a,e),n.contextInstructions?(a.translate(s,h),a.scale(c[0],c[1]),gh(n,a)):c[0]<0||c[1]<0?(a.translate(s,h),a.scale(c[0],c[1]),a.drawImage(n,i,l,o,r,0,0,o,r)):a.drawImage(n,i,l,o,r,s,h,o*c[0],r*c[1]),a.restore()}function gh(a,e){const t=a.contextInstructions;for(let n=0,i=t.length;n<i;n+=2)Array.isArray(t[n+1])?e[t[n]].apply(e,t[n+1]):e[t[n]]=t[n+1]}class Ch extends Nr{constructor(e,t,n,i,l,o,r){super(),this.context_=e,this.pixelRatio_=t,this.extent_=n,this.transform_=i,this.transformRotation_=i?di(Math.atan2(i[1],i[0]),10):0,this.viewRotation_=l,this.squaredTolerance_=o,this.userTransform_=r,this.contextFillState_=null,this.contextStrokeState_=null,this.contextTextState_=null,this.fillState_=null,this.strokeState_=null,this.image_=null,this.imageAnchorX_=0,this.imageAnchorY_=0,this.imageHeight_=0,this.imageOpacity_=0,this.imageOriginX_=0,this.imageOriginY_=0,this.imageRotateWithView_=!1,this.imageRotation_=0,this.imageScale_=[0,0],this.imageWidth_=0,this.text_="",this.textOffsetX_=0,this.textOffsetY_=0,this.textRotateWithView_=!1,this.textRotation_=0,this.textScale_=[0,0],this.textFillState_=null,this.textStrokeState_=null,this.textState_=null,this.pixelCoordinates_=[],this.tmpLocalTransform_=ot()}drawImages_(e,t,n,i){if(!this.image_)return;const l=zt(e,t,n,i,this.transform_,this.pixelCoordinates_),o=this.context_,r=this.tmpLocalTransform_,s=o.globalAlpha;this.imageOpacity_!=1&&(o.globalAlpha=s*this.imageOpacity_);let h=this.imageRotation_;this.transformRotation_===0&&(h-=this.viewRotation_),this.imageRotateWithView_&&(h+=this.viewRotation_);for(let c=0,u=l.length;c<u;c+=2){const d=l[c]-this.imageAnchorX_,m=l[c+1]-this.imageAnchorY_;if(h!==0||this.imageScale_[0]!=1||this.imageScale_[1]!=1){const y=d+this.imageAnchorX_,k=m+this.imageAnchorY_;bt(r,y,k,1,1,h,-y,-k),o.save(),o.transform.apply(o,r),o.translate(y,k),o.scale(this.imageScale_[0],this.imageScale_[1]),o.drawImage(this.image_,this.imageOriginX_,this.imageOriginY_,this.imageWidth_,this.imageHeight_,-this.imageAnchorX_,-this.imageAnchorY_,this.imageWidth_,this.imageHeight_),o.restore()}else o.drawImage(this.image_,this.imageOriginX_,this.imageOriginY_,this.imageWidth_,this.imageHeight_,d,m,this.imageWidth_,this.imageHeight_)}this.imageOpacity_!=1&&(o.globalAlpha=s)}drawText_(e,t,n,i){if(!this.textState_||this.text_==="")return;this.textFillState_&&this.setContextFillState_(this.textFillState_),this.textStrokeState_&&this.setContextStrokeState_(this.textStrokeState_),this.setContextTextState_(this.textState_);const l=zt(e,t,n,i,this.transform_,this.pixelCoordinates_),o=this.context_;let r=this.textRotation_;for(this.transformRotation_===0&&(r-=this.viewRotation_),this.textRotateWithView_&&(r+=this.viewRotation_);t<n;t+=i){const s=l[t]+this.textOffsetX_,h=l[t+1]+this.textOffsetY_;r!==0||this.textScale_[0]!=1||this.textScale_[1]!=1?(o.save(),o.translate(s-this.textOffsetX_,h-this.textOffsetY_),o.rotate(r),o.translate(this.textOffsetX_,this.textOffsetY_),o.scale(this.textScale_[0],this.textScale_[1]),this.textStrokeState_&&o.strokeText(this.text_,0,0),this.textFillState_&&o.fillText(this.text_,0,0),o.restore()):(this.textStrokeState_&&o.strokeText(this.text_,s,h),this.textFillState_&&o.fillText(this.text_,s,h))}}moveToLineTo_(e,t,n,i,l){const o=this.context_,r=zt(e,t,n,i,this.transform_,this.pixelCoordinates_);o.moveTo(r[0],r[1]);let s=r.length;l&&(s-=2);for(let h=2;h<s;h+=2)o.lineTo(r[h],r[h+1]);return l&&o.closePath(),n}drawRings_(e,t,n,i){for(let l=0,o=n.length;l<o;++l)t=this.moveToLineTo_(e,t,n[l],i,!0);return t}drawCircle(e){if(this.squaredTolerance_&&(e=e.simplifyTransformed(this.squaredTolerance_,this.userTransform_)),!!ve(this.extent_,e.getExtent())){if(this.fillState_||this.strokeState_){this.fillState_&&this.setContextFillState_(this.fillState_),this.strokeState_&&this.setContextStrokeState_(this.strokeState_);const t=R1(e,this.transform_,this.pixelCoordinates_),n=t[2]-t[0],i=t[3]-t[1],l=Math.sqrt(n*n+i*i),o=this.context_;o.beginPath(),o.arc(t[0],t[1],l,0,2*Math.PI),this.fillState_&&o.fill(),this.strokeState_&&o.stroke()}this.text_!==""&&this.drawText_(e.getCenter(),0,2,2)}}setStyle(e){this.setFillStrokeStyle(e.getFill(),e.getStroke()),this.setImageStyle(e.getImage()),this.setTextStyle(e.getText())}setTransform(e){this.transform_=e}drawGeometry(e){switch(e.getType()){case"Point":this.drawPoint(e);break;case"LineString":this.drawLineString(e);break;case"Polygon":this.drawPolygon(e);break;case"MultiPoint":this.drawMultiPoint(e);break;case"MultiLineString":this.drawMultiLineString(e);break;case"MultiPolygon":this.drawMultiPolygon(e);break;case"GeometryCollection":this.drawGeometryCollection(e);break;case"Circle":this.drawCircle(e);break}}drawFeature(e,t){const n=t.getGeometryFunction()(e);n&&(this.setStyle(t),this.drawGeometry(n))}drawGeometryCollection(e){const t=e.getGeometriesArray();for(let n=0,i=t.length;n<i;++n)this.drawGeometry(t[n])}drawPoint(e){this.squaredTolerance_&&(e=e.simplifyTransformed(this.squaredTolerance_,this.userTransform_));const t=e.getFlatCoordinates(),n=e.getStride();this.image_&&this.drawImages_(t,0,t.length,n),this.text_!==""&&this.drawText_(t,0,t.length,n)}drawMultiPoint(e){this.squaredTolerance_&&(e=e.simplifyTransformed(this.squaredTolerance_,this.userTransform_));const t=e.getFlatCoordinates(),n=e.getStride();this.image_&&this.drawImages_(t,0,t.length,n),this.text_!==""&&this.drawText_(t,0,t.length,n)}drawLineString(e){if(this.squaredTolerance_&&(e=e.simplifyTransformed(this.squaredTolerance_,this.userTransform_)),!!ve(this.extent_,e.getExtent())){if(this.strokeState_){this.setContextStrokeState_(this.strokeState_);const t=this.context_,n=e.getFlatCoordinates();t.beginPath(),this.moveToLineTo_(n,0,n.length,e.getStride(),!1),t.stroke()}if(this.text_!==""){const t=e.getFlatMidpoint();this.drawText_(t,0,2,2)}}}drawMultiLineString(e){this.squaredTolerance_&&(e=e.simplifyTransformed(this.squaredTolerance_,this.userTransform_));const t=e.getExtent();if(ve(this.extent_,t)){if(this.strokeState_){this.setContextStrokeState_(this.strokeState_);const n=this.context_,i=e.getFlatCoordinates();let l=0;const o=e.getEnds(),r=e.getStride();n.beginPath();for(let s=0,h=o.length;s<h;++s)l=this.moveToLineTo_(i,l,o[s],r,!1);n.stroke()}if(this.text_!==""){const n=e.getFlatMidpoints();this.drawText_(n,0,n.length,2)}}}drawPolygon(e){if(this.squaredTolerance_&&(e=e.simplifyTransformed(this.squaredTolerance_,this.userTransform_)),!!ve(this.extent_,e.getExtent())){if(this.strokeState_||this.fillState_){this.fillState_&&this.setContextFillState_(this.fillState_),this.strokeState_&&this.setContextStrokeState_(this.strokeState_);const t=this.context_;t.beginPath(),this.drawRings_(e.getOrientedFlatCoordinates(),0,e.getEnds(),e.getStride()),this.fillState_&&t.fill(),this.strokeState_&&t.stroke()}if(this.text_!==""){const t=e.getFlatInteriorPoint();this.drawText_(t,0,2,2)}}}drawMultiPolygon(e){if(this.squaredTolerance_&&(e=e.simplifyTransformed(this.squaredTolerance_,this.userTransform_)),!!ve(this.extent_,e.getExtent())){if(this.strokeState_||this.fillState_){this.fillState_&&this.setContextFillState_(this.fillState_),this.strokeState_&&this.setContextStrokeState_(this.strokeState_);const t=this.context_,n=e.getOrientedFlatCoordinates();let i=0;const l=e.getEndss(),o=e.getStride();t.beginPath();for(let r=0,s=l.length;r<s;++r){const h=l[r];i=this.drawRings_(n,i,h,o)}this.fillState_&&t.fill(),this.strokeState_&&t.stroke()}if(this.text_!==""){const t=e.getFlatInteriorPoints();this.drawText_(t,0,t.length,2)}}}setContextFillState_(e){const t=this.context_,n=this.contextFillState_;n?n.fillStyle!=e.fillStyle&&(n.fillStyle=e.fillStyle,t.fillStyle=e.fillStyle):(t.fillStyle=e.fillStyle,this.contextFillState_={fillStyle:e.fillStyle})}setContextStrokeState_(e){const t=this.context_,n=this.contextStrokeState_;n?(n.lineCap!=e.lineCap&&(n.lineCap=e.lineCap,t.lineCap=e.lineCap),qt(n.lineDash,e.lineDash)||t.setLineDash(n.lineDash=e.lineDash),n.lineDashOffset!=e.lineDashOffset&&(n.lineDashOffset=e.lineDashOffset,t.lineDashOffset=e.lineDashOffset),n.lineJoin!=e.lineJoin&&(n.lineJoin=e.lineJoin,t.lineJoin=e.lineJoin),n.lineWidth!=e.lineWidth&&(n.lineWidth=e.lineWidth,t.lineWidth=e.lineWidth),n.miterLimit!=e.miterLimit&&(n.miterLimit=e.miterLimit,t.miterLimit=e.miterLimit),n.strokeStyle!=e.strokeStyle&&(n.strokeStyle=e.strokeStyle,t.strokeStyle=e.strokeStyle)):(t.lineCap=e.lineCap,t.setLineDash(e.lineDash),t.lineDashOffset=e.lineDashOffset,t.lineJoin=e.lineJoin,t.lineWidth=e.lineWidth,t.miterLimit=e.miterLimit,t.strokeStyle=e.strokeStyle,this.contextStrokeState_={lineCap:e.lineCap,lineDash:e.lineDash,lineDashOffset:e.lineDashOffset,lineJoin:e.lineJoin,lineWidth:e.lineWidth,miterLimit:e.miterLimit,strokeStyle:e.strokeStyle})}setContextTextState_(e){const t=this.context_,n=this.contextTextState_,i=e.textAlign?e.textAlign:ga;n?(n.font!=e.font&&(n.font=e.font,t.font=e.font),n.textAlign!=i&&(n.textAlign=i,t.textAlign=i),n.textBaseline!=e.textBaseline&&(n.textBaseline=e.textBaseline,t.textBaseline=e.textBaseline)):(t.font=e.font,t.textAlign=i,t.textBaseline=e.textBaseline,this.contextTextState_={font:e.font,textAlign:i,textBaseline:e.textBaseline})}setFillStrokeStyle(e,t){if(!e)this.fillState_=null;else{const n=e.getColor();this.fillState_={fillStyle:St(n||Oe)}}if(!t)this.strokeState_=null;else{const n=t.getColor(),i=t.getLineCap(),l=t.getLineDash(),o=t.getLineDashOffset(),r=t.getLineJoin(),s=t.getWidth(),h=t.getMiterLimit(),c=l||Gt;this.strokeState_={lineCap:i!==void 0?i:Fn,lineDash:this.pixelRatio_===1?c:c.map(u=>u*this.pixelRatio_),lineDashOffset:(o||Bt)*this.pixelRatio_,lineJoin:r!==void 0?r:Kn,lineWidth:(s!==void 0?s:Ca)*this.pixelRatio_,miterLimit:h!==void 0?h:ka,strokeStyle:St(n||fa)}}}setImageStyle(e){let t;if(!e||!(t=e.getSize())){this.image_=null;return}const n=e.getPixelRatio(this.pixelRatio_),i=e.getAnchor(),l=e.getOrigin();this.image_=e.getImage(this.pixelRatio_),this.imageAnchorX_=i[0]*n,this.imageAnchorY_=i[1]*n,this.imageHeight_=t[1]*n,this.imageOpacity_=e.getOpacity(),this.imageOriginX_=l[0],this.imageOriginY_=l[1],this.imageRotateWithView_=e.getRotateWithView(),this.imageRotation_=e.getRotation();const o=e.getScaleArray();this.imageScale_=[o[0]*this.pixelRatio_/n,o[1]*this.pixelRatio_/n],this.imageWidth_=t[0]*n}setTextStyle(e){if(!e)this.text_="";else{const t=e.getFill();if(!t)this.textFillState_=null;else{const m=t.getColor();this.textFillState_={fillStyle:St(m||Oe)}}const n=e.getStroke();if(!n)this.textStrokeState_=null;else{const m=n.getColor(),y=n.getLineCap(),k=n.getLineDash(),S=n.getLineDashOffset(),g=n.getLineJoin(),f=n.getWidth(),p=n.getMiterLimit();this.textStrokeState_={lineCap:y!==void 0?y:Fn,lineDash:k||Gt,lineDashOffset:S||Bt,lineJoin:g!==void 0?g:Kn,lineWidth:f!==void 0?f:Ca,miterLimit:p!==void 0?p:ka,strokeStyle:St(m||fa)}}const i=e.getFont(),l=e.getOffsetX(),o=e.getOffsetY(),r=e.getRotateWithView(),s=e.getRotation(),h=e.getScaleArray(),c=e.getText(),u=e.getTextAlign(),d=e.getTextBaseline();this.textState_={font:i!==void 0?i:Jr,textAlign:u!==void 0?u:ga,textBaseline:d!==void 0?d:ja},this.text_=c!==void 0?Array.isArray(c)?c.reduce((m,y,k)=>m+=k%2?" ":y,""):c:"",this.textOffsetX_=l!==void 0?this.pixelRatio_*l:0,this.textOffsetY_=o!==void 0?this.pixelRatio_*o:0,this.textRotateWithView_=r!==void 0?r:!1,this.textRotation_=s!==void 0?s:0,this.textScale_=[this.pixelRatio_*h[0],this.pixelRatio_*h[1]]}}}const Uh=.5,Kr={Point:wh,LineString:Ah,Polygon:Rh,MultiPoint:Eh,MultiLineString:Wh,MultiPolygon:Th,GeometryCollection:Lh,Circle:_h};function ph(a,e){return parseInt(ae(a),10)-parseInt(ae(e),10)}function Lo(a,e){const t=Yr(a,e);return t*t}function Yr(a,e){return Uh*a/e}function _h(a,e,t,n,i){const l=t.getFill(),o=t.getStroke();if(l||o){const s=a.getBuilder(t.getZIndex(),"Circle");s.setFillStrokeStyle(l,o),s.drawCircle(e,n,i)}const r=t.getText();if(r&&r.getText()){const s=a.getBuilder(t.getZIndex(),"Text");s.setTextStyle(r),s.drawText(e,n)}}function Ao(a,e,t,n,i,l,o,r){const s=[],h=t.getImage();if(h){let d=!0;const m=h.getImageState();m==j.LOADED||m==j.ERROR?d=!1:m==j.IDLE&&h.load(),d&&s.push(h.ready())}const c=t.getFill();c&&c.loading()&&s.push(c.ready());const u=s.length>0;return u&&Promise.all(s).then(()=>i(null)),Mh(a,e,t,n,l,o,r),u}function Mh(a,e,t,n,i,l,o){const r=t.getGeometryFunction()(e);if(!r)return;const s=r.simplifyTransformed(n,i);if(t.getRenderer())Vr(a,s,t,e,o);else{const c=Kr[s.getType()];c(a,s,t,e,o,l)}}function Vr(a,e,t,n,i){if(e.getType()=="GeometryCollection"){const o=e.getGeometries();for(let r=0,s=o.length;r<s;++r)Vr(a,o[r],t,n,i);return}a.getBuilder(t.getZIndex(),"Default").drawCustom(e,n,t.getRenderer(),t.getHitDetectionRenderer(),i)}function Lh(a,e,t,n,i,l){const o=e.getGeometriesArray();let r,s;for(r=0,s=o.length;r<s;++r){const h=Kr[o[r].getType()];h(a,o[r],t,n,i,l)}}function Ah(a,e,t,n,i){const l=t.getStroke();if(l){const r=a.getBuilder(t.getZIndex(),"LineString");r.setFillStrokeStyle(null,l),r.drawLineString(e,n,i)}const o=t.getText();if(o&&o.getText()){const r=a.getBuilder(t.getZIndex(),"Text");r.setTextStyle(o),r.drawText(e,n,i)}}function Wh(a,e,t,n,i){const l=t.getStroke();if(l){const r=a.getBuilder(t.getZIndex(),"LineString");r.setFillStrokeStyle(null,l),r.drawMultiLineString(e,n,i)}const o=t.getText();if(o&&o.getText()){const r=a.getBuilder(t.getZIndex(),"Text");r.setTextStyle(o),r.drawText(e,n,i)}}function Th(a,e,t,n,i){const l=t.getFill(),o=t.getStroke();if(o||l){const s=a.getBuilder(t.getZIndex(),"Polygon");s.setFillStrokeStyle(l,o),s.drawMultiPolygon(e,n,i)}const r=t.getText();if(r&&r.getText()){const s=a.getBuilder(t.getZIndex(),"Text");s.setTextStyle(r),s.drawText(e,n,i)}}function wh(a,e,t,n,i,l){const o=t.getImage(),r=t.getText(),s=r&&r.getText(),h=l&&o&&s?{}:void 0;if(o){if(o.getImageState()!=j.LOADED)return;const c=a.getBuilder(t.getZIndex(),"Image");c.setImageStyle(o,h),c.drawPoint(e,n,i)}if(s){const c=a.getBuilder(t.getZIndex(),"Text");c.setTextStyle(r,h),c.drawText(e,n,i)}}function Eh(a,e,t,n,i,l){const o=t.getImage(),r=o&&o.getOpacity()!==0,s=t.getText(),h=s&&s.getText(),c=l&&r&&h?{}:void 0;if(r){if(o.getImageState()!=j.LOADED)return;const u=a.getBuilder(t.getZIndex(),"Image");u.setImageStyle(o,c),u.drawMultiPoint(e,n,i)}if(h){const u=a.getBuilder(t.getZIndex(),"Text");u.setTextStyle(s,c),u.drawText(e,n,i)}}function Rh(a,e,t,n,i){const l=t.getFill(),o=t.getStroke();if(l||o){const s=a.getBuilder(t.getZIndex(),"Polygon");s.setFillStrokeStyle(l,o),s.drawPolygon(e,n,i)}const r=t.getText();if(r&&r.getText()){const s=a.getBuilder(t.getZIndex(),"Text");s.setTextStyle(r),s.drawText(e,n,i)}}let Ih=!1;function Gh(a,e,t,n,i,l,o){const r=new XMLHttpRequest;r.open("GET",typeof a=="function"?a(t,n,i):a,!0),e.getType()=="arraybuffer"&&(r.responseType="arraybuffer"),r.withCredentials=Ih,r.onload=function(s){if(!r.status||r.status>=200&&r.status<300){const h=e.getType();try{let c;h=="text"||h=="json"?c=r.responseText:h=="xml"?c=r.responseXML||r.responseText:h=="arraybuffer"&&(c=r.response),c?l(e.readFeatures(c,{extent:t,featureProjection:i}),e.readProjection(c)):o()}catch{o()}}else o()},r.onerror=o,r.send()}function Wo(a,e){return function(t,n,i,l,o){Gh(a,e,t,n,i,(r,s)=>{this.addFeatures(r),l!==void 0&&l(r)},()=>{this.changed(),o!==void 0&&o()})}}function Bh(a,e){return[[-1/0,-1/0,1/0,1/0]]}function bh(a,e,t,n){const i=[];let l=nt();for(let o=0,r=t.length;o<r;++o){const s=t[o];l=kl(a,e,s[0],n),i.push((l[0]+l[2])/2,(l[1]+l[3])/2),e=s[s.length-1]}return i}const To=ot();class it{constructor(e,t,n,i,l,o){this.styleFunction,this.extent_,this.id_=o,this.type_=e,this.flatCoordinates_=t,this.flatInteriorPoints_=null,this.flatMidpoints_=null,this.ends_=n||null,this.properties_=l,this.squaredTolerance_,this.stride_=i,this.simplifiedGeometry_}get(e){return this.properties_[e]}getExtent(){return this.extent_||(this.extent_=this.type_==="Point"?sr(this.flatCoordinates_):kl(this.flatCoordinates_,0,this.flatCoordinates_.length,2)),this.extent_}getFlatInteriorPoint(){if(!this.flatInteriorPoints_){const e=un(this.getExtent());this.flatInteriorPoints_=Tl(this.flatCoordinates_,0,this.ends_,2,e,0)}return this.flatInteriorPoints_}getFlatInteriorPoints(){if(!this.flatInteriorPoints_){const e=K1(this.flatCoordinates_,this.ends_),t=bh(this.flatCoordinates_,0,e,2);this.flatInteriorPoints_=v1(this.flatCoordinates_,0,e,2,t)}return this.flatInteriorPoints_}getFlatMidpoint(){return this.flatMidpoints_||(this.flatMidpoints_=go(this.flatCoordinates_,0,this.flatCoordinates_.length,2,.5)),this.flatMidpoints_}getFlatMidpoints(){if(!this.flatMidpoints_){this.flatMidpoints_=[];const e=this.flatCoordinates_;let t=0;const n=this.ends_;for(let i=0,l=n.length;i<l;++i){const o=n[i],r=go(e,t,o,2,.5);yl(this.flatMidpoints_,r),t=o}}return this.flatMidpoints_}getId(){return this.id_}getOrientedFlatCoordinates(){return this.flatCoordinates_}getGeometry(){return this}getSimplifiedGeometry(e){return this}simplifyTransformed(e,t){return this}getProperties(){return this.properties_}getPropertiesInternal(){return this.properties_}getStride(){return this.stride_}getStyleFunction(){return this.styleFunction}getType(){return this.type_}transform(e){e=Je(e);const t=e.getExtent(),n=e.getWorldExtent();if(t&&n){const i=be(n)/be(t);bt(To,n[0],n[3],i,-i,0,0,0),zt(this.flatCoordinates_,0,this.flatCoordinates_.length,2,To,this.flatCoordinates_)}}applyTransform(e){e(this.flatCoordinates_,this.flatCoordinates_,this.stride_)}clone(){var e;return new it(this.type_,this.flatCoordinates_.slice(),(e=this.ends_)==null?void 0:e.slice(),this.stride_,Object.assign({},this.properties_),this.id_)}getEnds(){return this.ends_}enableSimplifyTransformed(){return this.simplifyTransformed=ir((e,t)=>{if(e===this.squaredTolerance_)return this.simplifiedGeometry_;this.simplifiedGeometry_=this.clone(),t&&this.simplifiedGeometry_.applyTransform(t);const n=this.simplifiedGeometry_.getFlatCoordinates();let i;switch(this.type_){case"LineString":n.length=Wl(n,0,this.simplifiedGeometry_.flatCoordinates_.length,this.simplifiedGeometry_.stride_,e,n,0),i=[n.length];break;case"MultiLineString":i=[],n.length=D1(n,0,this.simplifiedGeometry_.ends_,this.simplifiedGeometry_.stride_,e,n,0,i);break;case"Polygon":i=[],n.length=Er(n,0,this.simplifiedGeometry_.ends_,this.simplifiedGeometry_.stride_,Math.sqrt(e),n,0,i);break}return i&&(this.simplifiedGeometry_=new it(this.type_,n,i,2,this.properties_,this.id_)),this.squaredTolerance_=e,this.simplifiedGeometry_}),this}}it.prototype.getFlatCoordinates=it.prototype.getOrientedFlatCoordinates;function Xr(a,e,t=0,n=a.length-1,i=Ph){for(;n>t;){if(n-t>600){const s=n-t+1,h=e-t+1,c=Math.log(s),u=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*u*(s-u)/s)*(h-s/2<0?-1:1),m=Math.max(t,Math.floor(e-h*u/s+d)),y=Math.min(n,Math.floor(e+(s-h)*u/s+d));Xr(a,e,m,y,i)}const l=a[e];let o=t,r=n;for(Qn(a,t,e),i(a[n],l)>0&&Qn(a,t,n);o<r;){for(Qn(a,o,r),o++,r--;i(a[o],l)<0;)o++;for(;i(a[r],l)>0;)r--}i(a[t],l)===0?Qn(a,t,r):(r++,Qn(a,r,n)),r<=e&&(t=r+1),e<=r&&(n=r-1)}}function Qn(a,e,t){const n=a[e];a[e]=a[t],a[t]=n}function Ph(a,e){return a<e?-1:a>e?1:0}let zr=class{constructor(e=9){this._maxEntries=Math.max(4,e),this._minEntries=Math.max(2,Math.ceil(this._maxEntries*.4)),this.clear()}all(){return this._all(this.data,[])}search(e){let t=this.data;const n=[];if(!va(e,t))return n;const i=this.toBBox,l=[];for(;t;){for(let o=0;o<t.children.length;o++){const r=t.children[o],s=t.leaf?i(r):r;va(e,s)&&(t.leaf?n.push(r):xi(e,s)?this._all(r,n):l.push(r))}t=l.pop()}return n}collides(e){let t=this.data;if(!va(e,t))return!1;const n=[];for(;t;){for(let i=0;i<t.children.length;i++){const l=t.children[i],o=t.leaf?this.toBBox(l):l;if(va(e,o)){if(t.leaf||xi(e,o))return!0;n.push(l)}}t=n.pop()}return!1}load(e){if(!(e&&e.length))return this;if(e.length<this._minEntries){for(let n=0;n<e.length;n++)this.insert(e[n]);return this}let t=this._build(e.slice(),0,e.length-1,0);if(!this.data.children.length)this.data=t;else if(this.data.height===t.height)this._splitRoot(this.data,t);else{if(this.data.height<t.height){const n=this.data;this.data=t,t=n}this._insert(t,this.data.height-t.height-1,!0)}return this}insert(e){return e&&this._insert(e,this.data.height-1),this}clear(){return this.data=Tn([]),this}remove(e,t){if(!e)return this;let n=this.data;const i=this.toBBox(e),l=[],o=[];let r,s,h;for(;n||l.length;){if(n||(n=l.pop(),s=l[l.length-1],r=o.pop(),h=!0),n.leaf){const c=Dh(e,n.children,t);if(c!==-1)return n.children.splice(c,1),l.push(n),this._condense(l),this}!h&&!n.leaf&&xi(n,i)?(l.push(n),o.push(r),r=0,s=n,n=n.children[0]):s?(r++,n=s.children[r],h=!1):n=null}return this}toBBox(e){return e}compareMinX(e,t){return e.minX-t.minX}compareMinY(e,t){return e.minY-t.minY}toJSON(){return this.data}fromJSON(e){return this.data=e,this}_all(e,t){const n=[];for(;e;)e.leaf?t.push(...e.children):n.push(...e.children),e=n.pop();return t}_build(e,t,n,i){const l=n-t+1;let o=this._maxEntries,r;if(l<=o)return r=Tn(e.slice(t,n+1)),Un(r,this.toBBox),r;i||(i=Math.ceil(Math.log(l)/Math.log(o)),o=Math.ceil(l/Math.pow(o,i-1))),r=Tn([]),r.leaf=!1,r.height=i;const s=Math.ceil(l/o),h=s*Math.ceil(Math.sqrt(o));wo(e,t,n,h,this.compareMinX);for(let c=t;c<=n;c+=h){const u=Math.min(c+h-1,n);wo(e,c,u,s,this.compareMinY);for(let d=c;d<=u;d+=s){const m=Math.min(d+s-1,u);r.children.push(this._build(e,d,m,i-1))}}return Un(r,this.toBBox),r}_chooseSubtree(e,t,n,i){for(;i.push(t),!(t.leaf||i.length-1===n);){let l=1/0,o=1/0,r;for(let s=0;s<t.children.length;s++){const h=t.children[s],c=Oi(h),u=vh(e,h)-c;u<o?(o=u,l=c<l?c:l,r=h):u===o&&c<l&&(l=c,r=h)}t=r||t.children[0]}return t}_insert(e,t,n){const i=n?e:this.toBBox(e),l=[],o=this._chooseSubtree(i,this.data,t,l);for(o.children.push(e),ta(o,i);t>=0&&l[t].children.length>this._maxEntries;)this._split(l,t),t--;this._adjustParentBBoxes(i,l,t)}_split(e,t){const n=e[t],i=n.children.length,l=this._minEntries;this._chooseSplitAxis(n,l,i);const o=this._chooseSplitIndex(n,l,i),r=Tn(n.children.splice(o,n.children.length-o));r.height=n.height,r.leaf=n.leaf,Un(n,this.toBBox),Un(r,this.toBBox),t?e[t-1].children.push(r):this._splitRoot(n,r)}_splitRoot(e,t){this.data=Tn([e,t]),this.data.height=e.height+1,this.data.leaf=!1,Un(this.data,this.toBBox)}_chooseSplitIndex(e,t,n){let i,l=1/0,o=1/0;for(let r=t;r<=n-t;r++){const s=ea(e,0,r,this.toBBox),h=ea(e,r,n,this.toBBox),c=Nh(s,h),u=Oi(s)+Oi(h);c<l?(l=c,i=r,o=u<o?u:o):c===l&&u<o&&(o=u,i=r)}return i||n-t}_chooseSplitAxis(e,t,n){const i=e.leaf?this.compareMinX:Oh,l=e.leaf?this.compareMinY:xh,o=this._allDistMargin(e,t,n,i),r=this._allDistMargin(e,t,n,l);o<r&&e.children.sort(i)}_allDistMargin(e,t,n,i){e.children.sort(i);const l=this.toBBox,o=ea(e,0,t,l),r=ea(e,n-t,n,l);let s=xa(o)+xa(r);for(let h=t;h<n-t;h++){const c=e.children[h];ta(o,e.leaf?l(c):c),s+=xa(o)}for(let h=n-t-1;h>=t;h--){const c=e.children[h];ta(r,e.leaf?l(c):c),s+=xa(r)}return s}_adjustParentBBoxes(e,t,n){for(let i=n;i>=0;i--)ta(t[i],e)}_condense(e){for(let t=e.length-1,n;t>=0;t--)e[t].children.length===0?t>0?(n=e[t-1].children,n.splice(n.indexOf(e[t]),1)):this.clear():Un(e[t],this.toBBox)}};function Dh(a,e,t){if(!t)return e.indexOf(a);for(let n=0;n<e.length;n++)if(t(a,e[n]))return n;return-1}function Un(a,e){ea(a,0,a.children.length,e,a)}function ea(a,e,t,n,i){i||(i=Tn(null)),i.minX=1/0,i.minY=1/0,i.maxX=-1/0,i.maxY=-1/0;for(let l=e;l<t;l++){const o=a.children[l];ta(i,a.leaf?n(o):o)}return i}function ta(a,e){return a.minX=Math.min(a.minX,e.minX),a.minY=Math.min(a.minY,e.minY),a.maxX=Math.max(a.maxX,e.maxX),a.maxY=Math.max(a.maxY,e.maxY),a}function Oh(a,e){return a.minX-e.minX}function xh(a,e){return a.minY-e.minY}function Oi(a){return(a.maxX-a.minX)*(a.maxY-a.minY)}function xa(a){return a.maxX-a.minX+(a.maxY-a.minY)}function vh(a,e){return(Math.max(e.maxX,a.maxX)-Math.min(e.minX,a.minX))*(Math.max(e.maxY,a.maxY)-Math.min(e.minY,a.minY))}function Nh(a,e){const t=Math.max(a.minX,e.minX),n=Math.max(a.minY,e.minY),i=Math.min(a.maxX,e.maxX),l=Math.min(a.maxY,e.maxY);return Math.max(0,i-t)*Math.max(0,l-n)}function xi(a,e){return a.minX<=e.minX&&a.minY<=e.minY&&e.maxX<=a.maxX&&e.maxY<=a.maxY}function va(a,e){return e.minX<=a.maxX&&e.minY<=a.maxY&&e.maxX>=a.minX&&e.maxY>=a.minY}function Tn(a){return{children:a,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function wo(a,e,t,n,i){const l=[e,t];for(;l.length;){if(t=l.pop(),e=l.pop(),t-e<=n)continue;const o=e+Math.ceil((t-e)/n/2)*n;Xr(a,o,e,t,i),l.push(e,o,o,t)}}class Eo{constructor(e){this.rbush_=new zr(e),this.items_={}}insert(e,t){const n={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3],value:t};this.rbush_.insert(n),this.items_[ae(t)]=n}load(e,t){const n=new Array(t.length);for(let i=0,l=t.length;i<l;i++){const o=e[i],r=t[i],s={minX:o[0],minY:o[1],maxX:o[2],maxY:o[3],value:r};n[i]=s,this.items_[ae(r)]=s}this.rbush_.load(n)}remove(e){const t=ae(e),n=this.items_[t];return delete this.items_[t],this.rbush_.remove(n)!==null}update(e,t){const n=this.items_[ae(t)],i=[n.minX,n.minY,n.maxX,n.maxY];ua(i,e)||(this.remove(t),this.insert(e,t))}getAll(){return this.rbush_.all().map(function(t){return t.value})}getInExtent(e){const t={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]};return this.rbush_.search(t).map(function(i){return i.value})}forEach(e){return this.forEach_(this.getAll(),e)}forEachInExtent(e,t){return this.forEach_(this.getInExtent(e),t)}forEach_(e,t){let n;for(let i=0,l=e.length;i<l;i++)if(n=t(e[i]),n)return n;return n}isEmpty(){return vn(this.items_)}clear(){this.rbush_.clear(),this.items_={}}getExtent(e){const t=this.rbush_.toJSON();return Zt(t.minX,t.minY,t.maxX,t.maxY,e)}concat(e){this.rbush_.load(e.rbush_.all());for(const t in e.items_)this.items_[t]=e.items_[t]}}class Zr extends st{constructor(e){super(),this.projection=Je(e.projection),this.attributions_=Ro(e.attributions),this.attributionsCollapsible_=e.attributionsCollapsible??!0,this.loading=!1,this.state_=e.state!==void 0?e.state:"ready",this.wrapX_=e.wrapX!==void 0?e.wrapX:!1,this.interpolate_=!!e.interpolate,this.viewResolver=null,this.viewRejector=null;const t=this;this.viewPromise_=new Promise(function(n,i){t.viewResolver=n,t.viewRejector=i})}getAttributions(){return this.attributions_}getAttributionsCollapsible(){return this.attributionsCollapsible_}getProjection(){return this.projection}getResolutions(e){return null}getView(){return this.viewPromise_}getState(){return this.state_}getWrapX(){return this.wrapX_}getInterpolate(){return this.interpolate_}refresh(){this.changed()}setAttributions(e){this.attributions_=Ro(e),this.changed()}setState(e){this.state_=e,this.changed()}}function Ro(a){return a?typeof a=="function"?a:(Array.isArray(a)||(a=[a]),e=>a):null}const je={ADDFEATURE:"addfeature",CHANGEFEATURE:"changefeature",CLEAR:"clear",REMOVEFEATURE:"removefeature",FEATURESLOADSTART:"featuresloadstart",FEATURESLOADEND:"featuresloadend",FEATURESLOADERROR:"featuresloaderror"};class xt extends Pt{constructor(e,t,n){super(e),this.feature=t,this.features=n}}class Io extends Zr{constructor(e){e=e||{},super({attributions:e.attributions,interpolate:!0,projection:void 0,state:"ready",wrapX:e.wrapX!==void 0?e.wrapX:!0}),this.on,this.once,this.un,this.loader_=ca,this.format_=e.format||null,this.overlaps_=e.overlaps===void 0?!0:e.overlaps,this.url_=e.url,e.loader!==void 0?this.loader_=e.loader:this.url_!==void 0&&(oe(this.format_,"`format` must be set when `url` is set"),this.loader_=Wo(this.url_,this.format_)),this.strategy_=e.strategy!==void 0?e.strategy:Bh;const t=e.useSpatialIndex!==void 0?e.useSpatialIndex:!0;this.featuresRtree_=t?new Eo:null,this.loadedExtentsRtree_=new Eo,this.loadingExtentsCount_=0,this.nullGeometryFeatures_={},this.idIndex_={},this.uidIndex_={},this.featureChangeKeys_={},this.featuresCollection_=null;let n,i;Array.isArray(e.features)?i=e.features:e.features&&(n=e.features,i=n.getArray()),!t&&n===void 0&&(n=new yt(i)),i!==void 0&&this.addFeaturesInternal(i),n!==void 0&&this.bindFeaturesCollection_(n)}addFeature(e){this.addFeatureInternal(e),this.changed()}addFeatureInternal(e){const t=ae(e);if(!this.addToIndex_(t,e)){this.featuresCollection_&&this.featuresCollection_.remove(e);return}this.setupChangeEvents_(t,e);const n=e.getGeometry();if(n){const i=n.getExtent();this.featuresRtree_&&this.featuresRtree_.insert(i,e)}else this.nullGeometryFeatures_[t]=e;this.dispatchEvent(new xt(je.ADDFEATURE,e))}setupChangeEvents_(e,t){t instanceof it||(this.featureChangeKeys_[e]=[$(t,z.CHANGE,this.handleFeatureChange_,this),$(t,xn.PROPERTYCHANGE,this.handleFeatureChange_,this)])}addToIndex_(e,t){let n=!0;if(t.getId()!==void 0){const i=String(t.getId());if(!(i in this.idIndex_))this.idIndex_[i]=t;else if(t instanceof it){const l=this.idIndex_[i];l instanceof it?Array.isArray(l)?l.push(t):this.idIndex_[i]=[l,t]:n=!1}else n=!1}return n&&(oe(!(e in this.uidIndex_),"The passed `feature` was already added to the source"),this.uidIndex_[e]=t),n}addFeatures(e){this.addFeaturesInternal(e),this.changed()}addFeaturesInternal(e){const t=[],n=[],i=[];for(let l=0,o=e.length;l<o;l++){const r=e[l],s=ae(r);this.addToIndex_(s,r)&&n.push(r)}for(let l=0,o=n.length;l<o;l++){const r=n[l],s=ae(r);this.setupChangeEvents_(s,r);const h=r.getGeometry();if(h){const c=h.getExtent();t.push(c),i.push(r)}else this.nullGeometryFeatures_[s]=r}if(this.featuresRtree_&&this.featuresRtree_.load(t,i),this.hasListener(je.ADDFEATURE))for(let l=0,o=n.length;l<o;l++)this.dispatchEvent(new xt(je.ADDFEATURE,n[l]))}bindFeaturesCollection_(e){let t=!1;this.addEventListener(je.ADDFEATURE,function(n){t||(t=!0,e.push(n.feature),t=!1)}),this.addEventListener(je.REMOVEFEATURE,function(n){t||(t=!0,e.remove(n.feature),t=!1)}),e.addEventListener(De.ADD,n=>{t||(t=!0,this.addFeature(n.element),t=!1)}),e.addEventListener(De.REMOVE,n=>{t||(t=!0,this.removeFeature(n.element),t=!1)}),this.featuresCollection_=e}clear(e){if(e){for(const n in this.featureChangeKeys_)this.featureChangeKeys_[n].forEach(de);this.featuresCollection_||(this.featureChangeKeys_={},this.idIndex_={},this.uidIndex_={})}else if(this.featuresRtree_){this.featuresRtree_.forEach(n=>{this.removeFeatureInternal(n)});for(const n in this.nullGeometryFeatures_)this.removeFeatureInternal(this.nullGeometryFeatures_[n])}this.featuresCollection_&&this.featuresCollection_.clear(),this.featuresRtree_&&this.featuresRtree_.clear(),this.nullGeometryFeatures_={};const t=new xt(je.CLEAR);this.dispatchEvent(t),this.changed()}forEachFeature(e){if(this.featuresRtree_)return this.featuresRtree_.forEach(e);this.featuresCollection_&&this.featuresCollection_.forEach(e)}forEachFeatureAtCoordinateDirect(e,t){const n=[e[0],e[1],e[0],e[1]];return this.forEachFeatureInExtent(n,function(i){const l=i.getGeometry();if(l instanceof it||l.intersectsCoordinate(e))return t(i)})}forEachFeatureInExtent(e,t){if(this.featuresRtree_)return this.featuresRtree_.forEachInExtent(e,t);this.featuresCollection_&&this.featuresCollection_.forEach(t)}forEachFeatureIntersectingExtent(e,t){return this.forEachFeatureInExtent(e,function(n){const i=n.getGeometry();if(i instanceof it||i.intersectsExtent(e)){const l=t(n);if(l)return l}})}getFeaturesCollection(){return this.featuresCollection_}getFeatures(){let e;return this.featuresCollection_?e=this.featuresCollection_.getArray().slice(0):this.featuresRtree_&&(e=this.featuresRtree_.getAll(),vn(this.nullGeometryFeatures_)||yl(e,Object.values(this.nullGeometryFeatures_))),e}getFeaturesAtCoordinate(e){const t=[];return this.forEachFeatureAtCoordinateDirect(e,function(n){t.push(n)}),t}getFeaturesInExtent(e,t){if(this.featuresRtree_){if(!(t&&t.canWrapX()&&this.getWrapX()))return this.featuresRtree_.getInExtent(e);const i=mr(e,t);return[].concat(...i.map(l=>this.featuresRtree_.getInExtent(l)))}return this.featuresCollection_?this.featuresCollection_.getArray().slice(0):[]}getClosestFeatureToCoordinate(e,t){const n=e[0],i=e[1];let l=null;const o=[NaN,NaN];let r=1/0;const s=[-1/0,-1/0,1/0,1/0];return t=t||ha,this.featuresRtree_.forEachInExtent(s,function(h){if(t(h)){const c=h.getGeometry(),u=r;if(r=c instanceof it?0:c.closestPointXY(n,i,o,r),r<u){l=h;const d=Math.sqrt(r);s[0]=n-d,s[1]=i-d,s[2]=n+d,s[3]=i+d}}}),l}getExtent(e){return this.featuresRtree_.getExtent(e)}getFeatureById(e){const t=this.idIndex_[e.toString()];return t!==void 0?t:null}getFeatureByUid(e){const t=this.uidIndex_[e];return t!==void 0?t:null}getFormat(){return this.format_}getOverlaps(){return this.overlaps_}getUrl(){return this.url_}handleFeatureChange_(e){const t=e.target,n=ae(t),i=t.getGeometry();if(!i)n in this.nullGeometryFeatures_||(this.featuresRtree_&&this.featuresRtree_.remove(t),this.nullGeometryFeatures_[n]=t);else{const o=i.getExtent();n in this.nullGeometryFeatures_?(delete this.nullGeometryFeatures_[n],this.featuresRtree_&&this.featuresRtree_.insert(o,t)):this.featuresRtree_&&this.featuresRtree_.update(o,t)}const l=t.getId();if(l!==void 0){const o=l.toString();this.idIndex_[o]!==t&&(this.removeFromIdIndex_(t),this.idIndex_[o]=t)}else this.removeFromIdIndex_(t),this.uidIndex_[n]=t;this.changed(),this.dispatchEvent(new xt(je.CHANGEFEATURE,t))}hasFeature(e){const t=e.getId();return t!==void 0?t in this.idIndex_:ae(e)in this.uidIndex_}isEmpty(){return this.featuresRtree_?this.featuresRtree_.isEmpty()&&vn(this.nullGeometryFeatures_):this.featuresCollection_?this.featuresCollection_.getLength()===0:!0}loadFeatures(e,t,n){const i=this.loadedExtentsRtree_,l=this.strategy_(e,t,n);for(let o=0,r=l.length;o<r;++o){const s=l[o];i.forEachInExtent(s,function(c){return Rn(c.extent,s)})||(++this.loadingExtentsCount_,this.dispatchEvent(new xt(je.FEATURESLOADSTART)),this.loader_.call(this,s,t,n,c=>{--this.loadingExtentsCount_,this.dispatchEvent(new xt(je.FEATURESLOADEND,void 0,c))},()=>{--this.loadingExtentsCount_,this.dispatchEvent(new xt(je.FEATURESLOADERROR))}),i.insert(s,{extent:s.slice()}))}this.loading=this.loader_.length<4?!1:this.loadingExtentsCount_>0}refresh(){this.clear(!0),this.loadedExtentsRtree_.clear(),super.refresh()}removeLoadedExtent(e){const t=this.loadedExtentsRtree_,n=t.forEachInExtent(e,function(i){if(ua(i.extent,e))return i});n&&t.remove(n)}removeFeatures(e){let t=!1;for(let n=0,i=e.length;n<i;++n)t=this.removeFeatureInternal(e[n])||t;t&&this.changed()}removeFeature(e){if(!e)return;this.removeFeatureInternal(e)&&this.changed()}removeFeatureInternal(e){const t=ae(e);if(!(t in this.uidIndex_))return!1;t in this.nullGeometryFeatures_?delete this.nullGeometryFeatures_[t]:this.featuresRtree_&&this.featuresRtree_.remove(e);const n=this.featureChangeKeys_[t];n==null||n.forEach(de),delete this.featureChangeKeys_[t];const i=e.getId();if(i!==void 0){const l=i.toString(),o=this.idIndex_[l];o===e?delete this.idIndex_[l]:Array.isArray(o)&&(o.splice(o.indexOf(e),1),o.length===1&&(this.idIndex_[l]=o[0]))}return delete this.uidIndex_[t],this.hasListener(je.REMOVEFEATURE)&&this.dispatchEvent(new xt(je.REMOVEFEATURE,e)),!0}removeFromIdIndex_(e){for(const t in this.idIndex_)if(this.idIndex_[t]===e){delete this.idIndex_[t];break}}setLoader(e){this.loader_=e}setUrl(e){oe(this.format_,"`format` must be set when `url` is set"),this.url_=e,this.setLoader(Wo(e,this.format_))}setOverlaps(e){this.overlaps_=e,this.changed()}}class mn{constructor(e){e=e||{},this.patternImage_=null,this.color_=null,e.color!==void 0&&this.setColor(e.color)}clone(){const e=this.getColor();return new mn({color:Array.isArray(e)?e.slice():e||void 0})}getColor(){return this.color_}setColor(e){if(e!==null&&typeof e=="object"&&"src"in e){const t=Gl(null,e.src,"anonymous",void 0,e.offset?null:e.color?e.color:null,!(e.offset&&e.size));t.ready().then(()=>{this.patternImage_=null}),t.getImageState()===j.IDLE&&t.load(),t.getImageState()===j.LOADING&&(this.patternImage_=t)}this.color_=e}getKey(){const e=this.getColor();return e?e instanceof CanvasPattern||e instanceof CanvasGradient?ae(e):typeof e=="object"&&"src"in e?e.src+":"+e.offset:Jn(e).toString():""}loading(){return!!this.patternImage_}ready(){return this.patternImage_?this.patternImage_.ready():Promise.resolve()}}class Yn{constructor(e){e=e||{},this.color_=e.color!==void 0?e.color:null,this.lineCap_=e.lineCap,this.lineDash_=e.lineDash!==void 0?e.lineDash:null,this.lineDashOffset_=e.lineDashOffset,this.lineJoin_=e.lineJoin,this.miterLimit_=e.miterLimit,this.width_=e.width}clone(){const e=this.getColor();return new Yn({color:Array.isArray(e)?e.slice():e||void 0,lineCap:this.getLineCap(),lineDash:this.getLineDash()?this.getLineDash().slice():void 0,lineDashOffset:this.getLineDashOffset(),lineJoin:this.getLineJoin(),miterLimit:this.getMiterLimit(),width:this.getWidth()})}getColor(){return this.color_}getLineCap(){return this.lineCap_}getLineDash(){return this.lineDash_}getLineDashOffset(){return this.lineDashOffset_}getLineJoin(){return this.lineJoin_}getMiterLimit(){return this.miterLimit_}getWidth(){return this.width_}setColor(e){this.color_=e}setLineCap(e){this.lineCap_=e}setLineDash(e){this.lineDash_=e}setLineDashOffset(e){this.lineDashOffset_=e}setLineJoin(e){this.lineJoin_=e}setMiterLimit(e){this.miterLimit_=e}setWidth(e){this.width_=e}}function Go(a){return a[0]>0&&a[1]>0}function Hh(a,e,t){return t===void 0&&(t=[0,0]),t[0]=a[0]*e+.5|0,t[1]=a[1]*e+.5|0,t}function He(a,e){return Array.isArray(a)?a:(e===void 0?e=[a,a]:(e[0]=a,e[1]=a),e)}class gi{constructor(e){this.opacity_=e.opacity,this.rotateWithView_=e.rotateWithView,this.rotation_=e.rotation,this.scale_=e.scale,this.scaleArray_=He(e.scale),this.displacement_=e.displacement,this.declutterMode_=e.declutterMode}clone(){const e=this.getScale();return new gi({opacity:this.getOpacity(),scale:Array.isArray(e)?e.slice():e,rotation:this.getRotation(),rotateWithView:this.getRotateWithView(),displacement:this.getDisplacement().slice(),declutterMode:this.getDeclutterMode()})}getOpacity(){return this.opacity_}getRotateWithView(){return this.rotateWithView_}getRotation(){return this.rotation_}getScale(){return this.scale_}getScaleArray(){return this.scaleArray_}getDisplacement(){return this.displacement_}getDeclutterMode(){return this.declutterMode_}getAnchor(){return te()}getImage(e){return te()}getHitDetectionImage(){return te()}getPixelRatio(e){return 1}getImageState(){return te()}getImageSize(){return te()}getOrigin(){return te()}getSize(){return te()}setDisplacement(e){this.displacement_=e}setOpacity(e){this.opacity_=e}setRotateWithView(e){this.rotateWithView_=e}setRotation(e){this.rotation_=e}setScale(e){this.scale_=e,this.scaleArray_=He(e)}listenImageChange(e){te()}load(){te()}unlistenImageChange(e){te()}ready(){return Promise.resolve()}}class Ci extends gi{constructor(e){super({opacity:1,rotateWithView:e.rotateWithView!==void 0?e.rotateWithView:!1,rotation:e.rotation!==void 0?e.rotation:0,scale:e.scale!==void 0?e.scale:1,displacement:e.displacement!==void 0?e.displacement:[0,0],declutterMode:e.declutterMode}),this.hitDetectionCanvas_=null,this.fill_=e.fill!==void 0?e.fill:null,this.origin_=[0,0],this.points_=e.points,this.radius=e.radius,this.radius2_=e.radius2,this.angle_=e.angle!==void 0?e.angle:0,this.stroke_=e.stroke!==void 0?e.stroke:null,this.size_,this.renderOptions_,this.imageState_=this.fill_&&this.fill_.loading()?j.LOADING:j.LOADED,this.imageState_===j.LOADING&&this.ready().then(()=>this.imageState_=j.LOADED),this.render()}clone(){const e=this.getScale(),t=new Ci({fill:this.getFill()?this.getFill().clone():void 0,points:this.getPoints(),radius:this.getRadius(),radius2:this.getRadius2(),angle:this.getAngle(),stroke:this.getStroke()?this.getStroke().clone():void 0,rotation:this.getRotation(),rotateWithView:this.getRotateWithView(),scale:Array.isArray(e)?e.slice():e,displacement:this.getDisplacement().slice(),declutterMode:this.getDeclutterMode()});return t.setOpacity(this.getOpacity()),t}getAnchor(){const e=this.size_,t=this.getDisplacement(),n=this.getScaleArray();return[e[0]/2-t[0]/n[0],e[1]/2+t[1]/n[1]]}getAngle(){return this.angle_}getFill(){return this.fill_}setFill(e){this.fill_=e,this.render()}getHitDetectionImage(){return this.hitDetectionCanvas_||(this.hitDetectionCanvas_=this.createHitDetectionCanvas_(this.renderOptions_)),this.hitDetectionCanvas_}getImage(e){var l,o;const t=(l=this.fill_)==null?void 0:l.getKey(),n=`${e},${this.angle_},${this.radius},${this.radius2_},${this.points_},${t}`+Object.values(this.renderOptions_).join(",");let i=(o=et.get(n,null,null))==null?void 0:o.getImage(1);if(!i){const r=this.renderOptions_,s=Math.ceil(r.size*e),h=pe(s,s);this.draw_(r,h,e),i=h.canvas,et.set(n,null,null,new vr(i,void 0,null,j.LOADED,null))}return i}getPixelRatio(e){return e}getImageSize(){return this.size_}getImageState(){return this.imageState_}getOrigin(){return this.origin_}getPoints(){return this.points_}getRadius(){return this.radius}getRadius2(){return this.radius2_}getSize(){return this.size_}getStroke(){return this.stroke_}setStroke(e){this.stroke_=e,this.render()}listenImageChange(e){}load(){}unlistenImageChange(e){}calculateLineJoinSize_(e,t,n){if(t===0||this.points_===1/0||e!=="bevel"&&e!=="miter")return t;let i=this.radius,l=this.radius2_===void 0?i:this.radius2_;if(i<l){const L=i;i=l,l=L}const o=this.radius2_===void 0?this.points_:this.points_*2,r=2*Math.PI/o,s=l*Math.sin(r),h=Math.sqrt(l*l-s*s),c=i-h,u=Math.sqrt(s*s+c*c),d=u/s;if(e==="miter"&&d<=n)return d*t;const m=t/2/d,y=t/2*(c/u),S=Math.sqrt((i+m)*(i+m)+y*y)-i;if(this.radius2_===void 0||e==="bevel")return S*2;const g=i*Math.sin(r),f=Math.sqrt(i*i-g*g),p=l-f,U=Math.sqrt(g*g+p*p)/g;if(U<=n){const L=U*t/2-l-i;return 2*Math.max(S,L)}return S*2}createRenderOptions(){let e=Fn,t=Kn,n=0,i=null,l=0,o,r=0;this.stroke_&&(o=St(this.stroke_.getColor()??fa),r=this.stroke_.getWidth()??Ca,i=this.stroke_.getLineDash(),l=this.stroke_.getLineDashOffset()??0,t=this.stroke_.getLineJoin()??Kn,e=this.stroke_.getLineCap()??Fn,n=this.stroke_.getMiterLimit()??ka);const s=this.calculateLineJoinSize_(t,r,n),h=Math.max(this.radius,this.radius2_||0),c=Math.ceil(2*h+s);return{strokeStyle:o,strokeWidth:r,size:c,lineCap:e,lineDash:i,lineDashOffset:l,lineJoin:t,miterLimit:n}}render(){this.renderOptions_=this.createRenderOptions();const e=this.renderOptions_.size;this.hitDetectionCanvas_=null,this.size_=[e,e]}draw_(e,t,n){if(t.scale(n,n),t.translate(e.size/2,e.size/2),this.createPath_(t),this.fill_){let i=this.fill_.getColor();i===null&&(i=Oe),t.fillStyle=St(i),t.fill()}e.strokeStyle&&(t.strokeStyle=e.strokeStyle,t.lineWidth=e.strokeWidth,e.lineDash&&(t.setLineDash(e.lineDash),t.lineDashOffset=e.lineDashOffset),t.lineCap=e.lineCap,t.lineJoin=e.lineJoin,t.miterLimit=e.miterLimit,t.stroke())}createHitDetectionCanvas_(e){let t;if(this.fill_){let n=this.fill_.getColor(),i=0;typeof n=="string"&&(n=Jn(n)),n===null?i=1:Array.isArray(n)&&(i=n.length===4?n[3]:1),i===0&&(t=pe(e.size,e.size),this.drawHitDetectionCanvas_(e,t))}return t?t.canvas:this.getImage(1)}createPath_(e){let t=this.points_;const n=this.radius;if(t===1/0)e.arc(0,0,n,0,2*Math.PI);else{const i=this.radius2_===void 0?n:this.radius2_;this.radius2_!==void 0&&(t*=2);const l=this.angle_-Math.PI/2,o=2*Math.PI/t;for(let r=0;r<t;r++){const s=l+r*o,h=r%2===0?n:i;e.lineTo(h*Math.cos(s),h*Math.sin(s))}e.closePath()}}drawHitDetectionCanvas_(e,t){t.translate(e.size/2,e.size/2),this.createPath_(t),t.fillStyle=Oe,t.fill(),e.strokeStyle&&(t.strokeStyle=e.strokeStyle,t.lineWidth=e.strokeWidth,e.lineDash&&(t.setLineDash(e.lineDash),t.lineDashOffset=e.lineDashOffset),t.lineJoin=e.lineJoin,t.miterLimit=e.miterLimit,t.stroke())}ready(){return this.fill_?this.fill_.ready():Promise.resolve()}}class Vn extends Ci{constructor(e){e=e||{radius:5},super({points:1/0,fill:e.fill,radius:e.radius,stroke:e.stroke,scale:e.scale!==void 0?e.scale:1,rotation:e.rotation!==void 0?e.rotation:0,rotateWithView:e.rotateWithView!==void 0?e.rotateWithView:!1,displacement:e.displacement!==void 0?e.displacement:[0,0],declutterMode:e.declutterMode})}clone(){const e=this.getScale(),t=new Vn({fill:this.getFill()?this.getFill().clone():void 0,stroke:this.getStroke()?this.getStroke().clone():void 0,radius:this.getRadius(),scale:Array.isArray(e)?e.slice():e,rotation:this.getRotation(),rotateWithView:this.getRotateWithView(),displacement:this.getDisplacement().slice(),declutterMode:this.getDeclutterMode()});return t.setOpacity(this.getOpacity()),t}setRadius(e){this.radius=e,this.render()}}class kt{constructor(e){e=e||{},this.geometry_=null,this.geometryFunction_=Bo,e.geometry!==void 0&&this.setGeometry(e.geometry),this.fill_=e.fill!==void 0?e.fill:null,this.image_=e.image!==void 0?e.image:null,this.renderer_=e.renderer!==void 0?e.renderer:null,this.hitDetectionRenderer_=e.hitDetectionRenderer!==void 0?e.hitDetectionRenderer:null,this.stroke_=e.stroke!==void 0?e.stroke:null,this.text_=e.text!==void 0?e.text:null,this.zIndex_=e.zIndex}clone(){let e=this.getGeometry();return e&&typeof e=="object"&&(e=e.clone()),new kt({geometry:e??void 0,fill:this.getFill()?this.getFill().clone():void 0,image:this.getImage()?this.getImage().clone():void 0,renderer:this.getRenderer()??void 0,stroke:this.getStroke()?this.getStroke().clone():void 0,text:this.getText()?this.getText().clone():void 0,zIndex:this.getZIndex()})}getRenderer(){return this.renderer_}setRenderer(e){this.renderer_=e}setHitDetectionRenderer(e){this.hitDetectionRenderer_=e}getHitDetectionRenderer(){return this.hitDetectionRenderer_}getGeometry(){return this.geometry_}getGeometryFunction(){return this.geometryFunction_}getFill(){return this.fill_}setFill(e){this.fill_=e}getImage(){return this.image_}setImage(e){this.image_=e}getStroke(){return this.stroke_}setStroke(e){this.stroke_=e}getText(){return this.text_}setText(e){this.text_=e}getZIndex(){return this.zIndex_}setGeometry(e){typeof e=="function"?this.geometryFunction_=e:typeof e=="string"?this.geometryFunction_=function(t){return t.get(e)}:e?e!==void 0&&(this.geometryFunction_=function(){return e}):this.geometryFunction_=Bo,this.geometry_=e}setZIndex(e){this.zIndex_=e}}function Jh(a){let e;if(typeof a=="function")e=a;else{let t;Array.isArray(a)?t=a:(oe(typeof a.getZIndex=="function","Expected an `Style` or an array of `Style`"),t=[a]),e=function(){return t}}return e}let vi=null;function qr(a,e){if(!vi){const t=new mn({color:"rgba(255,255,255,0.4)"}),n=new Yn({color:"#3399CC",width:1.25});vi=[new kt({image:new Vn({fill:t,stroke:n,radius:5}),fill:t,stroke:n})]}return vi}function Bo(a){return a.getGeometry()}const Fh="#333";class Ui{constructor(e){e=e||{},this.font_=e.font,this.rotation_=e.rotation,this.rotateWithView_=e.rotateWithView,this.keepUpright_=e.keepUpright,this.scale_=e.scale,this.scaleArray_=He(e.scale!==void 0?e.scale:1),this.text_=e.text,this.textAlign_=e.textAlign,this.justify_=e.justify,this.repeat_=e.repeat,this.textBaseline_=e.textBaseline,this.fill_=e.fill!==void 0?e.fill:new mn({color:Fh}),this.maxAngle_=e.maxAngle!==void 0?e.maxAngle:Math.PI/4,this.placement_=e.placement!==void 0?e.placement:"point",this.overflow_=!!e.overflow,this.stroke_=e.stroke!==void 0?e.stroke:null,this.offsetX_=e.offsetX!==void 0?e.offsetX:0,this.offsetY_=e.offsetY!==void 0?e.offsetY:0,this.backgroundFill_=e.backgroundFill?e.backgroundFill:null,this.backgroundStroke_=e.backgroundStroke?e.backgroundStroke:null,this.padding_=e.padding===void 0?null:e.padding,this.declutterMode_=e.declutterMode}clone(){const e=this.getScale();return new Ui({font:this.getFont(),placement:this.getPlacement(),repeat:this.getRepeat(),maxAngle:this.getMaxAngle(),overflow:this.getOverflow(),rotation:this.getRotation(),rotateWithView:this.getRotateWithView(),keepUpright:this.getKeepUpright(),scale:Array.isArray(e)?e.slice():e,text:this.getText(),textAlign:this.getTextAlign(),justify:this.getJustify(),textBaseline:this.getTextBaseline(),fill:this.getFill()?this.getFill().clone():void 0,stroke:this.getStroke()?this.getStroke().clone():void 0,offsetX:this.getOffsetX(),offsetY:this.getOffsetY(),backgroundFill:this.getBackgroundFill()?this.getBackgroundFill().clone():void 0,backgroundStroke:this.getBackgroundStroke()?this.getBackgroundStroke().clone():void 0,padding:this.getPadding()||void 0,declutterMode:this.getDeclutterMode()})}getOverflow(){return this.overflow_}getFont(){return this.font_}getMaxAngle(){return this.maxAngle_}getPlacement(){return this.placement_}getRepeat(){return this.repeat_}getOffsetX(){return this.offsetX_}getOffsetY(){return this.offsetY_}getFill(){return this.fill_}getRotateWithView(){return this.rotateWithView_}getKeepUpright(){return this.keepUpright_}getRotation(){return this.rotation_}getScale(){return this.scale_}getScaleArray(){return this.scaleArray_}getStroke(){return this.stroke_}getText(){return this.text_}getTextAlign(){return this.textAlign_}getJustify(){return this.justify_}getTextBaseline(){return this.textBaseline_}getBackgroundFill(){return this.backgroundFill_}getBackgroundStroke(){return this.backgroundStroke_}getPadding(){return this.padding_}getDeclutterMode(){return this.declutterMode_}setOverflow(e){this.overflow_=e}setFont(e){this.font_=e}setMaxAngle(e){this.maxAngle_=e}setOffsetX(e){this.offsetX_=e}setOffsetY(e){this.offsetY_=e}setPlacement(e){this.placement_=e}setRepeat(e){this.repeat_=e}setRotateWithView(e){this.rotateWithView_=e}setKeepUpright(e){this.keepUpright_=e}setFill(e){this.fill_=e}setRotation(e){this.rotation_=e}setScale(e){this.scale_=e,this.scaleArray_=He(e!==void 0?e:1)}setStroke(e){this.stroke_=e}setText(e){this.text_=e}setTextAlign(e){this.textAlign_=e}setJustify(e){this.justify_=e}setTextBaseline(e){this.textBaseline_=e}setBackgroundFill(e){this.backgroundFill_=e}setBackgroundStroke(e){this.backgroundStroke_=e}setPadding(e){this.padding_=e}}const Ee={ANIMATING:0,INTERACTING:1},H={BEGIN_GEOMETRY:0,BEGIN_PATH:1,CIRCLE:2,CLOSE_PATH:3,CUSTOM:4,DRAW_CHARS:5,DRAW_IMAGE:6,END_GEOMETRY:7,FILL:8,MOVE_TO_LINE_TO:9,SET_FILL_STYLE:10,SET_STROKE_STYLE:11,STROKE:12},Na=[H.FILL],Vt=[H.STROKE],sn=[H.BEGIN_PATH],bo=[H.CLOSE_PATH];class Aa extends Nr{constructor(e,t,n,i){super(),this.tolerance=e,this.maxExtent=t,this.pixelRatio=i,this.maxLineWidth=0,this.resolution=n,this.beginGeometryInstruction1_=null,this.beginGeometryInstruction2_=null,this.bufferedMaxExtent_=null,this.instructions=[],this.coordinates=[],this.tmpCoordinate_=[],this.hitDetectionInstructions=[],this.state={}}applyPixelRatio(e){const t=this.pixelRatio;return t==1?e:e.map(function(n){return n*t})}appendFlatPointCoordinates(e,t){const n=this.getBufferedMaxExtent(),i=this.tmpCoordinate_,l=this.coordinates;let o=l.length;for(let r=0,s=e.length;r<s;r+=t)i[0]=e[r],i[1]=e[r+1],Nn(n,i)&&(l[o++]=i[0],l[o++]=i[1]);return o}appendFlatLineCoordinates(e,t,n,i,l,o){const r=this.coordinates;let s=r.length;const h=this.getBufferedMaxExtent();o&&(t+=i);let c=e[t],u=e[t+1];const d=this.tmpCoordinate_;let m=!0,y,k,S;for(y=t+i;y<n;y+=i)d[0]=e[y],d[1]=e[y+1],S=Qi(h,d),S!==k?(m&&(r[s++]=c,r[s++]=u,m=!1),r[s++]=d[0],r[s++]=d[1]):S===Me.INTERSECTING?(r[s++]=d[0],r[s++]=d[1],m=!1):m=!0,c=d[0],u=d[1],k=S;return(l&&m||y===t+i)&&(r[s++]=c,r[s++]=u),s}drawCustomCoordinates_(e,t,n,i,l){for(let o=0,r=n.length;o<r;++o){const s=n[o],h=this.appendFlatLineCoordinates(e,t,s,i,!1,!1);l.push(h),t=s}return t}drawCustom(e,t,n,i,l){this.beginGeometry(e,t,l);const o=e.getType(),r=e.getStride(),s=this.coordinates.length;let h,c,u,d,m;switch(o){case"MultiPolygon":h=e.getOrientedFlatCoordinates(),d=[];const y=e.getEndss();m=0;for(let k=0,S=y.length;k<S;++k){const g=[];m=this.drawCustomCoordinates_(h,m,y[k],r,g),d.push(g)}this.instructions.push([H.CUSTOM,s,d,e,n,So,l]),this.hitDetectionInstructions.push([H.CUSTOM,s,d,e,i||n,So,l]);break;case"Polygon":case"MultiLineString":u=[],h=o=="Polygon"?e.getOrientedFlatCoordinates():e.getFlatCoordinates(),m=this.drawCustomCoordinates_(h,0,e.getEnds(),r,u),this.instructions.push([H.CUSTOM,s,u,e,n,Za,l]),this.hitDetectionInstructions.push([H.CUSTOM,s,u,e,i||n,Za,l]);break;case"LineString":case"Circle":h=e.getFlatCoordinates(),c=this.appendFlatLineCoordinates(h,0,h.length,r,!1,!1),this.instructions.push([H.CUSTOM,s,c,e,n,Gn,l]),this.hitDetectionInstructions.push([H.CUSTOM,s,c,e,i||n,Gn,l]);break;case"MultiPoint":h=e.getFlatCoordinates(),c=this.appendFlatPointCoordinates(h,r),c>s&&(this.instructions.push([H.CUSTOM,s,c,e,n,Gn,l]),this.hitDetectionInstructions.push([H.CUSTOM,s,c,e,i||n,Gn,l]));break;case"Point":h=e.getFlatCoordinates(),this.coordinates.push(h[0],h[1]),c=this.coordinates.length,this.instructions.push([H.CUSTOM,s,c,e,n,void 0,l]),this.hitDetectionInstructions.push([H.CUSTOM,s,c,e,i||n,void 0,l]);break}this.endGeometry(t)}beginGeometry(e,t,n){this.beginGeometryInstruction1_=[H.BEGIN_GEOMETRY,t,0,e,n],this.instructions.push(this.beginGeometryInstruction1_),this.beginGeometryInstruction2_=[H.BEGIN_GEOMETRY,t,0,e,n],this.hitDetectionInstructions.push(this.beginGeometryInstruction2_)}finish(){return{instructions:this.instructions,hitDetectionInstructions:this.hitDetectionInstructions,coordinates:this.coordinates}}reverseHitDetectionInstructions(){const e=this.hitDetectionInstructions;e.reverse();let t;const n=e.length;let i,l,o=-1;for(t=0;t<n;++t)i=e[t],l=i[0],l==H.END_GEOMETRY?o=t:l==H.BEGIN_GEOMETRY&&(i[2]=t,Es(this.hitDetectionInstructions,o,t),o=-1)}fillStyleToState(e,t={}){if(e){const n=e.getColor();t.fillPatternScale=n&&typeof n=="object"&&"src"in n?this.pixelRatio:1,t.fillStyle=St(n||Oe)}else t.fillStyle=void 0;return t}strokeStyleToState(e,t={}){if(e){const n=e.getColor();t.strokeStyle=St(n||fa);const i=e.getLineCap();t.lineCap=i!==void 0?i:Fn;const l=e.getLineDash();t.lineDash=l?l.slice():Gt;const o=e.getLineDashOffset();t.lineDashOffset=o||Bt;const r=e.getLineJoin();t.lineJoin=r!==void 0?r:Kn;const s=e.getWidth();t.lineWidth=s!==void 0?s:Ca;const h=e.getMiterLimit();t.miterLimit=h!==void 0?h:ka,t.lineWidth>this.maxLineWidth&&(this.maxLineWidth=t.lineWidth,this.bufferedMaxExtent_=null)}else t.strokeStyle=void 0,t.lineCap=void 0,t.lineDash=null,t.lineDashOffset=void 0,t.lineJoin=void 0,t.lineWidth=void 0,t.miterLimit=void 0;return t}setFillStrokeStyle(e,t){const n=this.state;this.fillStyleToState(e,n),this.strokeStyleToState(t,n)}createFill(e){const t=e.fillStyle,n=[H.SET_FILL_STYLE,t];return typeof t!="string"&&n.push(e.fillPatternScale),n}applyStroke(e){this.instructions.push(this.createStroke(e))}createStroke(e){return[H.SET_STROKE_STYLE,e.strokeStyle,e.lineWidth*this.pixelRatio,e.lineCap,e.lineJoin,e.miterLimit,e.lineDash?this.applyPixelRatio(e.lineDash):null,e.lineDashOffset*this.pixelRatio]}updateFillStyle(e,t){const n=e.fillStyle;(typeof n!="string"||e.currentFillStyle!=n)&&(n!==void 0&&this.instructions.push(t.call(this,e)),e.currentFillStyle=n)}updateStrokeStyle(e,t){const n=e.strokeStyle,i=e.lineCap,l=e.lineDash,o=e.lineDashOffset,r=e.lineJoin,s=e.lineWidth,h=e.miterLimit;(e.currentStrokeStyle!=n||e.currentLineCap!=i||l!=e.currentLineDash&&!qt(e.currentLineDash,l)||e.currentLineDashOffset!=o||e.currentLineJoin!=r||e.currentLineWidth!=s||e.currentMiterLimit!=h)&&(n!==void 0&&t.call(this,e),e.currentStrokeStyle=n,e.currentLineCap=i,e.currentLineDash=l,e.currentLineDashOffset=o,e.currentLineJoin=r,e.currentLineWidth=s,e.currentMiterLimit=h)}endGeometry(e){this.beginGeometryInstruction1_[2]=this.instructions.length,this.beginGeometryInstruction1_=null,this.beginGeometryInstruction2_[2]=this.hitDetectionInstructions.length,this.beginGeometryInstruction2_=null;const t=[H.END_GEOMETRY,e];this.instructions.push(t),this.hitDetectionInstructions.push(t)}getBufferedMaxExtent(){if(!this.bufferedMaxExtent_&&(this.bufferedMaxExtent_=lr(this.maxExtent),this.maxLineWidth>0)){const e=this.resolution*(this.maxLineWidth+1)/2;Sl(this.bufferedMaxExtent_,e,this.bufferedMaxExtent_)}return this.bufferedMaxExtent_}}class Kh extends Aa{constructor(e,t,n,i){super(e,t,n,i),this.hitDetectionImage_=null,this.image_=null,this.imagePixelRatio_=void 0,this.anchorX_=void 0,this.anchorY_=void 0,this.height_=void 0,this.opacity_=void 0,this.originX_=void 0,this.originY_=void 0,this.rotateWithView_=void 0,this.rotation_=void 0,this.scale_=void 0,this.width_=void 0,this.declutterMode_=void 0,this.declutterImageWithText_=void 0}drawPoint(e,t,n){if(!this.image_||this.maxExtent&&!Nn(this.maxExtent,e.getFlatCoordinates()))return;this.beginGeometry(e,t,n);const i=e.getFlatCoordinates(),l=e.getStride(),o=this.coordinates.length,r=this.appendFlatPointCoordinates(i,l);this.instructions.push([H.DRAW_IMAGE,o,r,this.image_,this.anchorX_*this.imagePixelRatio_,this.anchorY_*this.imagePixelRatio_,Math.ceil(this.height_*this.imagePixelRatio_),this.opacity_,this.originX_*this.imagePixelRatio_,this.originY_*this.imagePixelRatio_,this.rotateWithView_,this.rotation_,[this.scale_[0]*this.pixelRatio/this.imagePixelRatio_,this.scale_[1]*this.pixelRatio/this.imagePixelRatio_],Math.ceil(this.width_*this.imagePixelRatio_),this.declutterMode_,this.declutterImageWithText_]),this.hitDetectionInstructions.push([H.DRAW_IMAGE,o,r,this.hitDetectionImage_,this.anchorX_,this.anchorY_,this.height_,1,this.originX_,this.originY_,this.rotateWithView_,this.rotation_,this.scale_,this.width_,this.declutterMode_,this.declutterImageWithText_]),this.endGeometry(t)}drawMultiPoint(e,t,n){if(!this.image_)return;this.beginGeometry(e,t,n);const i=e.getFlatCoordinates(),l=[];for(let s=0,h=i.length;s<h;s+=e.getStride())(!this.maxExtent||Nn(this.maxExtent,i.slice(s,s+2)))&&l.push(i[s],i[s+1]);const o=this.coordinates.length,r=this.appendFlatPointCoordinates(l,2);this.instructions.push([H.DRAW_IMAGE,o,r,this.image_,this.anchorX_*this.imagePixelRatio_,this.anchorY_*this.imagePixelRatio_,Math.ceil(this.height_*this.imagePixelRatio_),this.opacity_,this.originX_*this.imagePixelRatio_,this.originY_*this.imagePixelRatio_,this.rotateWithView_,this.rotation_,[this.scale_[0]*this.pixelRatio/this.imagePixelRatio_,this.scale_[1]*this.pixelRatio/this.imagePixelRatio_],Math.ceil(this.width_*this.imagePixelRatio_),this.declutterMode_,this.declutterImageWithText_]),this.hitDetectionInstructions.push([H.DRAW_IMAGE,o,r,this.hitDetectionImage_,this.anchorX_,this.anchorY_,this.height_,1,this.originX_,this.originY_,this.rotateWithView_,this.rotation_,this.scale_,this.width_,this.declutterMode_,this.declutterImageWithText_]),this.endGeometry(t)}finish(){return this.reverseHitDetectionInstructions(),this.anchorX_=void 0,this.anchorY_=void 0,this.hitDetectionImage_=null,this.image_=null,this.imagePixelRatio_=void 0,this.height_=void 0,this.scale_=void 0,this.opacity_=void 0,this.originX_=void 0,this.originY_=void 0,this.rotateWithView_=void 0,this.rotation_=void 0,this.width_=void 0,super.finish()}setImageStyle(e,t){const n=e.getAnchor(),i=e.getSize(),l=e.getOrigin();this.imagePixelRatio_=e.getPixelRatio(this.pixelRatio),this.anchorX_=n[0],this.anchorY_=n[1],this.hitDetectionImage_=e.getHitDetectionImage(),this.image_=e.getImage(this.pixelRatio),this.height_=i[1],this.opacity_=e.getOpacity(),this.originX_=l[0],this.originY_=l[1],this.rotateWithView_=e.getRotateWithView(),this.rotation_=e.getRotation(),this.scale_=e.getScaleArray(),this.width_=i[0],this.declutterMode_=e.getDeclutterMode(),this.declutterImageWithText_=t}}class Yh extends Aa{constructor(e,t,n,i){super(e,t,n,i)}drawFlatCoordinates_(e,t,n,i){const l=this.coordinates.length,o=this.appendFlatLineCoordinates(e,t,n,i,!1,!1),r=[H.MOVE_TO_LINE_TO,l,o];return this.instructions.push(r),this.hitDetectionInstructions.push(r),n}drawLineString(e,t,n){const i=this.state,l=i.strokeStyle,o=i.lineWidth;if(l===void 0||o===void 0)return;this.updateStrokeStyle(i,this.applyStroke),this.beginGeometry(e,t,n),this.hitDetectionInstructions.push([H.SET_STROKE_STYLE,i.strokeStyle,i.lineWidth,i.lineCap,i.lineJoin,i.miterLimit,Gt,Bt],sn);const r=e.getFlatCoordinates(),s=e.getStride();this.drawFlatCoordinates_(r,0,r.length,s),this.hitDetectionInstructions.push(Vt),this.endGeometry(t)}drawMultiLineString(e,t,n){const i=this.state,l=i.strokeStyle,o=i.lineWidth;if(l===void 0||o===void 0)return;this.updateStrokeStyle(i,this.applyStroke),this.beginGeometry(e,t,n),this.hitDetectionInstructions.push([H.SET_STROKE_STYLE,i.strokeStyle,i.lineWidth,i.lineCap,i.lineJoin,i.miterLimit,Gt,Bt],sn);const r=e.getEnds(),s=e.getFlatCoordinates(),h=e.getStride();let c=0;for(let u=0,d=r.length;u<d;++u)c=this.drawFlatCoordinates_(s,c,r[u],h);this.hitDetectionInstructions.push(Vt),this.endGeometry(t)}finish(){const e=this.state;return e.lastStroke!=null&&e.lastStroke!=this.coordinates.length&&this.instructions.push(Vt),this.reverseHitDetectionInstructions(),this.state=null,super.finish()}applyStroke(e){e.lastStroke!=null&&e.lastStroke!=this.coordinates.length&&(this.instructions.push(Vt),e.lastStroke=this.coordinates.length),e.lastStroke=0,super.applyStroke(e),this.instructions.push(sn)}}class Po extends Aa{constructor(e,t,n,i){super(e,t,n,i)}drawFlatCoordinatess_(e,t,n,i){const l=this.state,o=l.fillStyle!==void 0,r=l.strokeStyle!==void 0,s=n.length;this.instructions.push(sn),this.hitDetectionInstructions.push(sn);for(let h=0;h<s;++h){const c=n[h],u=this.coordinates.length,d=this.appendFlatLineCoordinates(e,t,c,i,!0,!r),m=[H.MOVE_TO_LINE_TO,u,d];this.instructions.push(m),this.hitDetectionInstructions.push(m),r&&(this.instructions.push(bo),this.hitDetectionInstructions.push(bo)),t=c}return o&&(this.instructions.push(Na),this.hitDetectionInstructions.push(Na)),r&&(this.instructions.push(Vt),this.hitDetectionInstructions.push(Vt)),t}drawCircle(e,t,n){const i=this.state,l=i.fillStyle,o=i.strokeStyle;if(l===void 0&&o===void 0)return;this.setFillStrokeStyles_(),this.beginGeometry(e,t,n),i.fillStyle!==void 0&&this.hitDetectionInstructions.push([H.SET_FILL_STYLE,Oe]),i.strokeStyle!==void 0&&this.hitDetectionInstructions.push([H.SET_STROKE_STYLE,i.strokeStyle,i.lineWidth,i.lineCap,i.lineJoin,i.miterLimit,Gt,Bt]);const r=e.getFlatCoordinates(),s=e.getStride(),h=this.coordinates.length;this.appendFlatLineCoordinates(r,0,r.length,s,!1,!1);const c=[H.CIRCLE,h];this.instructions.push(sn,c),this.hitDetectionInstructions.push(sn,c),i.fillStyle!==void 0&&(this.instructions.push(Na),this.hitDetectionInstructions.push(Na)),i.strokeStyle!==void 0&&(this.instructions.push(Vt),this.hitDetectionInstructions.push(Vt)),this.endGeometry(t)}drawPolygon(e,t,n){const i=this.state,l=i.fillStyle,o=i.strokeStyle;if(l===void 0&&o===void 0)return;this.setFillStrokeStyles_(),this.beginGeometry(e,t,n),i.fillStyle!==void 0&&this.hitDetectionInstructions.push([H.SET_FILL_STYLE,Oe]),i.strokeStyle!==void 0&&this.hitDetectionInstructions.push([H.SET_STROKE_STYLE,i.strokeStyle,i.lineWidth,i.lineCap,i.lineJoin,i.miterLimit,Gt,Bt]);const r=e.getEnds(),s=e.getOrientedFlatCoordinates(),h=e.getStride();this.drawFlatCoordinatess_(s,0,r,h),this.endGeometry(t)}drawMultiPolygon(e,t,n){const i=this.state,l=i.fillStyle,o=i.strokeStyle;if(l===void 0&&o===void 0)return;this.setFillStrokeStyles_(),this.beginGeometry(e,t,n),i.fillStyle!==void 0&&this.hitDetectionInstructions.push([H.SET_FILL_STYLE,Oe]),i.strokeStyle!==void 0&&this.hitDetectionInstructions.push([H.SET_STROKE_STYLE,i.strokeStyle,i.lineWidth,i.lineCap,i.lineJoin,i.miterLimit,Gt,Bt]);const r=e.getEndss(),s=e.getOrientedFlatCoordinates(),h=e.getStride();let c=0;for(let u=0,d=r.length;u<d;++u)c=this.drawFlatCoordinatess_(s,c,r[u],h);this.endGeometry(t)}finish(){this.reverseHitDetectionInstructions(),this.state=null;const e=this.tolerance;if(e!==0){const t=this.coordinates;for(let n=0,i=t.length;n<i;++n)t[n]=an(t[n],e)}return super.finish()}setFillStrokeStyles_(){const e=this.state;e.fillStyle!==void 0&&this.updateFillStyle(e,this.createFill),e.strokeStyle!==void 0&&this.updateStrokeStyle(e,this.applyStroke)}}function Vh(a,e,t,n,i){const l=[];let o=t,r=0,s=e.slice(t,2);for(;r<a&&o+i<n;){const[h,c]=s.slice(-2),u=e[o+i],d=e[o+i+1],m=Math.sqrt((u-h)*(u-h)+(d-c)*(d-c));if(r+=m,r>=a){const y=(a-r+m)/m,k=Qe(h,u,y),S=Qe(c,d,y);s.push(k,S),l.push(s),s=[k,S],r==a&&(o+=i),r=0}else if(r<a)s.push(e[o+i],e[o+i+1]),o+=i;else{const y=m-r,k=Qe(h,u,y/m),S=Qe(c,d,y/m);s.push(k,S),l.push(s),s=[k,S],r=0,o+=i}}return r>0&&l.push(s),l}function Xh(a,e,t,n,i){let l=t,o=t,r=0,s=0,h=t,c,u,d,m,y,k,S,g,f,p;for(u=t;u<n;u+=i){const C=e[u],U=e[u+1];y!==void 0&&(f=C-y,p=U-k,m=Math.sqrt(f*f+p*p),S!==void 0&&(s+=d,c=Math.acos((S*f+g*p)/(d*m)),c>a&&(s>r&&(r=s,l=h,o=u),s=0,h=u-i)),d=m,S=f,g=p),y=C,k=U}return s+=m,s>r?[h,u]:[l,o]}const $a={left:0,center:.5,right:1,top:0,middle:.5,hanging:.2,alphabetic:.8,ideographic:.8,bottom:1};class zh extends Aa{constructor(e,t,n,i){super(e,t,n,i),this.labels_=null,this.text_="",this.textOffsetX_=0,this.textOffsetY_=0,this.textRotateWithView_=void 0,this.textKeepUpright_=void 0,this.textRotation_=0,this.textFillState_=null,this.fillStates={},this.fillStates[Oe]={fillStyle:Oe},this.textStrokeState_=null,this.strokeStates={},this.textState_={},this.textStates={},this.textKey_="",this.fillKey_="",this.strokeKey_="",this.declutterMode_=void 0,this.declutterImageWithText_=void 0}finish(){const e=super.finish();return e.textStates=this.textStates,e.fillStates=this.fillStates,e.strokeStates=this.strokeStates,e}drawText(e,t,n){const i=this.textFillState_,l=this.textStrokeState_,o=this.textState_;if(this.text_===""||!o||!i&&!l)return;const r=this.coordinates;let s=r.length;const h=e.getType();let c=null,u=e.getStride();if(o.placement==="line"&&(h=="LineString"||h=="MultiLineString"||h=="Polygon"||h=="MultiPolygon")){if(!ve(this.maxExtent,e.getExtent()))return;let d;if(c=e.getFlatCoordinates(),h=="LineString")d=[c.length];else if(h=="MultiLineString")d=e.getEnds();else if(h=="Polygon")d=e.getEnds().slice(0,1);else if(h=="MultiPolygon"){const S=e.getEndss();d=[];for(let g=0,f=S.length;g<f;++g)d.push(S[g][0])}this.beginGeometry(e,t,n);const m=o.repeat,y=m?void 0:o.textAlign;let k=0;for(let S=0,g=d.length;S<g;++S){let f;m?f=Vh(m*this.resolution,c,k,d[S],u):f=[c.slice(k,d[S])];for(let p=0,C=f.length;p<C;++p){const U=f[p];let L=0,w=U.length;if(y==null){const E=Xh(o.maxAngle,U,0,U.length,2);L=E[0],w=E[1]}for(let E=L;E<w;E+=u)r.push(U[E],U[E+1]);const M=r.length;k=d[S],this.drawChars_(s,M),s=M}}this.endGeometry(t)}else{let d=o.overflow?null:[];switch(h){case"Point":case"MultiPoint":c=e.getFlatCoordinates();break;case"LineString":c=e.getFlatMidpoint();break;case"Circle":c=e.getCenter();break;case"MultiLineString":c=e.getFlatMidpoints(),u=2;break;case"Polygon":c=e.getFlatInteriorPoint(),o.overflow||d.push(c[2]/this.resolution),u=3;break;case"MultiPolygon":const C=e.getFlatInteriorPoints();c=[];for(let U=0,L=C.length;U<L;U+=3)o.overflow||d.push(C[U+2]/this.resolution),c.push(C[U],C[U+1]);if(c.length===0)return;u=2;break}const m=this.appendFlatPointCoordinates(c,u);if(m===s)return;if(d&&(m-s)/2!==c.length/u){let C=s/2;d=d.filter((U,L)=>{const w=r[(C+L)*2]===c[L*u]&&r[(C+L)*2+1]===c[L*u+1];return w||--C,w})}this.saveTextStates_();const y=o.backgroundFill?this.createFill(this.fillStyleToState(o.backgroundFill)):null,k=o.backgroundStroke?this.createStroke(this.strokeStyleToState(o.backgroundStroke)):null;this.beginGeometry(e,t,n);let S=o.padding;if(S!=rn&&(o.scale[0]<0||o.scale[1]<0)){let C=o.padding[0],U=o.padding[1],L=o.padding[2],w=o.padding[3];o.scale[0]<0&&(U=-U,w=-w),o.scale[1]<0&&(C=-C,L=-L),S=[C,U,L,w]}const g=this.pixelRatio;this.instructions.push([H.DRAW_IMAGE,s,m,null,NaN,NaN,NaN,1,0,0,this.textRotateWithView_,this.textRotation_,[1,1],NaN,this.declutterMode_,this.declutterImageWithText_,S==rn?rn:S.map(function(C){return C*g}),y,k,this.text_,this.textKey_,this.strokeKey_,this.fillKey_,this.textOffsetX_,this.textOffsetY_,d]);const f=1/g,p=y?y.slice(0):null;p&&(p[1]=Oe),this.hitDetectionInstructions.push([H.DRAW_IMAGE,s,m,null,NaN,NaN,NaN,1,0,0,this.textRotateWithView_,this.textRotation_,[f,f],NaN,this.declutterMode_,this.declutterImageWithText_,S,p,k,this.text_,this.textKey_,this.strokeKey_,this.fillKey_?Oe:this.fillKey_,this.textOffsetX_,this.textOffsetY_,d]),this.endGeometry(t)}}saveTextStates_(){const e=this.textStrokeState_,t=this.textState_,n=this.textFillState_,i=this.strokeKey_;e&&(i in this.strokeStates||(this.strokeStates[i]={strokeStyle:e.strokeStyle,lineCap:e.lineCap,lineDashOffset:e.lineDashOffset,lineWidth:e.lineWidth,lineJoin:e.lineJoin,miterLimit:e.miterLimit,lineDash:e.lineDash}));const l=this.textKey_;l in this.textStates||(this.textStates[l]={font:t.font,textAlign:t.textAlign||ga,justify:t.justify,textBaseline:t.textBaseline||ja,scale:t.scale});const o=this.fillKey_;n&&(o in this.fillStates||(this.fillStates[o]={fillStyle:n.fillStyle}))}drawChars_(e,t){const n=this.textStrokeState_,i=this.textState_,l=this.strokeKey_,o=this.textKey_,r=this.fillKey_;this.saveTextStates_();const s=this.pixelRatio,h=$a[i.textBaseline],c=this.textOffsetY_*s,u=this.text_,d=n?n.lineWidth*Math.abs(i.scale[0])/2:0;this.instructions.push([H.DRAW_CHARS,e,t,h,i.overflow,r,i.maxAngle,s,c,l,d*s,u,o,1,this.declutterMode_,this.textKeepUpright_]),this.hitDetectionInstructions.push([H.DRAW_CHARS,e,t,h,i.overflow,r&&Oe,i.maxAngle,s,c,l,d*s,u,o,1/s,this.declutterMode_,this.textKeepUpright_])}setTextStyle(e,t){let n,i,l;if(!e)this.text_="";else{const o=e.getFill();o?(i=this.textFillState_,i||(i={},this.textFillState_=i),i.fillStyle=St(o.getColor()||Oe)):(i=null,this.textFillState_=i);const r=e.getStroke();if(!r)l=null,this.textStrokeState_=l;else{l=this.textStrokeState_,l||(l={},this.textStrokeState_=l);const k=r.getLineDash(),S=r.getLineDashOffset(),g=r.getWidth(),f=r.getMiterLimit();l.lineCap=r.getLineCap()||Fn,l.lineDash=k?k.slice():Gt,l.lineDashOffset=S===void 0?Bt:S,l.lineJoin=r.getLineJoin()||Kn,l.lineWidth=g===void 0?Ca:g,l.miterLimit=f===void 0?ka:f,l.strokeStyle=St(r.getColor()||fa)}n=this.textState_;const s=e.getFont()||Jr;yh(s);const h=e.getScaleArray();n.overflow=e.getOverflow(),n.font=s,n.maxAngle=e.getMaxAngle(),n.placement=e.getPlacement(),n.textAlign=e.getTextAlign(),n.repeat=e.getRepeat(),n.justify=e.getJustify(),n.textBaseline=e.getTextBaseline()||ja,n.backgroundFill=e.getBackgroundFill(),n.backgroundStroke=e.getBackgroundStroke(),n.padding=e.getPadding()||rn,n.scale=h===void 0?[1,1]:h;const c=e.getOffsetX(),u=e.getOffsetY(),d=e.getRotateWithView(),m=e.getKeepUpright(),y=e.getRotation();this.text_=e.getText()||"",this.textOffsetX_=c===void 0?0:c,this.textOffsetY_=u===void 0?0:u,this.textRotateWithView_=d===void 0?!1:d,this.textKeepUpright_=m===void 0?!0:m,this.textRotation_=y===void 0?0:y,this.strokeKey_=l?(typeof l.strokeStyle=="string"?l.strokeStyle:ae(l.strokeStyle))+l.lineCap+l.lineDashOffset+"|"+l.lineWidth+l.lineJoin+l.miterLimit+"["+l.lineDash.join()+"]":"",this.textKey_=n.font+n.scale+(n.textAlign||"?")+(n.repeat||"?")+(n.justify||"?")+(n.textBaseline||"?"),this.fillKey_=i&&i.fillStyle?typeof i.fillStyle=="string"?i.fillStyle:"|"+ae(i.fillStyle):""}this.declutterMode_=e.getDeclutterMode(),this.declutterImageWithText_=t}}const Zh={Circle:Po,Default:Aa,Image:Kh,LineString:Yh,Polygon:Po,Text:zh};class qh{constructor(e,t,n,i){this.tolerance_=e,this.maxExtent_=t,this.pixelRatio_=i,this.resolution_=n,this.buildersByZIndex_={}}finish(){const e={};for(const t in this.buildersByZIndex_){e[t]=e[t]||{};const n=this.buildersByZIndex_[t];for(const i in n){const l=n[i].finish();e[t][i]=l}}return e}getBuilder(e,t){const n=e!==void 0?e.toString():"0";let i=this.buildersByZIndex_[n];i===void 0&&(i={},this.buildersByZIndex_[n]=i);let l=i[t];if(l===void 0){const o=Zh[t];l=new o(this.tolerance_,this.maxExtent_,this.resolution_,this.pixelRatio_),i[t]=l}return l}}function jh(a,e,t,n,i,l,o,r,s,h,c,u,d=!0){let m=a[e],y=a[e+1],k=0,S=0,g=0,f=0;function p(){k=m,S=y,e+=n,m=a[e],y=a[e+1],f+=g,g=Math.sqrt((m-k)*(m-k)+(y-S)*(y-S))}do p();while(e<t-n&&f+g<l);let C=g===0?0:(l-f)/g;const U=Qe(k,m,C),L=Qe(S,y,C),w=e-n,M=f,E=l+r*s(h,i,c);for(;e<t-n&&f+g<E;)p();C=g===0?0:(E-f)/g;const G=Qe(k,m,C),P=Qe(S,y,C);let D=!1;if(d)if(u){const V=[U,L,G,P];Lr(V,0,4,2,u,V,V),D=V[0]>V[2]}else D=U>G;const b=Math.PI,O=[],F=w+n===e;e=w,g=0,f=M,m=a[e],y=a[e+1];let N;if(F){p(),N=Math.atan2(y-S,m-k),D&&(N+=N>0?-b:b);const V=(G+U)/2,v=(P+L)/2;return O[0]=[V,v,(E-l)/2,N,i],O}i=i.replace(/\n/g," ");for(let V=0,v=i.length;V<v;){p();let K=Math.atan2(y-S,m-k);if(D&&(K+=K>0?-b:b),N!==void 0){let he=K-N;if(he+=he>b?-2*b:he<-b?2*b:0,Math.abs(he)>o)return null}N=K;const Z=V;let ee=0;for(;V<v;++V){const he=D?v-V-1:V,Ce=r*s(h,i[he],c);if(e+n<t&&f+g<l+ee+Ce/2)break;ee+=Ce}if(V===Z)continue;const I=D?i.substring(v-Z,v-V):i.substring(Z,V);C=g===0?0:(l+ee/2-f)/g;const fe=Qe(k,m,C),me=Qe(S,y,C);O.push([fe,me,ee/2,K,I]),l+=ee}return O}class jr{constructor(){Xl(this,"pushMethodArgs_",(...e)=>(this.push_(e),this));this.instructions_=[],this.zIndex=0,this.offset_=0,this.context_=new Proxy(qa(),{get:(e,t)=>{if(typeof qa()[t]=="function")return this.push_(t),this.pushMethodArgs_},set:(e,t,n)=>(this.push_(t,n),!0)})}push_(...e){const t=this.instructions_,n=this.zIndex+this.offset_;t[n]||(t[n]=[]),t[n].push(...e)}pushFunction(e){this.push_(e)}getContext(){return this.context_}draw(e){this.instructions_.forEach(t=>{for(let n=0,i=t.length;n<i;++n){const l=t[n];if(typeof l=="function"){l(e);continue}const o=t[++n];if(typeof e[l]=="function")e[l](...o);else{if(typeof o=="function"){e[l]=o(e);continue}e[l]=o}}})}clear(){this.instructions_.length=0,this.zIndex=0,this.offset_=0}offset(){this.offset_=this.instructions_.length,this.zIndex=0}}const pn=nt(),vt=[],At=[],Wt=[],Nt=[];function Do(a){return a[3].declutterBox}const Oo=new RegExp("[֑-ࣿיִ-﷿ﹰ-ﻼࠀ-࿿-]");function Ni(a,e){return e==="start"?e=Oo.test(a)?"right":"left":e==="end"&&(e=Oo.test(a)?"left":"right"),$a[e]}function Qh(a,e,t){return t>0&&a.push(`
`,""),a.push(e,""),a}function $h(a,e,t){return t%2===0&&(a+=e),a}class ec{constructor(e,t,n,i,l){this.overlaps=n,this.pixelRatio=t,this.resolution=e,this.alignAndScaleFill_,this.instructions=i.instructions,this.coordinates=i.coordinates,this.coordinateCache_={},this.renderedTransform_=ot(),this.hitDetectionInstructions=i.hitDetectionInstructions,this.pixelCoordinates_=null,this.viewRotation_=0,this.fillStates=i.fillStates||{},this.strokeStates=i.strokeStates||{},this.textStates=i.textStates||{},this.widths_={},this.labels_={},this.zIndexContext_=l?new jr:null}getZIndexContext(){return this.zIndexContext_}createLabel(e,t,n,i){const l=e+t+n+i;if(this.labels_[l])return this.labels_[l];const o=i?this.strokeStates[i]:null,r=n?this.fillStates[n]:null,s=this.textStates[t],h=this.pixelRatio,c=[s.scale[0]*h,s.scale[1]*h],u=s.justify?$a[s.justify]:Ni(Array.isArray(e)?e[0]:e,s.textAlign||ga),d=i&&o.lineWidth?o.lineWidth:0,m=Array.isArray(e)?e:String(e).split(`
`).reduce(Qh,[]),{width:y,height:k,widths:S,heights:g,lineWidths:f}=kh(s,m),p=y+d,C=[],U=(p+2)*c[0],L=(k+d)*c[1],w={width:U<0?Math.floor(U):Math.ceil(U),height:L<0?Math.floor(L):Math.ceil(L),contextInstructions:C};(c[0]!=1||c[1]!=1)&&C.push("scale",c),i&&(C.push("strokeStyle",o.strokeStyle),C.push("lineWidth",d),C.push("lineCap",o.lineCap),C.push("lineJoin",o.lineJoin),C.push("miterLimit",o.miterLimit),C.push("setLineDash",[o.lineDash]),C.push("lineDashOffset",o.lineDashOffset)),n&&C.push("fillStyle",r.fillStyle),C.push("textBaseline","middle"),C.push("textAlign","center");const M=.5-u;let E=u*p+M*d;const G=[],P=[];let D=0,b=0,O=0,F=0,N;for(let V=0,v=m.length;V<v;V+=2){const K=m[V];if(K===`
`){b+=D,D=0,E=u*p+M*d,++F;continue}const Z=m[V+1]||s.font;Z!==N&&(i&&G.push("font",Z),n&&P.push("font",Z),N=Z),D=Math.max(D,g[O]);const ee=[K,E+M*S[O]+u*(S[O]-f[F]),.5*(d+D)+b];E+=S[O],i&&G.push("strokeText",ee),n&&P.push("fillText",ee),++O}return Array.prototype.push.apply(C,G),Array.prototype.push.apply(C,P),this.labels_[l]=w,w}replayTextBackground_(e,t,n,i,l,o,r){e.beginPath(),e.moveTo.apply(e,t),e.lineTo.apply(e,n),e.lineTo.apply(e,i),e.lineTo.apply(e,l),e.lineTo.apply(e,t),o&&(this.alignAndScaleFill_=o[2],e.fillStyle=o[1],this.fill_(e)),r&&(this.setStrokeStyle_(e,r),e.stroke())}calculateImageOrLabelDimensions_(e,t,n,i,l,o,r,s,h,c,u,d,m,y,k,S){r*=d[0],s*=d[1];let g=n-r,f=i-s;const p=l+h>e?e-h:l,C=o+c>t?t-c:o,U=y[3]+p*d[0]+y[1],L=y[0]+C*d[1]+y[2],w=g-y[3],M=f-y[0];(k||u!==0)&&(vt[0]=w,Nt[0]=w,vt[1]=M,At[1]=M,At[0]=w+U,Wt[0]=At[0],Wt[1]=M+L,Nt[1]=Wt[1]);let E;return u!==0?(E=bt(ot(),n,i,1,1,u,-n,-i),Le(E,vt),Le(E,At),Le(E,Wt),Le(E,Nt),Zt(Math.min(vt[0],At[0],Wt[0],Nt[0]),Math.min(vt[1],At[1],Wt[1],Nt[1]),Math.max(vt[0],At[0],Wt[0],Nt[0]),Math.max(vt[1],At[1],Wt[1],Nt[1]),pn)):Zt(Math.min(w,w+U),Math.min(M,M+L),Math.max(w,w+U),Math.max(M,M+L),pn),m&&(g=Math.round(g),f=Math.round(f)),{drawImageX:g,drawImageY:f,drawImageW:p,drawImageH:C,originX:h,originY:c,declutterBox:{minX:pn[0],minY:pn[1],maxX:pn[2],maxY:pn[3],value:S},canvasTransform:E,scale:d}}replayImageOrLabel_(e,t,n,i,l,o,r){const s=!!(o||r),h=i.declutterBox,c=r?r[2]*i.scale[0]/2:0;return h.minX-c<=t[0]&&h.maxX+c>=0&&h.minY-c<=t[1]&&h.maxY+c>=0&&(s&&this.replayTextBackground_(e,vt,At,Wt,Nt,o,r),fh(e,i.canvasTransform,l,n,i.originX,i.originY,i.drawImageW,i.drawImageH,i.drawImageX,i.drawImageY,i.scale)),!0}fill_(e){const t=this.alignAndScaleFill_;if(t){const n=Le(this.renderedTransform_,[0,0]),i=512*this.pixelRatio;e.save(),e.translate(n[0]%i,n[1]%i),t!==1&&e.scale(t,t),e.rotate(this.viewRotation_)}e.fill(),t&&e.restore()}setStrokeStyle_(e,t){e.strokeStyle=t[1],e.lineWidth=t[2],e.lineCap=t[3],e.lineJoin=t[4],e.miterLimit=t[5],e.lineDashOffset=t[7],e.setLineDash(t[6])}drawLabelWithPointPlacement_(e,t,n,i){const l=this.textStates[t],o=this.createLabel(e,t,i,n),r=this.strokeStates[n],s=this.pixelRatio,h=Ni(Array.isArray(e)?e[0]:e,l.textAlign||ga),c=$a[l.textBaseline||ja],u=r&&r.lineWidth?r.lineWidth:0,d=o.width/s-2*l.scale[0],m=h*d+2*(.5-h)*u,y=c*o.height/s+2*(.5-c)*u;return{label:o,anchorX:m,anchorY:y}}execute_(e,t,n,i,l,o,r,s){const h=this.zIndexContext_;let c;this.pixelCoordinates_&&qt(n,this.renderedTransform_)?c=this.pixelCoordinates_:(this.pixelCoordinates_||(this.pixelCoordinates_=[]),c=zt(this.coordinates,0,this.coordinates.length,2,n,this.pixelCoordinates_),U1(this.renderedTransform_,n));let u=0;const d=i.length;let m=0,y,k,S,g,f,p,C,U,L,w,M,E,G,P=0,D=0;const b=this.coordinateCache_,O=this.viewRotation_,F=Math.round(Math.atan2(-n[1],n[0])*1e12)/1e12,N={context:e,pixelRatio:this.pixelRatio,resolution:this.resolution,rotation:O},V=this.instructions!=i||this.overlaps?0:200;let v,K,Z,ee;for(;u<d;){const I=i[u];switch(I[0]){case H.BEGIN_GEOMETRY:v=I[1],ee=I[3],v.getGeometry()?r!==void 0&&!ve(r,ee.getExtent())?u=I[2]+1:++u:u=I[2],h&&(h.zIndex=I[4]);break;case H.BEGIN_PATH:P>V&&(this.fill_(e),P=0),D>V&&(e.stroke(),D=0),!P&&!D&&(e.beginPath(),f=NaN,p=NaN),++u;break;case H.CIRCLE:m=I[1];const me=c[m],he=c[m+1],Ce=c[m+2],ge=c[m+3],Re=Ce-me,We=ge-he,_e=Math.sqrt(Re*Re+We*We);e.moveTo(me+_e,he),e.arc(me,he,_e,0,2*Math.PI,!0),++u;break;case H.CLOSE_PATH:e.closePath(),++u;break;case H.CUSTOM:m=I[1],y=I[2];const _=I[3],W=I[4],T=I[5];N.geometry=_,N.feature=v,u in b||(b[u]=[]);const R=b[u];T?T(c,m,y,2,R):(R[0]=c[m],R[1]=c[m+1],R.length=2),h&&(h.zIndex=I[6]),W(R,N),++u;break;case H.DRAW_IMAGE:m=I[1],y=I[2],L=I[3],k=I[4],S=I[5];let x=I[6];const X=I[7],ie=I[8],B=I[9],le=I[10];let ce=I[11];const Ye=I[12];let Fe=I[13];g=I[14]||"declutter";const ue=I[15];if(!L&&I.length>=20){w=I[19],M=I[20],E=I[21],G=I[22];const Ie=this.drawLabelWithPointPlacement_(w,M,E,G);L=Ie.label,I[3]=L;const ct=I[23];k=(Ie.anchorX-ct)*this.pixelRatio,I[4]=k;const Ze=I[24];S=(Ie.anchorY-Ze)*this.pixelRatio,I[5]=S,x=L.height,I[6]=x,Fe=L.width,I[13]=Fe}let Ve;I.length>25&&(Ve=I[25]);let ft,Xe,Pe;I.length>17?(ft=I[16],Xe=I[17],Pe=I[18]):(ft=rn,Xe=null,Pe=null),le&&F?ce+=O:!le&&!F&&(ce-=O);let jt=0;for(;m<y;m+=2){if(Ve&&Ve[jt++]<Fe/this.pixelRatio)continue;const Ie=this.calculateImageOrLabelDimensions_(L.width,L.height,c[m],c[m+1],Fe,x,k,S,ie,B,ce,Ye,l,ft,!!Xe||!!Pe,v),ct=[e,t,L,Ie,X,Xe,Pe];if(s){let Ze,ut,qe;if(ue){const Se=y-m;if(!ue[Se]){ue[Se]={args:ct,declutterMode:g};continue}const Ge=ue[Se];Ze=Ge.args,ut=Ge.declutterMode,delete ue[Se],qe=Do(Ze)}let _t,Mt;if(Ze&&(ut!=="declutter"||!s.collides(qe))&&(_t=!0),(g!=="declutter"||!s.collides(Ie.declutterBox))&&(Mt=!0),ut==="declutter"&&g==="declutter"){const Se=_t&&Mt;_t=Se,Mt=Se}_t&&(ut!=="none"&&s.insert(qe),this.replayImageOrLabel_.apply(this,Ze)),Mt&&(g!=="none"&&s.insert(Ie.declutterBox),this.replayImageOrLabel_.apply(this,ct))}else this.replayImageOrLabel_.apply(this,ct)}++u;break;case H.DRAW_CHARS:const Ot=I[1],gt=I[2],Ct=I[3],ht=I[4];G=I[5];const ze=I[6],fn=I[7],Ut=I[8];E=I[9];const Qt=I[10];w=I[11],Array.isArray(w)&&(w=w.reduce($h,"")),M=I[12];const gn=[I[13],I[13]];g=I[14]||"declutter";const Ea=I[15],$t=this.textStates[M],pt=$t.font,Ke=[$t.scale[0]*fn,$t.scale[1]*fn];let en;pt in this.widths_?en=this.widths_[pt]:(en={},this.widths_[pt]=en);const Ra=Y1(c,Ot,gt,2),Zn=Math.abs(Ke[0])*Mo(pt,w,en);if(ht||Zn<=Ra){const Ie=this.textStates[M].textAlign,ct=(Ra-Zn)*Ni(w,Ie),Ze=jh(c,Ot,gt,2,w,ct,ze,Math.abs(Ke[0]),Mo,pt,en,F?0:this.viewRotation_,Ea);e:if(Ze){const ut=[];let qe,_t,Mt,Se,Ge;if(E)for(qe=0,_t=Ze.length;qe<_t;++qe){Ge=Ze[qe],Mt=Ge[4],Se=this.createLabel(Mt,M,"",E),k=Ge[2]+(Ke[0]<0?-Qt:Qt),S=Ct*Se.height+(.5-Ct)*2*Qt*Ke[1]/Ke[0]-Ut;const Lt=this.calculateImageOrLabelDimensions_(Se.width,Se.height,Ge[0],Ge[1],Se.width,Se.height,k,S,0,0,Ge[3],gn,!1,rn,!1,v);if(s&&g==="declutter"&&s.collides(Lt.declutterBox))break e;ut.push([e,t,Se,Lt,1,null,null])}if(G)for(qe=0,_t=Ze.length;qe<_t;++qe){Ge=Ze[qe],Mt=Ge[4],Se=this.createLabel(Mt,M,G,""),k=Ge[2],S=Ct*Se.height-Ut;const Lt=this.calculateImageOrLabelDimensions_(Se.width,Se.height,Ge[0],Ge[1],Se.width,Se.height,k,S,0,0,Ge[3],gn,!1,rn,!1,v);if(s&&g==="declutter"&&s.collides(Lt.declutterBox))break e;ut.push([e,t,Se,Lt,1,null,null])}s&&g!=="none"&&s.load(ut.map(Do));for(let Lt=0,Ms=ut.length;Lt<Ms;++Lt)this.replayImageOrLabel_.apply(this,ut[Lt])}}++u;break;case H.END_GEOMETRY:if(o!==void 0){v=I[1];const Ie=o(v,ee,g);if(Ie)return Ie}++u;break;case H.FILL:V?P++:this.fill_(e),++u;break;case H.MOVE_TO_LINE_TO:for(m=I[1],y=I[2],K=c[m],Z=c[m+1],e.moveTo(K,Z),f=K+.5|0,p=Z+.5|0,m+=2;m<y;m+=2)K=c[m],Z=c[m+1],C=K+.5|0,U=Z+.5|0,(m==y-2||C!==f||U!==p)&&(e.lineTo(K,Z),f=C,p=U);++u;break;case H.SET_FILL_STYLE:this.alignAndScaleFill_=I[2],P&&(this.fill_(e),P=0,D&&(e.stroke(),D=0)),e.fillStyle=I[1],++u;break;case H.SET_STROKE_STYLE:D&&(e.stroke(),D=0),this.setStrokeStyle_(e,I),++u;break;case H.STROKE:V?D++:e.stroke(),++u;break;default:++u;break}}P&&this.fill_(e),D&&e.stroke()}execute(e,t,n,i,l,o){this.viewRotation_=i,this.execute_(e,t,n,this.instructions,l,void 0,void 0,o)}executeHitDetection(e,t,n,i,l){return this.viewRotation_=n,this.execute_(e,[e.canvas.width,e.canvas.height],t,this.hitDetectionInstructions,!0,i,l)}}const Bn=["Polygon","Circle","LineString","Image","Text","Default"],Qr=["Image","Text"],tc=Bn.filter(a=>!Qr.includes(a));class nc{constructor(e,t,n,i,l,o,r){this.maxExtent_=e,this.overlaps_=i,this.pixelRatio_=n,this.resolution_=t,this.renderBuffer_=o,this.executorsByZIndex_={},this.hitDetectionContext_=null,this.hitDetectionTransform_=ot(),this.renderedContext_=null,this.deferredZIndexContexts_={},this.createExecutors_(l,r)}clip(e,t){const n=this.getClipCoords(t);e.beginPath(),e.moveTo(n[0],n[1]),e.lineTo(n[2],n[3]),e.lineTo(n[4],n[5]),e.lineTo(n[6],n[7]),e.clip()}createExecutors_(e,t){for(const n in e){let i=this.executorsByZIndex_[n];i===void 0&&(i={},this.executorsByZIndex_[n]=i);const l=e[n];for(const o in l){const r=l[o];i[o]=new ec(this.resolution_,this.pixelRatio_,this.overlaps_,r,t)}}}hasExecutors(e){for(const t in this.executorsByZIndex_){const n=this.executorsByZIndex_[t];for(let i=0,l=e.length;i<l;++i)if(e[i]in n)return!0}return!1}forEachFeatureAtCoordinate(e,t,n,i,l,o){i=Math.round(i);const r=i*2+1,s=bt(this.hitDetectionTransform_,i+.5,i+.5,1/t,-1/t,-n,-e[0],-e[1]),h=!this.hitDetectionContext_;h&&(this.hitDetectionContext_=pe(r,r));const c=this.hitDetectionContext_;c.canvas.width!==r||c.canvas.height!==r?(c.canvas.width=r,c.canvas.height=r):h||c.clearRect(0,0,r,r);let u;this.renderBuffer_!==void 0&&(u=nt(),ra(u,e),Sl(u,t*(this.renderBuffer_+i),u));const d=ac(i);let m;function y(U,L,w){const M=c.getImageData(0,0,r,r).data;for(let E=0,G=d.length;E<G;E++)if(M[d[E]]>0){if(!o||w==="none"||m!=="Image"&&m!=="Text"||o.includes(U)){const P=(d[E]-3)/4,D=i-P%r,b=i-(P/r|0),O=l(U,L,D*D+b*b);if(O)return O}c.clearRect(0,0,r,r);break}}const k=Object.keys(this.executorsByZIndex_).map(Number);k.sort(It);let S,g,f,p,C;for(S=k.length-1;S>=0;--S){const U=k[S].toString();for(f=this.executorsByZIndex_[U],g=Bn.length-1;g>=0;--g)if(m=Bn[g],p=f[m],p!==void 0&&(C=p.executeHitDetection(c,s,n,y,u),C))return C}}getClipCoords(e){const t=this.maxExtent_;if(!t)return null;const n=t[0],i=t[1],l=t[2],o=t[3],r=[n,i,n,o,l,o,l,i];return zt(r,0,8,2,e,r),r}isEmpty(){return vn(this.executorsByZIndex_)}execute(e,t,n,i,l,o,r){const s=Object.keys(this.executorsByZIndex_).map(Number);s.sort(r?ws:It),o=o||Bn;const h=Bn.length;for(let c=0,u=s.length;c<u;++c){const d=s[c].toString(),m=this.executorsByZIndex_[d];for(let y=0,k=o.length;y<k;++y){const S=o[y],g=m[S];if(g!==void 0){const f=r===null?void 0:g.getZIndexContext(),p=f?f.getContext():e,C=this.maxExtent_&&S!=="Image"&&S!=="Text";if(C&&(p.save(),this.clip(p,n)),!f||S==="Text"||S==="Image"?g.execute(p,t,n,i,l,r):f.pushFunction(U=>g.execute(U,t,n,i,l,r)),C&&p.restore(),f){f.offset();const U=s[c]*h+y;this.deferredZIndexContexts_[U]||(this.deferredZIndexContexts_[U]=[]),this.deferredZIndexContexts_[U].push(f)}}}}this.renderedContext_=e}getDeferredZIndexContexts(){return this.deferredZIndexContexts_}getRenderedContext(){return this.renderedContext_}renderDeferred(){const e=this.deferredZIndexContexts_,t=Object.keys(e).map(Number).sort(It);for(let n=0,i=t.length;n<i;++n)e[t[n]].forEach(l=>{l.draw(this.renderedContext_),l.clear()}),e[t[n]].length=0}}const Hi={};function ac(a){if(Hi[a]!==void 0)return Hi[a];const e=a*2+1,t=a*a,n=new Array(t+1);for(let l=0;l<=a;++l)for(let o=0;o<=a;++o){const r=l*l+o*o;if(r>t)break;let s=n[r];s||(s=[],n[r]=s),s.push(((a+l)*e+(a+o))*4+3),l>0&&s.push(((a-l)*e+(a+o))*4+3),o>0&&(s.push(((a+l)*e+(a-o))*4+3),l>0&&s.push(((a-l)*e+(a-o))*4+3))}const i=[];for(let l=0,o=n.length;l<o;++l)n[l]&&i.push(...n[l]);return Hi[a]=i,i}function xo(a,e,t,n){return t!==void 0&&n!==void 0?[t/a,n/e]:t!==void 0?t/a:n!==void 0?n/e:1}class pi extends gi{constructor(e){e=e||{};const t=e.opacity!==void 0?e.opacity:1,n=e.rotation!==void 0?e.rotation:0,i=e.scale!==void 0?e.scale:1,l=e.rotateWithView!==void 0?e.rotateWithView:!1;super({opacity:t,rotation:n,scale:i,displacement:e.displacement!==void 0?e.displacement:[0,0],rotateWithView:l,declutterMode:e.declutterMode}),this.anchor_=e.anchor!==void 0?e.anchor:[.5,.5],this.normalizedAnchor_=null,this.anchorOrigin_=e.anchorOrigin!==void 0?e.anchorOrigin:"top-left",this.anchorXUnits_=e.anchorXUnits!==void 0?e.anchorXUnits:"fraction",this.anchorYUnits_=e.anchorYUnits!==void 0?e.anchorYUnits:"fraction",this.crossOrigin_=e.crossOrigin!==void 0?e.crossOrigin:null;const o=e.img!==void 0?e.img:null;let r=e.src;oe(!(r!==void 0&&o),"`image` and `src` cannot be provided at the same time"),(r===void 0||r.length===0)&&o&&(r=o.src||ae(o)),oe(r!==void 0&&r.length>0,"A defined and non-empty `src` or `image` must be provided"),oe(!((e.width!==void 0||e.height!==void 0)&&e.scale!==void 0),"`width` or `height` cannot be provided together with `scale`");let s;if(e.src!==void 0?s=j.IDLE:o!==void 0&&("complete"in o?o.complete?s=o.src?j.LOADED:j.IDLE:s=j.LOADING:s=j.LOADED),this.color_=e.color!==void 0?Jn(e.color):null,this.iconImage_=Gl(o,r,this.crossOrigin_,s,this.color_),this.offset_=e.offset!==void 0?e.offset:[0,0],this.offsetOrigin_=e.offsetOrigin!==void 0?e.offsetOrigin:"top-left",this.origin_=null,this.size_=e.size!==void 0?e.size:null,this.initialOptions_,e.width!==void 0||e.height!==void 0){let h,c;if(e.size)[h,c]=e.size;else{const u=this.getImage(1);if(u.width&&u.height)h=u.width,c=u.height;else if(u instanceof HTMLImageElement){this.initialOptions_=e;const d=()=>{if(this.unlistenImageChange(d),!this.initialOptions_)return;const m=this.iconImage_.getSize();this.setScale(xo(m[0],m[1],e.width,e.height))};this.listenImageChange(d);return}}h!==void 0&&this.setScale(xo(h,c,e.width,e.height))}}clone(){let e,t,n;return this.initialOptions_?(t=this.initialOptions_.width,n=this.initialOptions_.height):(e=this.getScale(),e=Array.isArray(e)?e.slice():e),new pi({anchor:this.anchor_.slice(),anchorOrigin:this.anchorOrigin_,anchorXUnits:this.anchorXUnits_,anchorYUnits:this.anchorYUnits_,color:this.color_&&this.color_.slice?this.color_.slice():this.color_||void 0,crossOrigin:this.crossOrigin_,offset:this.offset_.slice(),offsetOrigin:this.offsetOrigin_,opacity:this.getOpacity(),rotateWithView:this.getRotateWithView(),rotation:this.getRotation(),scale:e,width:t,height:n,size:this.size_!==null?this.size_.slice():void 0,src:this.getSrc(),displacement:this.getDisplacement().slice(),declutterMode:this.getDeclutterMode()})}getAnchor(){let e=this.normalizedAnchor_;if(!e){e=this.anchor_;const i=this.getSize();if(this.anchorXUnits_=="fraction"||this.anchorYUnits_=="fraction"){if(!i)return null;e=this.anchor_.slice(),this.anchorXUnits_=="fraction"&&(e[0]*=i[0]),this.anchorYUnits_=="fraction"&&(e[1]*=i[1])}if(this.anchorOrigin_!="top-left"){if(!i)return null;e===this.anchor_&&(e=this.anchor_.slice()),(this.anchorOrigin_=="top-right"||this.anchorOrigin_=="bottom-right")&&(e[0]=-e[0]+i[0]),(this.anchorOrigin_=="bottom-left"||this.anchorOrigin_=="bottom-right")&&(e[1]=-e[1]+i[1])}this.normalizedAnchor_=e}const t=this.getDisplacement(),n=this.getScaleArray();return[e[0]-t[0]/n[0],e[1]+t[1]/n[1]]}setAnchor(e){this.anchor_=e,this.normalizedAnchor_=null}getColor(){return this.color_}getImage(e){return this.iconImage_.getImage(e)}getPixelRatio(e){return this.iconImage_.getPixelRatio(e)}getImageSize(){return this.iconImage_.getSize()}getImageState(){return this.iconImage_.getImageState()}getHitDetectionImage(){return this.iconImage_.getHitDetectionImage()}getOrigin(){if(this.origin_)return this.origin_;let e=this.offset_;if(this.offsetOrigin_!="top-left"){const t=this.getSize(),n=this.iconImage_.getSize();if(!t||!n)return null;e=e.slice(),(this.offsetOrigin_=="top-right"||this.offsetOrigin_=="bottom-right")&&(e[0]=n[0]-t[0]-e[0]),(this.offsetOrigin_=="bottom-left"||this.offsetOrigin_=="bottom-right")&&(e[1]=n[1]-t[1]-e[1])}return this.origin_=e,this.origin_}getSrc(){return this.iconImage_.getSrc()}getSize(){return this.size_?this.size_:this.iconImage_.getSize()}getWidth(){const e=this.getScaleArray();if(this.size_)return this.size_[0]*e[0];if(this.iconImage_.getImageState()==j.LOADED)return this.iconImage_.getSize()[0]*e[0]}getHeight(){const e=this.getScaleArray();if(this.size_)return this.size_[1]*e[1];if(this.iconImage_.getImageState()==j.LOADED)return this.iconImage_.getSize()[1]*e[1]}setScale(e){delete this.initialOptions_,super.setScale(e)}listenImageChange(e){this.iconImage_.addEventListener(z.CHANGE,e)}load(){this.iconImage_.load()}unlistenImageChange(e){this.iconImage_.removeEventListener(z.CHANGE,e)}ready(){return this.iconImage_.ready()}}const dt=.5;function ic(a,e,t,n,i,l,o,r,s){const h=i,c=a[0]*dt,u=a[1]*dt,d=pe(c,u);d.imageSmoothingEnabled=!1;const m=d.canvas,y=new Ch(d,dt,i,null,o,r,null),k=t.length,S=Math.floor((256*256*256-1)/k),g={};for(let p=1;p<=k;++p){const C=t[p-1],U=C.getStyleFunction()||n;if(!U)continue;let L=U(C,l);if(!L)continue;Array.isArray(L)||(L=[L]);const M=(p*S).toString(16).padStart(7,"#00000");for(let E=0,G=L.length;E<G;++E){const P=L[E],D=P.getGeometryFunction()(C);if(!D||!ve(h,D.getExtent()))continue;const b=P.clone(),O=b.getFill();O&&O.setColor(M);const F=b.getStroke();F&&(F.setColor(M),F.setLineDash(null)),b.setText(void 0);const N=P.getImage();if(N){const Z=N.getImageSize();if(!Z)continue;const ee=pe(Z[0],Z[1],void 0,{alpha:!1}),I=ee.canvas;ee.fillStyle=M,ee.fillRect(0,0,I.width,I.height),b.setImage(new pi({img:I,anchor:N.getAnchor(),anchorXUnits:"pixels",anchorYUnits:"pixels",offset:N.getOrigin(),opacity:1,size:N.getSize(),scale:N.getScale(),rotation:N.getRotation(),rotateWithView:N.getRotateWithView()}))}const V=b.getZIndex()||0;let v=g[V];v||(v={},g[V]=v,v.Polygon=[],v.Circle=[],v.LineString=[],v.Point=[]);const K=D.getType();if(K==="GeometryCollection"){const Z=D.getGeometriesArrayRecursive();for(let ee=0,I=Z.length;ee<I;++ee){const fe=Z[ee];v[fe.getType().replace("Multi","")].push(fe,b)}}else v[K.replace("Multi","")].push(D,b)}}const f=Object.keys(g).map(Number).sort(It);for(let p=0,C=f.length;p<C;++p){const U=g[f[p]];for(const L in U){const w=U[L];for(let M=0,E=w.length;M<E;M+=2){y.setStyle(w[M+1]);for(let G=0,P=e.length;G<P;++G)y.setTransform(e[G]),y.drawGeometry(w[M])}}}return d.getImageData(0,0,m.width,m.height)}function lc(a,e,t){const n=[];if(t){const i=Math.floor(Math.round(a[0])*dt),l=Math.floor(Math.round(a[1])*dt),o=(ye(i,0,t.width-1)+ye(l,0,t.height-1)*t.width)*4,r=t.data[o],s=t.data[o+1],c=t.data[o+2]+256*(s+256*r),u=Math.floor((256*256*256-1)/e.length);c&&c%u===0&&n.push(e[c/u-1])}return n}class $r extends Pt{constructor(e,t,n,i){super(e),this.inversePixelTransform=t,this.frameState=n,this.context=i}}const oc=5;class rc extends Ma{constructor(e){super(),this.ready=!0,this.boundHandleImageChange_=this.handleImageChange_.bind(this),this.layer_=e,this.staleKeys_=new Array,this.maxStaleKeys=oc}getStaleKeys(){return this.staleKeys_}prependStaleKey(e){this.staleKeys_.unshift(e),this.staleKeys_.length>this.maxStaleKeys&&(this.staleKeys_.length=this.maxStaleKeys)}getFeatures(e){return te()}getData(e){return null}prepareFrame(e){return te()}renderFrame(e,t){return te()}forEachFeatureAtCoordinate(e,t,n,i,l){}getLayer(){return this.layer_}handleFontsChanged(){}handleImageChange_(e){const t=e.target;(t.getState()===j.LOADED||t.getState()===j.ERROR)&&this.renderIfReadyAndVisible()}loadImage(e){let t=e.getState();return t!=j.LOADED&&t!=j.ERROR&&e.addEventListener(z.CHANGE,this.boundHandleImageChange_),t==j.IDLE&&(e.load(),t=e.getState()),t==j.LOADED}renderIfReadyAndVisible(){const e=this.getLayer();e&&e.getVisible()&&e.getSourceState()==="ready"&&e.changed()}renderDeferred(e){}disposeInternal(){delete this.layer_,super.disposeInternal()}}const vo=[];let wn=null;function sc(){wn=pe(1,1,void 0,{willReadFrequently:!0})}class es extends rc{constructor(e){super(e),this.container=null,this.renderedResolution,this.tempTransform=ot(),this.pixelTransform=ot(),this.inversePixelTransform=ot(),this.context=null,this.deferredContext_=null,this.containerReused=!1,this.frameState=null}getImageData(e,t,n){wn||sc(),wn.clearRect(0,0,1,1);let i;try{wn.drawImage(e,t,n,1,1,0,0,1,1),i=wn.getImageData(0,0,1,1).data}catch{return wn=null,null}return i}getBackground(e){let n=this.getLayer().getBackground();return typeof n=="function"&&(n=n(e.viewState.resolution)),n||void 0}useContainer(e,t,n){const i=this.getLayer().getClassName();let l,o;if(e&&e.className===i&&(!n||e&&e.style.backgroundColor&&qt(Jn(e.style.backgroundColor),Jn(n)))){const r=e.firstElementChild;r instanceof HTMLCanvasElement&&(o=r.getContext("2d"))}if(o&&L1(o.canvas.style.transform,t)?(this.container=e,this.context=o,this.containerReused=!0):this.containerReused?(this.container=null,this.context=null,this.containerReused=!1):this.container&&(this.container.style.backgroundColor=null),!this.container){l=document.createElement("div"),l.className=i;let r=l.style;r.position="absolute",r.width="100%",r.height="100%",o=pe();const s=o.canvas;l.appendChild(s),r=s.style,r.position="absolute",r.left="0",r.transformOrigin="top left",this.container=l,this.context=o}!this.containerReused&&n&&!this.container.style.backgroundColor&&(this.container.style.backgroundColor=n)}clipUnrotated(e,t,n){const i=Sn(n),l=ci(n),o=hi(n),r=si(n);Le(t.coordinateToPixelTransform,i),Le(t.coordinateToPixelTransform,l),Le(t.coordinateToPixelTransform,o),Le(t.coordinateToPixelTransform,r);const s=this.inversePixelTransform;Le(s,i),Le(s,l),Le(s,o),Le(s,r),e.save(),e.beginPath(),e.moveTo(Math.round(i[0]),Math.round(i[1])),e.lineTo(Math.round(l[0]),Math.round(l[1])),e.lineTo(Math.round(o[0]),Math.round(o[1])),e.lineTo(Math.round(r[0]),Math.round(r[1])),e.clip()}prepareContainer(e,t){const n=e.extent,i=e.viewState.resolution,l=e.viewState.rotation,o=e.pixelRatio,r=Math.round(se(n)/i*o),s=Math.round(be(n)/i*o);bt(this.pixelTransform,e.size[0]/2,e.size[1]/2,1/o,1/o,l,-r/2,-s/2),Mr(this.inversePixelTransform,this.pixelTransform);const h=M1(this.pixelTransform);if(this.useContainer(t,h,this.getBackground(e)),!this.containerReused){const c=this.context.canvas;c.width!=r||c.height!=s?(c.width=r,c.height=s):this.context.clearRect(0,0,r,s),h!==c.style.transform&&(c.style.transform=h)}}dispatchRenderEvent_(e,t,n){const i=this.getLayer();if(i.hasListener(e)){const l=new $r(e,this.inversePixelTransform,n,t);i.dispatchEvent(l)}}preRender(e,t){this.frameState=t,!t.declutter&&this.dispatchRenderEvent_($e.PRERENDER,e,t)}postRender(e,t){t.declutter||this.dispatchRenderEvent_($e.POSTRENDER,e,t)}renderDeferredInternal(e){}getRenderContext(e){return e.declutter&&!this.deferredContext_&&(this.deferredContext_=new jr),e.declutter?this.deferredContext_.getContext():this.context}renderDeferred(e){e.declutter&&(this.dispatchRenderEvent_($e.PRERENDER,this.context,e),e.declutter&&this.deferredContext_&&(this.deferredContext_.draw(this.context),this.deferredContext_.clear()),this.renderDeferredInternal(e),this.dispatchRenderEvent_($e.POSTRENDER,this.context,e))}getRenderTransform(e,t,n,i,l,o,r){const s=l/2,h=o/2,c=i/t,u=-c,d=-e[0]+r,m=-e[1];return bt(this.tempTransform,s,h,c,u,-n,d,m)}disposeInternal(){delete this.frameState,super.disposeInternal()}}class hc extends es{constructor(e){super(e),this.boundHandleStyleImageChange_=this.handleStyleImageChange_.bind(this),this.animatingOrInteracting_,this.hitDetectionImageData_=null,this.clipped_=!1,this.renderedFeatures_=null,this.renderedRevision_=-1,this.renderedResolution_=NaN,this.renderedExtent_=nt(),this.wrappedRenderedExtent_=nt(),this.renderedRotation_,this.renderedCenter_=null,this.renderedProjection_=null,this.renderedPixelRatio_=1,this.renderedRenderOrder_=null,this.renderedFrameDeclutter_,this.replayGroup_=null,this.replayGroupChanged=!0,this.clipping=!0,this.targetContext_=null,this.opacity_=1}renderWorlds(e,t,n){const i=t.extent,l=t.viewState,o=l.center,r=l.resolution,s=l.projection,h=l.rotation,c=s.getExtent(),u=this.getLayer().getSource(),d=this.getLayer().getDeclutter(),m=t.pixelRatio,y=t.viewHints,k=!(y[Ee.ANIMATING]||y[Ee.INTERACTING]),S=this.context,g=Math.round(se(i)/r*m),f=Math.round(be(i)/r*m),p=u.getWrapX()&&s.canWrapX(),C=p?se(c):null,U=p?Math.ceil((i[2]-c[2])/C)+1:1;let L=p?Math.floor((i[0]-c[0])/C):0;do{let w=this.getRenderTransform(o,r,0,m,g,f,L*C);t.declutter&&(w=w.slice(0)),e.execute(S,[S.canvas.width,S.canvas.height],w,h,k,n===void 0?Bn:n?Qr:tc,n?d&&t.declutter[d]:void 0)}while(++L<U)}setDrawContext_(){this.opacity_!==1&&(this.targetContext_=this.context,this.context=pe(this.context.canvas.width,this.context.canvas.height,vo))}resetDrawContext_(){if(this.opacity_!==1){const e=this.targetContext_.globalAlpha;this.targetContext_.globalAlpha=this.opacity_,this.targetContext_.drawImage(this.context.canvas,0,0),this.targetContext_.globalAlpha=e,ki(this.context),vo.push(this.context.canvas),this.context=this.targetContext_,this.targetContext_=null}}renderDeclutter(e){!this.replayGroup_||!this.getLayer().getDeclutter()||this.renderWorlds(this.replayGroup_,e,!0)}renderDeferredInternal(e){this.replayGroup_&&(this.replayGroup_.renderDeferred(),this.clipped_&&this.context.restore(),this.resetDrawContext_())}renderFrame(e,t){const n=e.layerStatesArray[e.layerIndex];this.opacity_=n.opacity;const i=e.viewState;this.prepareContainer(e,t);const l=this.context,o=this.replayGroup_;let r=o&&!o.isEmpty();if(!r&&!(this.getLayer().hasListener($e.PRERENDER)||this.getLayer().hasListener($e.POSTRENDER)))return this.container;if(this.setDrawContext_(),this.preRender(l,e),i.projection,this.clipped_=!1,r&&n.extent&&this.clipping){const s=Yt(n.extent);r=ve(s,e.extent),this.clipped_=r&&!Rn(s,e.extent),this.clipped_&&this.clipUnrotated(l,e,s)}return r&&this.renderWorlds(o,e,this.getLayer().getDeclutter()?!1:void 0),!e.declutter&&this.clipped_&&l.restore(),this.postRender(l,e),this.renderedRotation_!==i.rotation&&(this.renderedRotation_=i.rotation,this.hitDetectionImageData_=null),e.declutter||this.resetDrawContext_(),this.container}getFeatures(e){return new Promise(t=>{if(this.frameState&&!this.hitDetectionImageData_&&!this.animatingOrInteracting_){const n=this.frameState.size.slice(),i=this.renderedCenter_,l=this.renderedResolution_,o=this.renderedRotation_,r=this.renderedProjection_,s=this.wrappedRenderedExtent_,h=this.getLayer(),c=[],u=n[0]*dt,d=n[1]*dt;c.push(this.getRenderTransform(i,l,o,dt,u,d,0).slice());const m=h.getSource(),y=r.getExtent();if(m.getWrapX()&&r.canWrapX()&&!Rn(y,s)){let k=s[0];const S=se(y);let g=0,f;for(;k<y[0];)--g,f=S*g,c.push(this.getRenderTransform(i,l,o,dt,u,d,f).slice()),k+=S;for(g=0,k=s[2];k>y[2];)++g,f=S*g,c.push(this.getRenderTransform(i,l,o,dt,u,d,f).slice()),k-=S}this.hitDetectionImageData_=ic(n,c,this.renderedFeatures_,h.getStyleFunction(),s,l,o,Lo(l,this.renderedPixelRatio_))}t(lc(e,this.renderedFeatures_,this.hitDetectionImageData_))})}forEachFeatureAtCoordinate(e,t,n,i,l){var d,m;if(!this.replayGroup_)return;const o=t.viewState.resolution,r=t.viewState.rotation,s=this.getLayer(),h={},c=function(y,k,S){const g=ae(y),f=h[g];if(f){if(f!==!0&&S<f.distanceSq){if(S===0)return h[g]=!0,l.splice(l.lastIndexOf(f),1),i(y,s,k);f.geometry=k,f.distanceSq=S}}else{if(S===0)return h[g]=!0,i(y,s,k);l.push(h[g]={feature:y,layer:s,geometry:k,distanceSq:S,callback:i})}},u=this.getLayer().getDeclutter();return this.replayGroup_.forEachFeatureAtCoordinate(e,o,r,n,c,u?(m=(d=t.declutter)==null?void 0:d[u])==null?void 0:m.all().map(y=>y.value):null)}handleFontsChanged(){const e=this.getLayer();e.getVisible()&&this.replayGroup_&&e.changed()}handleStyleImageChange_(e){this.renderIfReadyAndVisible()}prepareFrame(e){const t=this.getLayer(),n=t.getSource();if(!n)return!1;const i=e.viewHints[Ee.ANIMATING],l=e.viewHints[Ee.INTERACTING],o=t.getUpdateWhileAnimating(),r=t.getUpdateWhileInteracting();if(this.ready&&!o&&i||!r&&l)return this.animatingOrInteracting_=!0,!0;this.animatingOrInteracting_=!1;const s=e.extent,h=e.viewState,c=h.projection,u=h.resolution,d=e.pixelRatio,m=t.getRevision(),y=t.getRenderBuffer();let k=t.getRenderOrder();k===void 0&&(k=ph);const S=h.center.slice(),g=Sl(s,y*u),f=g.slice(),p=[g.slice()],C=c.getExtent();if(n.getWrapX()&&c.canWrapX()&&!Rn(C,e.extent)){const O=se(C),F=Math.max(se(g)/2,O);g[0]=C[0]-F,g[2]=C[2]+F,Sr(S,c);const N=dr(p[0],c);N[0]<C[0]&&N[2]<C[2]?p.push([N[0]+O,N[1],N[2]+O,N[3]]):N[0]>C[0]&&N[2]>C[2]&&p.push([N[0]-O,N[1],N[2]-O,N[3]])}if(this.ready&&this.renderedResolution_==u&&this.renderedRevision_==m&&this.renderedRenderOrder_==k&&this.renderedFrameDeclutter_===!!e.declutter&&Rn(this.wrappedRenderedExtent_,g))return qt(this.renderedExtent_,f)||(this.hitDetectionImageData_=null,this.renderedExtent_=f),this.renderedCenter_=S,this.replayGroupChanged=!1,!0;this.replayGroup_=null;const U=new qh(Yr(u,d),g,u,d);let L;for(let O=0,F=p.length;O<F;++O)n.loadFeatures(p[O],u,c);const w=Lo(u,d);let M=!0;const E=(O,F)=>{let N;const V=O.getStyleFunction()||t.getStyleFunction();if(V&&(N=V(O,u)),N){const v=this.renderFeature(O,w,N,U,L,this.getLayer().getDeclutter(),F);M=M&&!v}},G=_r(g),P=n.getFeaturesInExtent(G);k&&P.sort(k);for(let O=0,F=P.length;O<F;++O)E(P[O],O);this.renderedFeatures_=P,this.ready=M;const D=U.finish(),b=new nc(g,u,d,n.getOverlaps(),D,t.getRenderBuffer(),!!e.declutter);return this.renderedResolution_=u,this.renderedRevision_=m,this.renderedRenderOrder_=k,this.renderedFrameDeclutter_=!!e.declutter,this.renderedExtent_=f,this.wrappedRenderedExtent_=g,this.renderedCenter_=S,this.renderedProjection_=c,this.renderedPixelRatio_=d,this.replayGroup_=b,this.hitDetectionImageData_=null,this.replayGroupChanged=!0,!0}renderFeature(e,t,n,i,l,o,r){if(!n)return!1;let s=!1;if(Array.isArray(n))for(let h=0,c=n.length;h<c;++h)s=Ao(i,e,n[h],t,this.boundHandleStyleImageChange_,l,o,r)||s;else s=Ao(i,e,n,t,this.boundHandleStyleImageChange_,l,o,r);return s}}let kn=0;const Be=1<<kn++,Q=1<<kn++,xe=1<<kn++,lt=1<<kn++,yn=1<<kn++,na=1<<kn++,Ha=Math.pow(2,kn)-1,bl={[Be]:"boolean",[Q]:"number",[xe]:"string",[lt]:"color",[yn]:"number[]",[na]:"size"},cc=Object.keys(bl).map(Number).sort(It);function uc(a){return a in bl}function aa(a){const e=[];for(const t of cc)ia(a,t)&&e.push(bl[t]);return e.length===0?"untyped":e.length<3?e.join(" or "):e.slice(0,-1).join(", ")+", or "+e[e.length-1]}function ia(a,e){return(a&e)===e}function Ht(a,e){return a===e}class Ue{constructor(e,t){if(!uc(e))throw new Error(`literal expressions must have a specific type, got ${aa(e)}`);this.type=e,this.value=t}}class dc{constructor(e,t,...n){this.type=e,this.operator=t,this.args=n}}function ts(){return{variables:new Set,properties:new Set,featureId:!1,geometryType:!1,mapState:!1}}function Ae(a,e,t){switch(typeof a){case"boolean":{if(Ht(e,xe))return new Ue(xe,a?"true":"false");if(!ia(e,Be))throw new Error(`got a boolean, but expected ${aa(e)}`);return new Ue(Be,a)}case"number":{if(Ht(e,na))return new Ue(na,He(a));if(Ht(e,Be))return new Ue(Be,!!a);if(Ht(e,xe))return new Ue(xe,a.toString());if(!ia(e,Q))throw new Error(`got a number, but expected ${aa(e)}`);return new Ue(Q,a)}case"string":{if(Ht(e,lt))return new Ue(lt,Rl(a));if(Ht(e,Be))return new Ue(Be,!!a);if(!ia(e,xe))throw new Error(`got a string, but expected ${aa(e)}`);return new Ue(xe,a)}}if(!Array.isArray(a))throw new Error("expression must be an array or a primitive value");if(a.length===0)throw new Error("empty expression");if(typeof a[0]=="string")return Mc(a,e,t);for(const n of a)if(typeof n!="number")throw new Error("expected an array of numbers");if(Ht(e,na)){if(a.length!==2)throw new Error(`expected an array of two values for a size, got ${a.length}`);return new Ue(na,a)}if(Ht(e,lt)){if(a.length===3)return new Ue(lt,[...a,1]);if(a.length===4)return new Ue(lt,a);throw new Error(`expected an array of 3 or 4 values for a color, got ${a.length}`)}if(!ia(e,yn))throw new Error(`got an array of numbers, but expected ${aa(e)}`);return new Ue(yn,a)}const A={Get:"get",Var:"var",Concat:"concat",GeometryType:"geometry-type",LineMetric:"line-metric",Any:"any",All:"all",Not:"!",Resolution:"resolution",Zoom:"zoom",Time:"time",Equal:"==",NotEqual:"!=",GreaterThan:">",GreaterThanOrEqualTo:">=",LessThan:"<",LessThanOrEqualTo:"<=",Multiply:"*",Divide:"/",Add:"+",Subtract:"-",Clamp:"clamp",Mod:"%",Pow:"^",Abs:"abs",Floor:"floor",Ceil:"ceil",Round:"round",Sin:"sin",Cos:"cos",Atan:"atan",Sqrt:"sqrt",Match:"match",Between:"between",Interpolate:"interpolate",Coalesce:"coalesce",Case:"case",In:"in",Number:"number",String:"string",Array:"array",Color:"color",Id:"id",Band:"band",Palette:"palette",ToString:"to-string",Has:"has"},mc={[A.Get]:Y(q(1,1/0),No),[A.Var]:Y(q(1,1),yc),[A.Has]:Y(q(1,1/0),No),[A.Id]:Y(Sc,_n),[A.Concat]:Y(q(2,1/0),ne(xe)),[A.GeometryType]:Y(kc,_n),[A.LineMetric]:Y(_n),[A.Resolution]:Y(Ji,_n),[A.Zoom]:Y(Ji,_n),[A.Time]:Y(Ji,_n),[A.Any]:Y(q(2,1/0),ne(Be)),[A.All]:Y(q(2,1/0),ne(Be)),[A.Not]:Y(q(1,1),ne(Be)),[A.Equal]:Y(q(2,2),ne(Ha)),[A.NotEqual]:Y(q(2,2),ne(Ha)),[A.GreaterThan]:Y(q(2,2),ne(Q)),[A.GreaterThanOrEqualTo]:Y(q(2,2),ne(Q)),[A.LessThan]:Y(q(2,2),ne(Q)),[A.LessThanOrEqualTo]:Y(q(2,2),ne(Q)),[A.Multiply]:Y(q(2,1/0),Ho),[A.Coalesce]:Y(q(2,1/0),Ho),[A.Divide]:Y(q(2,2),ne(Q)),[A.Add]:Y(q(2,1/0),ne(Q)),[A.Subtract]:Y(q(2,2),ne(Q)),[A.Clamp]:Y(q(3,3),ne(Q)),[A.Mod]:Y(q(2,2),ne(Q)),[A.Pow]:Y(q(2,2),ne(Q)),[A.Abs]:Y(q(1,1),ne(Q)),[A.Floor]:Y(q(1,1),ne(Q)),[A.Ceil]:Y(q(1,1),ne(Q)),[A.Round]:Y(q(1,1),ne(Q)),[A.Sin]:Y(q(1,1),ne(Q)),[A.Cos]:Y(q(1,1),ne(Q)),[A.Atan]:Y(q(1,2),ne(Q)),[A.Sqrt]:Y(q(1,1),ne(Q)),[A.Match]:Y(q(4,1/0),Jo,gc),[A.Between]:Y(q(3,3),ne(Q)),[A.Interpolate]:Y(q(6,1/0),Jo,Cc),[A.Case]:Y(q(3,1/0),fc,Uc),[A.In]:Y(q(2,2),pc),[A.Number]:Y(q(1,1/0),ne(Ha)),[A.String]:Y(q(1,1/0),ne(Ha)),[A.Array]:Y(q(1,1/0),ne(Q)),[A.Color]:Y(q(1,4),ne(Q)),[A.Band]:Y(q(1,3),ne(Q)),[A.Palette]:Y(q(2,2),_c),[A.ToString]:Y(q(1,1),ne(Be|Q|xe|lt))};function No(a,e,t){const n=a.length-1,i=new Array(n);for(let l=0;l<n;++l){const o=a[l+1];switch(typeof o){case"number":{i[l]=new Ue(Q,o);break}case"string":{i[l]=new Ue(xe,o);break}default:throw new Error(`expected a string key or numeric array index for a get operation, got ${o}`)}l===0&&t.properties.add(String(o))}return i}function yc(a,e,t){const n=a[1];if(typeof n!="string")throw new Error("expected a string argument for var operation");return t.variables.add(n),[new Ue(xe,n)]}function Sc(a,e,t){t.featureId=!0}function kc(a,e,t){t.geometryType=!0}function Ji(a,e,t){t.mapState=!0}function _n(a,e,t){const n=a[0];if(a.length!==1)throw new Error(`expected no arguments for ${n} operation`);return[]}function q(a,e){return function(t,n,i){const l=t[0],o=t.length-1;if(a===e){if(o!==a){const r=a===1?"":"s";throw new Error(`expected ${a} argument${r} for ${l}, got ${o}`)}}else if(o<a||o>e){const r=e===1/0?`${a} or more`:`${a} to ${e}`;throw new Error(`expected ${r} arguments for ${l}, got ${o}`)}}}function Ho(a,e,t){const n=a.length-1,i=new Array(n);for(let l=0;l<n;++l){const o=Ae(a[l+1],e,t);i[l]=o}return i}function ne(a){return function(e,t,n){const i=e.length-1,l=new Array(i);for(let o=0;o<i;++o){const r=Ae(e[o+1],a,n);l[o]=r}return l}}function fc(a,e,t){const n=a[0],i=a.length-1;if(i%2===0)throw new Error(`expected an odd number of arguments for ${n}, got ${i} instead`)}function Jo(a,e,t){const n=a[0],i=a.length-1;if(i%2===1)throw new Error(`expected an even number of arguments for operation ${n}, got ${i} instead`)}function gc(a,e,t){const n=a.length-1,i=xe|Q|Be,l=Ae(a[1],i,t),o=Ae(a[a.length-1],e,t),r=new Array(n-2);for(let s=0;s<n-2;s+=2){try{const h=Ae(a[s+2],l.type,t);r[s]=h}catch(h){throw new Error(`failed to parse argument ${s+1} of match expression: ${h.message}`)}try{const h=Ae(a[s+3],o.type,t);r[s+1]=h}catch(h){throw new Error(`failed to parse argument ${s+2} of match expression: ${h.message}`)}}return[l,...r,o]}function Cc(a,e,t){const n=a[1];let i;switch(n[0]){case"linear":i=1;break;case"exponential":const s=n[1];if(typeof s!="number"||s<=0)throw new Error(`expected a number base for exponential interpolation, got ${JSON.stringify(s)} instead`);i=s;break;default:throw new Error(`invalid interpolation type: ${JSON.stringify(n)}`)}const l=new Ue(Q,i);let o;try{o=Ae(a[2],Q,t)}catch(s){throw new Error(`failed to parse argument 1 in interpolate expression: ${s.message}`)}const r=new Array(a.length-3);for(let s=0;s<r.length;s+=2){try{const h=Ae(a[s+3],Q,t);r[s]=h}catch(h){throw new Error(`failed to parse argument ${s+2} for interpolate expression: ${h.message}`)}try{const h=Ae(a[s+4],e,t);r[s+1]=h}catch(h){throw new Error(`failed to parse argument ${s+3} for interpolate expression: ${h.message}`)}}return[l,o,...r]}function Uc(a,e,t){const n=Ae(a[a.length-1],e,t),i=new Array(a.length-1);for(let l=0;l<i.length-1;l+=2){try{const o=Ae(a[l+1],Be,t);i[l]=o}catch(o){throw new Error(`failed to parse argument ${l} of case expression: ${o.message}`)}try{const o=Ae(a[l+2],n.type,t);i[l+1]=o}catch(o){throw new Error(`failed to parse argument ${l+1} of case expression: ${o.message}`)}}return i[i.length-1]=n,i}function pc(a,e,t){let n=a[2];if(!Array.isArray(n))throw new Error('the second argument for the "in" operator must be an array');let i;if(typeof n[0]=="string"){if(n[0]!=="literal")throw new Error('for the "in" operator, a string array should be wrapped in a "literal" operator to disambiguate from expressions');if(!Array.isArray(n[1]))throw new Error('failed to parse "in" expression: the literal operator must be followed by an array');n=n[1],i=xe}else i=Q;const l=new Array(n.length);for(let r=0;r<l.length;r++)try{const s=Ae(n[r],i,t);l[r]=s}catch(s){throw new Error(`failed to parse haystack item ${r} for "in" expression: ${s.message}`)}return[Ae(a[1],i,t),...l]}function _c(a,e,t){let n;try{n=Ae(a[1],Q,t)}catch(o){throw new Error(`failed to parse first argument in palette expression: ${o.message}`)}const i=a[2];if(!Array.isArray(i))throw new Error("the second argument of palette must be an array");const l=new Array(i.length);for(let o=0;o<l.length;o++){let r;try{r=Ae(i[o],lt,t)}catch(s){throw new Error(`failed to parse color at index ${o} in palette expression: ${s.message}`)}if(!(r instanceof Ue))throw new Error(`the palette color at index ${o} must be a literal value`);l[o]=r}return[n,...l]}function Y(...a){return function(e,t,n){const i=e[0];let l;for(let o=0;o<a.length;o++){const r=a[o](e,t,n);if(o==a.length-1){if(!r)throw new Error("expected last argument validator to return the parsed args");l=r}}return new dc(t,i,...l)}}function Mc(a,e,t){const n=a[0],i=mc[n];if(!i)throw new Error(`unknown operator: ${n}`);return i(a,e,t)}function ns(a){if(!a)return"";const e=a.getType();switch(e){case"Point":case"LineString":case"Polygon":return e;case"MultiPoint":case"MultiLineString":case"MultiPolygon":return e.substring(5);case"Circle":return"Polygon";case"GeometryCollection":return ns(a.getGeometries()[0]);default:return""}}function as(){return{variables:{},properties:{},resolution:NaN,featureId:null,geometryType:""}}function Dt(a,e,t){const n=Ae(a,e,t);return rt(n)}function rt(a,e){if(a instanceof Ue){if(a.type===lt&&typeof a.value=="string"){const n=Rl(a.value);return function(){return n}}return function(){return a.value}}const t=a.operator;switch(t){case A.Number:case A.String:case A.Coalesce:return Lc(a);case A.Get:case A.Var:case A.Has:return Ac(a);case A.Id:return n=>n.featureId;case A.GeometryType:return n=>n.geometryType;case A.Concat:{const n=a.args.map(i=>rt(i));return i=>"".concat(...n.map(l=>l(i).toString()))}case A.Resolution:return n=>n.resolution;case A.Any:case A.All:case A.Between:case A.In:case A.Not:return Tc(a);case A.Equal:case A.NotEqual:case A.LessThan:case A.LessThanOrEqualTo:case A.GreaterThan:case A.GreaterThanOrEqualTo:return Wc(a);case A.Multiply:case A.Divide:case A.Add:case A.Subtract:case A.Clamp:case A.Mod:case A.Pow:case A.Abs:case A.Floor:case A.Ceil:case A.Round:case A.Sin:case A.Cos:case A.Atan:case A.Sqrt:return wc(a);case A.Case:return Ec(a);case A.Match:return Rc(a);case A.Interpolate:return Ic(a);case A.ToString:return Gc(a);default:throw new Error(`Unsupported operator ${t}`)}}function Lc(a,e){const t=a.operator,n=a.args.length,i=new Array(n);for(let l=0;l<n;++l)i[l]=rt(a.args[l]);switch(t){case A.Coalesce:return l=>{for(let o=0;o<n;++o){const r=i[o](l);if(typeof r<"u"&&r!==null)return r}throw new Error("Expected one of the values to be non-null")};case A.Number:case A.String:return l=>{for(let o=0;o<n;++o){const r=i[o](l);if(typeof r===t)return r}throw new Error(`Expected one of the values to be a ${t}`)};default:throw new Error(`Unsupported assertion operator ${t}`)}}function Ac(a,e){const n=a.args[0].value;switch(a.operator){case A.Get:return i=>{const l=a.args;let o=i.properties[n];for(let r=1,s=l.length;r<s;++r){const c=l[r].value;o=o[c]}return o};case A.Var:return i=>i.variables[n];case A.Has:return i=>{const l=a.args;if(!(n in i.properties))return!1;let o=i.properties[n];for(let r=1,s=l.length;r<s;++r){const c=l[r].value;if(!o||!Object.hasOwn(o,c))return!1;o=o[c]}return!0};default:throw new Error(`Unsupported accessor operator ${a.operator}`)}}function Wc(a,e){const t=a.operator,n=rt(a.args[0]),i=rt(a.args[1]);switch(t){case A.Equal:return l=>n(l)===i(l);case A.NotEqual:return l=>n(l)!==i(l);case A.LessThan:return l=>n(l)<i(l);case A.LessThanOrEqualTo:return l=>n(l)<=i(l);case A.GreaterThan:return l=>n(l)>i(l);case A.GreaterThanOrEqualTo:return l=>n(l)>=i(l);default:throw new Error(`Unsupported comparison operator ${t}`)}}function Tc(a,e){const t=a.operator,n=a.args.length,i=new Array(n);for(let l=0;l<n;++l)i[l]=rt(a.args[l]);switch(t){case A.Any:return l=>{for(let o=0;o<n;++o)if(i[o](l))return!0;return!1};case A.All:return l=>{for(let o=0;o<n;++o)if(!i[o](l))return!1;return!0};case A.Between:return l=>{const o=i[0](l),r=i[1](l),s=i[2](l);return o>=r&&o<=s};case A.In:return l=>{const o=i[0](l);for(let r=1;r<n;++r)if(o===i[r](l))return!0;return!1};case A.Not:return l=>!i[0](l);default:throw new Error(`Unsupported logical operator ${t}`)}}function wc(a,e){const t=a.operator,n=a.args.length,i=new Array(n);for(let l=0;l<n;++l)i[l]=rt(a.args[l]);switch(t){case A.Multiply:return l=>{let o=1;for(let r=0;r<n;++r)o*=i[r](l);return o};case A.Divide:return l=>i[0](l)/i[1](l);case A.Add:return l=>{let o=0;for(let r=0;r<n;++r)o+=i[r](l);return o};case A.Subtract:return l=>i[0](l)-i[1](l);case A.Clamp:return l=>{const o=i[0](l),r=i[1](l);if(o<r)return r;const s=i[2](l);return o>s?s:o};case A.Mod:return l=>i[0](l)%i[1](l);case A.Pow:return l=>Math.pow(i[0](l),i[1](l));case A.Abs:return l=>Math.abs(i[0](l));case A.Floor:return l=>Math.floor(i[0](l));case A.Ceil:return l=>Math.ceil(i[0](l));case A.Round:return l=>Math.round(i[0](l));case A.Sin:return l=>Math.sin(i[0](l));case A.Cos:return l=>Math.cos(i[0](l));case A.Atan:return n===2?l=>Math.atan2(i[0](l),i[1](l)):l=>Math.atan(i[0](l));case A.Sqrt:return l=>Math.sqrt(i[0](l));default:throw new Error(`Unsupported numeric operator ${t}`)}}function Ec(a,e){const t=a.args.length,n=new Array(t);for(let i=0;i<t;++i)n[i]=rt(a.args[i]);return i=>{for(let l=0;l<t-1;l+=2)if(n[l](i))return n[l+1](i);return n[t-1](i)}}function Rc(a,e){const t=a.args.length,n=new Array(t);for(let i=0;i<t;++i)n[i]=rt(a.args[i]);return i=>{const l=n[0](i);for(let o=1;o<t-1;o+=2)if(l===n[o](i))return n[o+1](i);return n[t-1](i)}}function Ic(a,e){const t=a.args.length,n=new Array(t);for(let i=0;i<t;++i)n[i]=rt(a.args[i]);return i=>{const l=n[0](i),o=n[1](i);let r,s;for(let h=2;h<t;h+=2){const c=n[h](i);let u=n[h+1](i);const d=Array.isArray(u);if(d&&(u=lh(u)),c>=o)return h===2?u:d?Bc(l,o,r,s,c,u):la(l,o,r,s,c,u);r=c,s=u}return s}}function Gc(a,e){const t=a.operator,n=a.args.length,i=new Array(n);for(let l=0;l<n;++l)i[l]=rt(a.args[l]);switch(t){case A.ToString:return l=>{const o=i[0](l);return a.args[0].type===lt?Il(o):o.toString()};default:throw new Error(`Unsupported convert operator ${t}`)}}function la(a,e,t,n,i,l){const o=i-t;if(o===0)return n;const r=e-t,s=a===1?r/o:(Math.pow(a,r)-1)/(Math.pow(a,o)-1);return n+s*(l-n)}function Bc(a,e,t,n,i,l){if(i-t===0)return n;const r=Uo(n),s=Uo(l);let h=s[2]-r[2];h>180?h-=360:h<-180&&(h+=360);const c=[la(a,e,t,r[0],i,s[0]),la(a,e,t,r[1],i,s[1]),r[2]+la(a,e,t,0,i,h),la(a,e,t,n[3],i,l[3])];return oh(c)}function bc(a){return!0}function Pc(a){const e=ts(),t=Dc(a,e),n=as();return function(i,l){if(n.properties=i.getPropertiesInternal(),n.resolution=l,e.featureId){const o=i.getId();o!==void 0?n.featureId=o:n.featureId=null}return e.geometryType&&(n.geometryType=ns(i.getGeometry())),t(n)}}function Fo(a){const e=ts(),t=a.length,n=new Array(t);for(let o=0;o<t;++o)n[o]=sl(a[o],e);const i=as(),l=new Array(t);return function(o,r){if(i.properties=o.getPropertiesInternal(),i.resolution=r,e.featureId){const h=o.getId();h!==void 0?i.featureId=h:i.featureId=null}let s=0;for(let h=0;h<t;++h){const c=n[h](i);c&&(l[s]=c,s+=1)}return l.length=s,l}}function Dc(a,e){const t=a.length,n=new Array(t);for(let i=0;i<t;++i){const l=a[i],o="filter"in l?Dt(l.filter,Be,e):bc;let r;if(Array.isArray(l.style)){const s=l.style.length;r=new Array(s);for(let h=0;h<s;++h)r[h]=sl(l.style[h],e)}else r=[sl(l.style,e)];n[i]={filter:o,styles:r}}return function(i){const l=[];let o=!1;for(let r=0;r<t;++r){const s=n[r].filter;if(s(i)&&!(a[r].else&&o)){o=!0;for(const h of n[r].styles){const c=h(i);c&&l.push(c)}}}return l}}function sl(a,e){const t=Ua(a,"",e),n=pa(a,"",e),i=Oc(a,e),l=xc(a,e),o=Ne(a,"z-index",e);if(!t&&!n&&!i&&!l&&!vn(a))throw new Error("No fill, stroke, point, or text symbolizer properties in style: "+JSON.stringify(a));const r=new kt;return function(s){let h=!0;if(t){const c=t(s);c&&(h=!1),r.setFill(c)}if(n){const c=n(s);c&&(h=!1),r.setStroke(c)}if(i){const c=i(s);c&&(h=!1),r.setText(c)}if(l){const c=l(s);c&&(h=!1),r.setImage(c)}return o&&r.setZIndex(o(s)),h?null:r}}function Ua(a,e,t){let n;if(e+"fill-pattern-src"in a)n=Jc(a,e+"fill-",t);else{if(a[e+"fill-color"]==="none")return l=>null;n=Pl(a,e+"fill-color",t)}if(!n)return null;const i=new mn;return function(l){const o=n(l);return o===El?null:(i.setColor(o),i)}}function pa(a,e,t){const n=Ne(a,e+"stroke-width",t),i=Pl(a,e+"stroke-color",t);if(!n&&!i)return null;const l=Rt(a,e+"stroke-line-cap",t),o=Rt(a,e+"stroke-line-join",t),r=is(a,e+"stroke-line-dash",t),s=Ne(a,e+"stroke-line-dash-offset",t),h=Ne(a,e+"stroke-miter-limit",t),c=new Yn;return function(u){if(i){const d=i(u);if(d===El)return null;c.setColor(d)}if(n&&c.setWidth(n(u)),l){const d=l(u);if(d!=="butt"&&d!=="round"&&d!=="square")throw new Error("Expected butt, round, or square line cap");c.setLineCap(d)}if(o){const d=o(u);if(d!=="bevel"&&d!=="round"&&d!=="miter")throw new Error("Expected bevel, round, or miter line join");c.setLineJoin(d)}return r&&c.setLineDash(r(u)),s&&c.setLineDashOffset(s(u)),h&&c.setMiterLimit(h(u)),c}}function Oc(a,e){const t="text-",n=Rt(a,t+"value",e);if(!n)return null;const i=Ua(a,t,e),l=Ua(a,t+"background-",e),o=pa(a,t,e),r=pa(a,t+"background-",e),s=Rt(a,t+"font",e),h=Ne(a,t+"max-angle",e),c=Ne(a,t+"offset-x",e),u=Ne(a,t+"offset-y",e),d=Dn(a,t+"overflow",e),m=Rt(a,t+"placement",e),y=Ne(a,t+"repeat",e),k=_i(a,t+"scale",e),S=Dn(a,t+"rotate-with-view",e),g=Ne(a,t+"rotation",e),f=Rt(a,t+"align",e),p=Rt(a,t+"justify",e),C=Rt(a,t+"baseline",e),U=Dn(a,t+"keep-upright",e),L=is(a,t+"padding",e),w=Mi(a,t+"declutter-mode"),M=new Ui({declutterMode:w});return function(E){if(M.setText(n(E)),i&&M.setFill(i(E)),l&&M.setBackgroundFill(l(E)),o&&M.setStroke(o(E)),r&&M.setBackgroundStroke(r(E)),s&&M.setFont(s(E)),h&&M.setMaxAngle(h(E)),c&&M.setOffsetX(c(E)),u&&M.setOffsetY(u(E)),d&&M.setOverflow(d(E)),m){const G=m(E);if(G!=="point"&&G!=="line")throw new Error("Expected point or line for text-placement");M.setPlacement(G)}if(y&&M.setRepeat(y(E)),k&&M.setScale(k(E)),S&&M.setRotateWithView(S(E)),g&&M.setRotation(g(E)),f){const G=f(E);if(G!=="left"&&G!=="center"&&G!=="right"&&G!=="end"&&G!=="start")throw new Error("Expected left, right, center, start, or end for text-align");M.setTextAlign(G)}if(p){const G=p(E);if(G!=="left"&&G!=="right"&&G!=="center")throw new Error("Expected left, right, or center for text-justify");M.setJustify(G)}if(C){const G=C(E);if(G!=="bottom"&&G!=="top"&&G!=="middle"&&G!=="alphabetic"&&G!=="hanging")throw new Error("Expected bottom, top, middle, alphabetic, or hanging for text-baseline");M.setTextBaseline(G)}return L&&M.setPadding(L(E)),U&&M.setKeepUpright(U(E)),M}}function xc(a,e){return"icon-src"in a?vc(a,e):"shape-points"in a?Nc(a,e):"circle-radius"in a?Hc(a,e):null}function vc(a,e){const t="icon-",n=t+"src",i=ls(a[n],n),l=ei(a,t+"anchor",e),o=_i(a,t+"scale",e),r=Ne(a,t+"opacity",e),s=ei(a,t+"displacement",e),h=Ne(a,t+"rotation",e),c=Dn(a,t+"rotate-with-view",e),u=Yo(a,t+"anchor-origin"),d=Vo(a,t+"anchor-x-units"),m=Vo(a,t+"anchor-y-units"),y=Vc(a,t+"color"),k=Kc(a,t+"cross-origin"),S=Yc(a,t+"offset"),g=Yo(a,t+"offset-origin"),f=ti(a,t+"width"),p=ti(a,t+"height"),C=Fc(a,t+"size"),U=Mi(a,t+"declutter-mode"),L=new pi({src:i,anchorOrigin:u,anchorXUnits:d,anchorYUnits:m,color:y,crossOrigin:k,offset:S,offsetOrigin:g,height:p,width:f,size:C,declutterMode:U});return function(w){return r&&L.setOpacity(r(w)),s&&L.setDisplacement(s(w)),h&&L.setRotation(h(w)),c&&L.setRotateWithView(c(w)),o&&L.setScale(o(w)),l&&L.setAnchor(l(w)),L}}function Nc(a,e){const t="shape-",n=t+"points",i=t+"radius",l=hl(a[n],n),o=hl(a[i],i),r=Ua(a,t,e),s=pa(a,t,e),h=_i(a,t+"scale",e),c=ei(a,t+"displacement",e),u=Ne(a,t+"rotation",e),d=Dn(a,t+"rotate-with-view",e),m=ti(a,t+"radius2"),y=ti(a,t+"angle"),k=Mi(a,t+"declutter-mode"),S=new Ci({points:l,radius:o,radius2:m,angle:y,declutterMode:k});return function(g){return r&&S.setFill(r(g)),s&&S.setStroke(s(g)),c&&S.setDisplacement(c(g)),u&&S.setRotation(u(g)),d&&S.setRotateWithView(d(g)),h&&S.setScale(h(g)),S}}function Hc(a,e){const t="circle-",n=Ua(a,t,e),i=pa(a,t,e),l=Ne(a,t+"radius",e),o=_i(a,t+"scale",e),r=ei(a,t+"displacement",e),s=Ne(a,t+"rotation",e),h=Dn(a,t+"rotate-with-view",e),c=Mi(a,t+"declutter-mode"),u=new Vn({radius:5,declutterMode:c});return function(d){return l&&u.setRadius(l(d)),n&&u.setFill(n(d)),i&&u.setStroke(i(d)),r&&u.setDisplacement(r(d)),s&&u.setRotation(s(d)),h&&u.setRotateWithView(h(d)),o&&u.setScale(o(d)),u}}function Ne(a,e,t){if(!(e in a))return;const n=Dt(a[e],Q,t);return function(i){return hl(n(i),e)}}function Rt(a,e,t){if(!(e in a))return null;const n=Dt(a[e],xe,t);return function(i){return ls(n(i),e)}}function Jc(a,e,t){const n=Rt(a,e+"pattern-src",t),i=Ko(a,e+"pattern-offset",t),l=Ko(a,e+"pattern-size",t),o=Pl(a,e+"color",t);return function(r){return{src:n(r),offset:i&&i(r),size:l&&l(r),color:o&&o(r)}}}function Dn(a,e,t){if(!(e in a))return null;const n=Dt(a[e],Be,t);return function(i){const l=n(i);if(typeof l!="boolean")throw new Error(`Expected a boolean for ${e}`);return l}}function Pl(a,e,t){if(!(e in a))return null;const n=Dt(a[e],lt,t);return function(i){return os(n(i),e)}}function is(a,e,t){if(!(e in a))return null;const n=Dt(a[e],yn,t);return function(i){return Wa(n(i),e)}}function ei(a,e,t){if(!(e in a))return null;const n=Dt(a[e],yn,t);return function(i){const l=Wa(n(i),e);if(l.length!==2)throw new Error(`Expected two numbers for ${e}`);return l}}function Ko(a,e,t){if(!(e in a))return null;const n=Dt(a[e],yn,t);return function(i){return rs(n(i),e)}}function _i(a,e,t){if(!(e in a))return null;const n=Dt(a[e],yn|Q,t);return function(i){return Xc(n(i),e)}}function ti(a,e){const t=a[e];if(t!==void 0){if(typeof t!="number")throw new Error(`Expected a number for ${e}`);return t}}function Fc(a,e){const t=a[e];if(t!==void 0){if(typeof t=="number")return He(t);if(!Array.isArray(t))throw new Error(`Expected a number or size array for ${e}`);if(t.length!==2||typeof t[0]!="number"||typeof t[1]!="number")throw new Error(`Expected a number or size array for ${e}`);return t}}function Kc(a,e){const t=a[e];if(t!==void 0){if(typeof t!="string")throw new Error(`Expected a string for ${e}`);return t}}function Yo(a,e){const t=a[e];if(t!==void 0){if(t!=="bottom-left"&&t!=="bottom-right"&&t!=="top-left"&&t!=="top-right")throw new Error(`Expected bottom-left, bottom-right, top-left, or top-right for ${e}`);return t}}function Vo(a,e){const t=a[e];if(t!==void 0){if(t!=="pixels"&&t!=="fraction")throw new Error(`Expected pixels or fraction for ${e}`);return t}}function Yc(a,e){const t=a[e];if(t!==void 0)return Wa(t,e)}function Mi(a,e){const t=a[e];if(t!==void 0){if(typeof t!="string")throw new Error(`Expected a string for ${e}`);if(t!=="declutter"&&t!=="obstacle"&&t!=="none")throw new Error(`Expected declutter, obstacle, or none for ${e}`);return t}}function Vc(a,e){const t=a[e];if(t!==void 0)return os(t,e)}function Wa(a,e){if(!Array.isArray(a))throw new Error(`Expected an array for ${e}`);const t=a.length;for(let n=0;n<t;++n)if(typeof a[n]!="number")throw new Error(`Expected an array of numbers for ${e}`);return a}function ls(a,e){if(typeof a!="string")throw new Error(`Expected a string for ${e}`);return a}function hl(a,e){if(typeof a!="number")throw new Error(`Expected a number for ${e}`);return a}function os(a,e){if(typeof a=="string")return a;const t=Wa(a,e),n=t.length;if(n<3||n>4)throw new Error(`Expected a color with 3 or 4 values for ${e}`);return t}function rs(a,e){const t=Wa(a,e);if(t.length!==2)throw new Error(`Expected an array of two numbers for ${e}`);return t}function Xc(a,e){return typeof a=="number"?a:rs(a,e)}const at={CENTER:"center",RESOLUTION:"resolution",ROTATION:"rotation"};function Xo(a,e,t){return function(n,i,l,o,r){if(!n)return;if(!i&&!e)return n;const s=e?0:l[0]*i,h=e?0:l[1]*i,c=r?r[0]:0,u=r?r[1]:0;let d=a[0]+s/2+c,m=a[2]-s/2+c,y=a[1]+h/2+u,k=a[3]-h/2+u;d>m&&(d=(m+d)/2,m=d),y>k&&(y=(k+y)/2,k=y);let S=ye(n[0],d,m),g=ye(n[1],y,k);if(o&&t&&i){const f=30*i;S+=-f*Math.log(1+Math.max(0,d-n[0])/f)+f*Math.log(1+Math.max(0,n[0]-m)/f),g+=-f*Math.log(1+Math.max(0,y-n[1])/f)+f*Math.log(1+Math.max(0,n[1]-k)/f)}return[S,g]}}function zc(a){return a}function ss(a){return Math.pow(a,3)}function Xn(a){return 1-ss(1-a)}function Zc(a){return 3*a*a-2*a*a*a}function qc(a){return a}function Dl(a,e,t,n){const i=se(e)/t[0],l=be(e)/t[1];return n?Math.min(a,Math.max(i,l)):Math.min(a,Math.min(i,l))}function Ol(a,e,t){let n=Math.min(a,e);const i=50;return n*=Math.log(1+i*Math.max(0,a/e-1))/i+1,t&&(n=Math.max(n,t),n/=Math.log(1+i*Math.max(0,t/a-1))/i+1),ye(n,t/2,e*2)}function jc(a,e,t,n){return e=e!==void 0?e:!0,function(i,l,o,r){if(i!==void 0){const s=a[0],h=a[a.length-1],c=t?Dl(s,t,o,n):s;if(r)return e?Ol(i,c,h):ye(i,h,c);const u=Math.min(c,i),d=Math.floor(ml(a,u,l));return a[d]>c&&d<a.length-1?a[d+1]:a[d]}}}function Qc(a,e,t,n,i,l){return n=n!==void 0?n:!0,t=t!==void 0?t:0,function(o,r,s,h){if(o!==void 0){const c=i?Dl(e,i,s,l):e;if(h)return n?Ol(o,c,t):ye(o,t,c);const u=1e-9,d=Math.ceil(Math.log(e/c)/Math.log(a)-u),m=-r*(.5-u)+.5,y=Math.min(c,o),k=Math.floor(Math.log(e/y)/Math.log(a)+m),S=Math.max(d,k),g=e/Math.pow(a,S);return ye(g,t,c)}}}function zo(a,e,t,n,i){return t=t!==void 0?t:!0,function(l,o,r,s){if(l!==void 0){const h=n?Dl(a,n,r,i):a;return!t||!s?ye(l,e,h):Ol(l,h,e)}}}function xl(a){if(a!==void 0)return 0}function Zo(a){if(a!==void 0)return a}function $c(a){const e=2*Math.PI/a;return function(t,n){if(n)return t;if(t!==void 0)return t=Math.floor(t/e+.5)*e,t}}function eu(a){const e=Xt(5);return function(t,n){return n||t===void 0?t:Math.abs(t)<=e?0:t}}const tu=42,vl=256,Fi=0;class mt extends st{constructor(e){super(),this.on,this.once,this.un,e=Object.assign({},e),this.hints_=[0,0],this.animations_=[],this.updateAnimationKey_,this.projection_=Ml(e.projection,"EPSG:3857"),this.viewportSize_=[100,100],this.targetCenter_=null,this.targetResolution_,this.targetRotation_,this.nextCenter_=null,this.nextResolution_,this.nextRotation_,this.cancelAnchor_=void 0,e.projection&&pr(),e.center&&(e.center=Tt(e.center,this.projection_)),e.extent&&(e.extent=Yt(e.extent,this.projection_)),this.applyOptions_(e)}applyOptions_(e){const t=Object.assign({},e);for(const r in at)delete t[r];this.setProperties(t,!0);const n=au(e);this.maxResolution_=n.maxResolution,this.minResolution_=n.minResolution,this.zoomFactor_=n.zoomFactor,this.resolutions_=e.resolutions,this.padding_=e.padding,this.minZoom_=n.minZoom;const i=nu(e),l=n.constraint,o=iu(e);this.constraints_={center:i,resolution:l,rotation:o},this.setRotation(e.rotation!==void 0?e.rotation:0),this.setCenterInternal(e.center!==void 0?e.center:null),e.resolution!==void 0?this.setResolution(e.resolution):e.zoom!==void 0&&this.setZoom(e.zoom)}get padding(){return this.padding_}set padding(e){let t=this.padding_;this.padding_=e;const n=this.getCenterInternal();if(n){const i=e||[0,0,0,0];t=t||[0,0,0,0];const l=this.getResolution(),o=l/2*(i[3]-t[3]+t[1]-i[1]),r=l/2*(i[0]-t[0]+t[2]-i[2]);this.setCenterInternal([n[0]+o,n[1]-r])}}getUpdatedOptions_(e){const t=this.getProperties();return t.resolution!==void 0?t.resolution=this.getResolution():t.zoom=this.getZoom(),t.center=this.getCenterInternal(),t.rotation=this.getRotation(),Object.assign({},t,e)}animate(e){this.isDef()&&!this.getAnimating()&&this.resolveConstraints(0);const t=new Array(arguments.length);for(let n=0;n<t.length;++n){let i=arguments[n];i.center&&(i=Object.assign({},i),i.center=Tt(i.center,this.getProjection())),i.anchor&&(i=Object.assign({},i),i.anchor=Tt(i.anchor,this.getProjection())),t[n]=i}this.animateInternal.apply(this,t)}animateInternal(e){let t=arguments.length,n;t>1&&typeof arguments[t-1]=="function"&&(n=arguments[t-1],--t);let i=0;for(;i<t&&!this.isDef();++i){const c=arguments[i];c.center&&this.setCenterInternal(c.center),c.zoom!==void 0?this.setZoom(c.zoom):c.resolution&&this.setResolution(c.resolution),c.rotation!==void 0&&this.setRotation(c.rotation)}if(i===t){n&&Ja(n,!0);return}let l=Date.now(),o=this.targetCenter_.slice(),r=this.targetResolution_,s=this.targetRotation_;const h=[];for(;i<t;++i){const c=arguments[i],u={start:l,complete:!1,anchor:c.anchor,duration:c.duration!==void 0?c.duration:1e3,easing:c.easing||Zc,callback:n};if(c.center&&(u.sourceCenter=o,u.targetCenter=c.center.slice(),o=u.targetCenter),c.zoom!==void 0?(u.sourceResolution=r,u.targetResolution=this.getResolutionForZoom(c.zoom),r=u.targetResolution):c.resolution&&(u.sourceResolution=r,u.targetResolution=c.resolution,r=u.targetResolution),c.rotation!==void 0){u.sourceRotation=s;const d=cn(c.rotation-s+Math.PI,2*Math.PI)-Math.PI;u.targetRotation=s+d,s=u.targetRotation}lu(u)?u.complete=!0:l+=u.duration,h.push(u)}this.animations_.push(h),this.setHint(Ee.ANIMATING,1),this.updateAnimations_()}getAnimating(){return this.hints_[Ee.ANIMATING]>0}getInteracting(){return this.hints_[Ee.INTERACTING]>0}cancelAnimations(){this.setHint(Ee.ANIMATING,-this.hints_[Ee.ANIMATING]);let e;for(let t=0,n=this.animations_.length;t<n;++t){const i=this.animations_[t];if(i[0].callback&&Ja(i[0].callback,!1),!e)for(let l=0,o=i.length;l<o;++l){const r=i[l];if(!r.complete){e=r.anchor;break}}}this.animations_.length=0,this.cancelAnchor_=e,this.nextCenter_=null,this.nextResolution_=NaN,this.nextRotation_=NaN}updateAnimations_(){if(this.updateAnimationKey_!==void 0&&(cancelAnimationFrame(this.updateAnimationKey_),this.updateAnimationKey_=void 0),!this.getAnimating())return;const e=Date.now();let t=!1;for(let n=this.animations_.length-1;n>=0;--n){const i=this.animations_[n];let l=!0;for(let o=0,r=i.length;o<r;++o){const s=i[o];if(s.complete)continue;const h=e-s.start;let c=s.duration>0?h/s.duration:1;c>=1?(s.complete=!0,c=1):l=!1;const u=s.easing(c);if(s.sourceCenter){const d=s.sourceCenter[0],m=s.sourceCenter[1],y=s.targetCenter[0],k=s.targetCenter[1];this.nextCenter_=s.targetCenter;const S=d+u*(y-d),g=m+u*(k-m);this.targetCenter_=[S,g]}if(s.sourceResolution&&s.targetResolution){const d=u===1?s.targetResolution:s.sourceResolution+u*(s.targetResolution-s.sourceResolution);if(s.anchor){const m=this.getViewportSize_(this.getRotation()),y=this.constraints_.resolution(d,0,m,!0);this.targetCenter_=this.calculateCenterZoom(y,s.anchor)}this.nextResolution_=s.targetResolution,this.targetResolution_=d,this.applyTargetState_(!0)}if(s.sourceRotation!==void 0&&s.targetRotation!==void 0){const d=u===1?cn(s.targetRotation+Math.PI,2*Math.PI)-Math.PI:s.sourceRotation+u*(s.targetRotation-s.sourceRotation);if(s.anchor){const m=this.constraints_.rotation(d,!0);this.targetCenter_=this.calculateCenterRotate(m,s.anchor)}this.nextRotation_=s.targetRotation,this.targetRotation_=d}if(this.applyTargetState_(!0),t=!0,!s.complete)break}if(l){this.animations_[n]=null,this.setHint(Ee.ANIMATING,-1),this.nextCenter_=null,this.nextResolution_=NaN,this.nextRotation_=NaN;const o=i[0].callback;o&&Ja(o,!0)}}this.animations_=this.animations_.filter(Boolean),t&&this.updateAnimationKey_===void 0&&(this.updateAnimationKey_=requestAnimationFrame(this.updateAnimations_.bind(this)))}calculateCenterRotate(e,t){let n;const i=this.getCenterInternal();return i!==void 0&&(n=[i[0]-t[0],i[1]-t[1]],fl(n,e-this.getRotation()),Fs(n,t)),n}calculateCenterZoom(e,t){let n;const i=this.getCenterInternal(),l=this.getResolution();if(i!==void 0&&l!==void 0){const o=t[0]-e*(t[0]-i[0])/l,r=t[1]-e*(t[1]-i[1])/l;n=[o,r]}return n}getViewportSize_(e){const t=this.viewportSize_;if(e){const n=t[0],i=t[1];return[Math.abs(n*Math.cos(e))+Math.abs(i*Math.sin(e)),Math.abs(n*Math.sin(e))+Math.abs(i*Math.cos(e))]}return t}setViewportSize(e){this.viewportSize_=Array.isArray(e)?e.slice():[100,100],this.getAnimating()||this.resolveConstraints(0)}getCenter(){const e=this.getCenterInternal();return e&&ll(e,this.getProjection())}getCenterInternal(){return this.get(at.CENTER)}getConstraints(){return this.constraints_}getConstrainResolution(){return this.get("constrainResolution")}getHints(e){return e!==void 0?(e[0]=this.hints_[0],e[1]=this.hints_[1],e):this.hints_.slice()}calculateExtent(e){const t=this.calculateExtentInternal(e);return _r(t,this.getProjection())}calculateExtentInternal(e){e=e||this.getViewportSizeMinusPadding_();const t=this.getCenterInternal();oe(t,"The view center is not defined");const n=this.getResolution();oe(n!==void 0,"The view resolution is not defined");const i=this.getRotation();return oe(i!==void 0,"The view rotation is not defined"),el(t,n,i,e)}getMaxResolution(){return this.maxResolution_}getMinResolution(){return this.minResolution_}getMaxZoom(){return this.getZoomForResolution(this.minResolution_)}setMaxZoom(e){this.applyOptions_(this.getUpdatedOptions_({maxZoom:e}))}getMinZoom(){return this.getZoomForResolution(this.maxResolution_)}setMinZoom(e){this.applyOptions_(this.getUpdatedOptions_({minZoom:e}))}setConstrainResolution(e){this.applyOptions_(this.getUpdatedOptions_({constrainResolution:e}))}getProjection(){return this.projection_}getResolution(){return this.get(at.RESOLUTION)}getResolutions(){return this.resolutions_}getResolutionForExtent(e,t){return this.getResolutionForExtentInternal(Yt(e,this.getProjection()),t)}getResolutionForExtentInternal(e,t){t=t||this.getViewportSizeMinusPadding_();const n=se(e)/t[0],i=be(e)/t[1];return Math.max(n,i)}getResolutionForValueFunction(e){e=e||2;const t=this.getConstrainedResolution(this.maxResolution_),n=this.minResolution_,i=Math.log(t/n)/Math.log(e);return function(l){return t/Math.pow(e,l*i)}}getRotation(){return this.get(at.ROTATION)}getValueForResolutionFunction(e){const t=Math.log(e||2),n=this.getConstrainedResolution(this.maxResolution_),i=this.minResolution_,l=Math.log(n/i)/t;return function(o){return Math.log(n/o)/t/l}}getViewportSizeMinusPadding_(e){let t=this.getViewportSize_(e);const n=this.padding_;return n&&(t=[t[0]-n[1]-n[3],t[1]-n[0]-n[2]]),t}getState(){const e=this.getProjection(),t=this.getResolution(),n=this.getRotation();let i=this.getCenterInternal();const l=this.padding_;if(l){const o=this.getViewportSizeMinusPadding_();i=Ki(i,this.getViewportSize_(),[o[0]/2+l[3],o[1]/2+l[0]],t,n)}return{center:i.slice(0),projection:e!==void 0?e:null,resolution:t,nextCenter:this.nextCenter_,nextResolution:this.nextResolution_,nextRotation:this.nextRotation_,rotation:n,zoom:this.getZoom()}}getViewStateAndExtent(){return{viewState:this.getState(),extent:this.calculateExtent()}}getZoom(){let e;const t=this.getResolution();return t!==void 0&&(e=this.getZoomForResolution(t)),e}getZoomForResolution(e){let t=this.minZoom_||0,n,i;if(this.resolutions_){const l=ml(this.resolutions_,e,1);t=l,n=this.resolutions_[l],l==this.resolutions_.length-1?i=2:i=n/this.resolutions_[l+1]}else n=this.maxResolution_,i=this.zoomFactor_;return t+Math.log(n/e)/Math.log(i)}getResolutionForZoom(e){var t;if((t=this.resolutions_)!=null&&t.length){if(this.resolutions_.length===1)return this.resolutions_[0];const n=ye(Math.floor(e),0,this.resolutions_.length-2),i=this.resolutions_[n]/this.resolutions_[n+1];return this.resolutions_[n]/Math.pow(i,ye(e-n,0,1))}return this.maxResolution_/Math.pow(this.zoomFactor_,e-this.minZoom_)}fit(e,t){let n;if(oe(Array.isArray(e)||typeof e.getSimplifiedGeometry=="function","Invalid extent or geometry provided as `geometry`"),Array.isArray(e)){oe(!ui(e),"Cannot fit empty extent provided as `geometry`");const i=Yt(e,this.getProjection());n=fo(i)}else if(e.getType()==="Circle"){const i=Yt(e.getExtent(),this.getProjection());n=fo(i),n.rotate(this.getRotation(),un(i))}else n=e;this.fitInternal(n,t)}rotatedExtentForGeometry(e){const t=this.getRotation(),n=Math.cos(t),i=Math.sin(-t),l=e.getFlatCoordinates(),o=e.getStride();let r=1/0,s=1/0,h=-1/0,c=-1/0;for(let u=0,d=l.length;u<d;u+=o){const m=l[u]*n-l[u+1]*i,y=l[u]*i+l[u+1]*n;r=Math.min(r,m),s=Math.min(s,y),h=Math.max(h,m),c=Math.max(c,y)}return[r,s,h,c]}fitInternal(e,t){t=t||{};let n=t.size;n||(n=this.getViewportSizeMinusPadding_());const i=t.padding!==void 0?t.padding:[0,0,0,0],l=t.nearest!==void 0?t.nearest:!1;let o;t.minResolution!==void 0?o=t.minResolution:t.maxZoom!==void 0?o=this.getResolutionForZoom(t.maxZoom):o=0;const r=this.rotatedExtentForGeometry(e);let s=this.getResolutionForExtentInternal(r,[n[0]-i[1]-i[3],n[1]-i[0]-i[2]]);s=isNaN(s)?o:Math.max(s,o),s=this.getConstrainedResolution(s,l?0:1);const h=this.getRotation(),c=Math.sin(h),u=Math.cos(h),d=un(r);d[0]+=(i[1]-i[3])/2*s,d[1]+=(i[0]-i[2])/2*s;const m=d[0]*u-d[1]*c,y=d[1]*u+d[0]*c,k=this.getConstrainedCenter([m,y],s),S=t.callback?t.callback:ca;t.duration!==void 0?this.animateInternal({resolution:s,center:k,duration:t.duration,easing:t.easing},S):(this.targetResolution_=s,this.targetCenter_=k,this.applyTargetState_(!1,!0),Ja(S,!0))}centerOn(e,t,n){this.centerOnInternal(Tt(e,this.getProjection()),t,n)}centerOnInternal(e,t,n){this.setCenterInternal(Ki(e,t,n,this.getResolution(),this.getRotation()))}calculateCenterShift(e,t,n,i){let l;const o=this.padding_;if(o&&e){const r=this.getViewportSizeMinusPadding_(-n),s=Ki(e,i,[r[0]/2+o[3],r[1]/2+o[0]],t,n);l=[e[0]-s[0],e[1]-s[1]]}return l}isDef(){return!!this.getCenterInternal()&&this.getResolution()!==void 0}adjustCenter(e){const t=ll(this.targetCenter_,this.getProjection());this.setCenter([t[0]+e[0],t[1]+e[1]])}adjustCenterInternal(e){const t=this.targetCenter_;this.setCenterInternal([t[0]+e[0],t[1]+e[1]])}adjustResolution(e,t){t=t&&Tt(t,this.getProjection()),this.adjustResolutionInternal(e,t)}adjustResolutionInternal(e,t){const n=this.getAnimating()||this.getInteracting(),i=this.getViewportSize_(this.getRotation()),l=this.constraints_.resolution(this.targetResolution_*e,0,i,n);t&&(this.targetCenter_=this.calculateCenterZoom(l,t)),this.targetResolution_*=e,this.applyTargetState_()}adjustZoom(e,t){this.adjustResolution(Math.pow(this.zoomFactor_,-e),t)}adjustRotation(e,t){t&&(t=Tt(t,this.getProjection())),this.adjustRotationInternal(e,t)}adjustRotationInternal(e,t){const n=this.getAnimating()||this.getInteracting(),i=this.constraints_.rotation(this.targetRotation_+e,n);t&&(this.targetCenter_=this.calculateCenterRotate(i,t)),this.targetRotation_+=e,this.applyTargetState_()}setCenter(e){this.setCenterInternal(e&&Tt(e,this.getProjection()))}setCenterInternal(e){this.targetCenter_=e,this.applyTargetState_()}setHint(e,t){return this.hints_[e]+=t,this.changed(),this.hints_[e]}setResolution(e){this.targetResolution_=e,this.applyTargetState_()}setRotation(e){this.targetRotation_=e,this.applyTargetState_()}setZoom(e){this.setResolution(this.getResolutionForZoom(e))}applyTargetState_(e,t){const n=this.getAnimating()||this.getInteracting()||t,i=this.constraints_.rotation(this.targetRotation_,n),l=this.getViewportSize_(i),o=this.constraints_.resolution(this.targetResolution_,0,l,n),r=this.constraints_.center(this.targetCenter_,o,l,n,this.calculateCenterShift(this.targetCenter_,o,i,l));this.get(at.ROTATION)!==i&&this.set(at.ROTATION,i),this.get(at.RESOLUTION)!==o&&(this.set(at.RESOLUTION,o),this.set("zoom",this.getZoom(),!0)),(!r||!this.get(at.CENTER)||!Ya(this.get(at.CENTER),r))&&this.set(at.CENTER,r),this.getAnimating()&&!e&&this.cancelAnimations(),this.cancelAnchor_=void 0}resolveConstraints(e,t,n){e=e!==void 0?e:200;const i=t||0,l=this.constraints_.rotation(this.targetRotation_),o=this.getViewportSize_(l),r=this.constraints_.resolution(this.targetResolution_,i,o),s=this.constraints_.center(this.targetCenter_,r,o,!1,this.calculateCenterShift(this.targetCenter_,r,l,o));if(e===0&&!this.cancelAnchor_){this.targetResolution_=r,this.targetRotation_=l,this.targetCenter_=s,this.applyTargetState_();return}n=n||(e===0?this.cancelAnchor_:void 0),this.cancelAnchor_=void 0,(this.getResolution()!==r||this.getRotation()!==l||!this.getCenterInternal()||!Ya(this.getCenterInternal(),s))&&(this.getAnimating()&&this.cancelAnimations(),this.animateInternal({rotation:l,center:s,resolution:r,duration:e,easing:Xn,anchor:n}))}beginInteraction(){this.resolveConstraints(0),this.setHint(Ee.INTERACTING,1)}endInteraction(e,t,n){n=n&&Tt(n,this.getProjection()),this.endInteractionInternal(e,t,n)}endInteractionInternal(e,t,n){this.getInteracting()&&(this.setHint(Ee.INTERACTING,-1),this.resolveConstraints(e,t,n))}getConstrainedCenter(e,t){const n=this.getViewportSize_(this.getRotation());return this.constraints_.center(e,t||this.getResolution(),n)}getConstrainedZoom(e,t){const n=this.getResolutionForZoom(e);return this.getZoomForResolution(this.getConstrainedResolution(n,t))}getConstrainedResolution(e,t){t=t||0;const n=this.getViewportSize_(this.getRotation());return this.constraints_.resolution(e,t,n)}}function Ja(a,e){setTimeout(function(){a(e)},0)}function nu(a){if(a.extent!==void 0){const t=a.smoothExtentConstraint!==void 0?a.smoothExtentConstraint:!0;return Xo(a.extent,a.constrainOnlyCenter,t)}const e=Ml(a.projection,"EPSG:3857");if(a.multiWorld!==!0&&e.isGlobal()){const t=e.getExtent().slice();return t[0]=-1/0,t[2]=1/0,Xo(t,!1,!1)}return zc}function au(a){let e,t,n,o=a.minZoom!==void 0?a.minZoom:Fi,r=a.maxZoom!==void 0?a.maxZoom:28;const s=a.zoomFactor!==void 0?a.zoomFactor:2,h=a.multiWorld!==void 0?a.multiWorld:!1,c=a.smoothResolutionConstraint!==void 0?a.smoothResolutionConstraint:!0,u=a.showFullExtent!==void 0?a.showFullExtent:!1,d=Ml(a.projection,"EPSG:3857"),m=d.getExtent();let y=a.constrainOnlyCenter,k=a.extent;if(!h&&!k&&d.isGlobal()&&(y=!1,k=m),a.resolutions!==void 0){const S=a.resolutions;t=S[o],n=S[r]!==void 0?S[r]:S[S.length-1],a.constrainResolution?e=jc(S,c,!y&&k,u):e=zo(t,n,c,!y&&k,u)}else{const g=(m?Math.max(se(m),be(m)):360*gl.degrees/d.getMetersPerUnit())/vl/Math.pow(2,Fi),f=g/Math.pow(2,28-Fi);t=a.maxResolution,t!==void 0?o=0:t=g/Math.pow(s,o),n=a.minResolution,n===void 0&&(a.maxZoom!==void 0?a.maxResolution!==void 0?n=t/Math.pow(s,r):n=g/Math.pow(s,r):n=f),r=o+Math.floor(Math.log(t/n)/Math.log(s)),n=t/Math.pow(s,r-o),a.constrainResolution?e=Qc(s,t,n,c,!y&&k,u):e=zo(t,n,c,!y&&k,u)}return{constraint:e,maxResolution:t,minResolution:n,minZoom:o,zoomFactor:s}}function iu(a){if(a.enableRotation!==void 0?a.enableRotation:!0){const t=a.constrainRotation;return t===void 0||t===!0?eu():t===!1?Zo:typeof t=="number"?$c(t):Zo}return xl}function lu(a){return!(a.sourceCenter&&a.targetCenter&&!Ya(a.sourceCenter,a.targetCenter)||a.sourceResolution!==a.targetResolution||a.sourceRotation!==a.targetRotation)}function Ki(a,e,t,n,i){const l=Math.cos(-i);let o=Math.sin(-i),r=a[0]*l-a[1]*o,s=a[1]*l+a[0]*o;r+=(e[0]/2-t[0])*n,s+=(t[1]-e[1]/2)*n,o=-o;const h=r*l-s*o,c=s*l+r*o;return[h,c]}const re={OPACITY:"opacity",VISIBLE:"visible",EXTENT:"extent",Z_INDEX:"zIndex",MAX_RESOLUTION:"maxResolution",MIN_RESOLUTION:"minResolution",MAX_ZOOM:"maxZoom",MIN_ZOOM:"minZoom",SOURCE:"source",MAP:"map"};class hs extends st{constructor(e){super(),this.on,this.once,this.un,this.background_=e.background;const t=Object.assign({},e);typeof e.properties=="object"&&(delete t.properties,Object.assign(t,e.properties)),t[re.OPACITY]=e.opacity!==void 0?e.opacity:1,oe(typeof t[re.OPACITY]=="number","Layer opacity must be a number"),t[re.VISIBLE]=e.visible!==void 0?e.visible:!0,t[re.Z_INDEX]=e.zIndex,t[re.MAX_RESOLUTION]=e.maxResolution!==void 0?e.maxResolution:1/0,t[re.MIN_RESOLUTION]=e.minResolution!==void 0?e.minResolution:0,t[re.MIN_ZOOM]=e.minZoom!==void 0?e.minZoom:-1/0,t[re.MAX_ZOOM]=e.maxZoom!==void 0?e.maxZoom:1/0,this.className_=t.className!==void 0?t.className:"ol-layer",delete t.className,this.setProperties(t),this.state_=null}getBackground(){return this.background_}getClassName(){return this.className_}getLayerState(e){const t=this.state_||{layer:this,managed:e===void 0?!0:e},n=this.getZIndex();return t.opacity=ye(Math.round(this.getOpacity()*100)/100,0,1),t.visible=this.getVisible(),t.extent=this.getExtent(),t.zIndex=n===void 0&&!t.managed?1/0:n,t.maxResolution=this.getMaxResolution(),t.minResolution=Math.max(this.getMinResolution(),0),t.minZoom=this.getMinZoom(),t.maxZoom=this.getMaxZoom(),this.state_=t,t}getLayersArray(e){return te()}getLayerStatesArray(e){return te()}getExtent(){return this.get(re.EXTENT)}getMaxResolution(){return this.get(re.MAX_RESOLUTION)}getMinResolution(){return this.get(re.MIN_RESOLUTION)}getMinZoom(){return this.get(re.MIN_ZOOM)}getMaxZoom(){return this.get(re.MAX_ZOOM)}getOpacity(){return this.get(re.OPACITY)}getSourceState(){return te()}getVisible(){return this.get(re.VISIBLE)}getZIndex(){return this.get(re.Z_INDEX)}setBackground(e){this.background_=e,this.changed()}setExtent(e){this.set(re.EXTENT,e)}setMaxResolution(e){this.set(re.MAX_RESOLUTION,e)}setMinResolution(e){this.set(re.MIN_RESOLUTION,e)}setMaxZoom(e){this.set(re.MAX_ZOOM,e)}setMinZoom(e){this.set(re.MIN_ZOOM,e)}setOpacity(e){oe(typeof e=="number","Layer opacity must be a number"),this.set(re.OPACITY,e)}setVisible(e){this.set(re.VISIBLE,e)}setZIndex(e){this.set(re.Z_INDEX,e)}disposeInternal(){this.state_&&(this.state_.layer=null,this.state_=null),super.disposeInternal()}}class Li extends hs{constructor(e){const t=Object.assign({},e);delete t.source,super(t),this.on,this.once,this.un,this.mapPrecomposeKey_=null,this.mapRenderKey_=null,this.sourceChangeKey_=null,this.renderer_=null,this.sourceReady_=!1,this.rendered=!1,e.render&&(this.render=e.render),e.map&&this.setMap(e.map),this.addChangeListener(re.SOURCE,this.handleSourcePropertyChange_);const n=e.source?e.source:null;this.setSource(n)}getLayersArray(e){return e=e||[],e.push(this),e}getLayerStatesArray(e){return e=e||[],e.push(this.getLayerState()),e}getSource(){return this.get(re.SOURCE)||null}getRenderSource(){return this.getSource()}getSourceState(){const e=this.getSource();return e?e.getState():"undefined"}handleSourceChange_(){this.changed(),!(this.sourceReady_||this.getSource().getState()!=="ready")&&(this.sourceReady_=!0,this.dispatchEvent("sourceready"))}handleSourcePropertyChange_(){this.sourceChangeKey_&&(de(this.sourceChangeKey_),this.sourceChangeKey_=null),this.sourceReady_=!1;const e=this.getSource();e&&(this.sourceChangeKey_=$(e,z.CHANGE,this.handleSourceChange_,this),e.getState()==="ready"&&(this.sourceReady_=!0,setTimeout(()=>{this.dispatchEvent("sourceready")},0)),this.clearRenderer()),this.changed()}getFeatures(e){return this.renderer_?this.renderer_.getFeatures(e):Promise.resolve([])}getData(e){return!this.renderer_||!this.rendered?null:this.renderer_.getData(e)}isVisible(e){let t;const n=this.getMapInternal();!e&&n&&(e=n.getView()),e instanceof mt?t={viewState:e.getState(),extent:e.calculateExtent()}:t=e,!t.layerStatesArray&&n&&(t.layerStatesArray=n.getLayerGroup().getLayerStatesArray());let i;if(t.layerStatesArray){if(i=t.layerStatesArray.find(o=>o.layer===this),!i)return!1}else i=this.getLayerState();const l=this.getExtent();return Nl(i,t.viewState)&&(!l||ve(l,t.extent))}getAttributions(e){var l;if(!this.isVisible(e))return[];const t=(l=this.getSource())==null?void 0:l.getAttributions();if(!t)return[];const n=e instanceof mt?e.getViewStateAndExtent():e;let i=t(n);return Array.isArray(i)||(i=[i]),i}render(e,t){const n=this.getRenderer();return n.prepareFrame(e)?(this.rendered=!0,n.renderFrame(e,t)):null}unrender(){this.rendered=!1}getDeclutter(){}renderDeclutter(e,t){}renderDeferred(e){const t=this.getRenderer();t&&t.renderDeferred(e)}setMapInternal(e){e||this.unrender(),this.set(re.MAP,e)}getMapInternal(){return this.get(re.MAP)}setMap(e){this.mapPrecomposeKey_&&(de(this.mapPrecomposeKey_),this.mapPrecomposeKey_=null),e||this.changed(),this.mapRenderKey_&&(de(this.mapRenderKey_),this.mapRenderKey_=null),e&&(this.mapPrecomposeKey_=$(e,$e.PRECOMPOSE,this.handlePrecompose_,this),this.mapRenderKey_=$(this,z.CHANGE,e.render,e),this.changed())}handlePrecompose_(e){const t=e.frameState.layerStatesArray,n=this.getLayerState(!1);oe(!t.some(i=>i.layer===n.layer),"A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both."),t.push(n)}setSource(e){this.set(re.SOURCE,e)}getRenderer(){return this.renderer_||(this.renderer_=this.createRenderer()),this.renderer_}hasRenderer(){return!!this.renderer_}createRenderer(){return null}clearRenderer(){this.renderer_&&(this.renderer_.dispose(),delete this.renderer_)}disposeInternal(){this.clearRenderer(),this.setSource(null),super.disposeInternal()}}function Nl(a,e){if(!a.visible)return!1;const t=e.resolution;if(t<a.minResolution||t>=a.maxResolution)return!1;const n=e.zoom;return n>a.minZoom&&n<=a.maxZoom}const qo={RENDER_ORDER:"renderOrder"};class cs extends Li{constructor(e){e=e||{};const t=Object.assign({},e);delete t.style,delete t.renderBuffer,delete t.updateWhileAnimating,delete t.updateWhileInteracting,super(t),this.declutter_=e.declutter?String(e.declutter):void 0,this.renderBuffer_=e.renderBuffer!==void 0?e.renderBuffer:100,this.style_=null,this.styleFunction_=void 0,this.setStyle(e.style),this.updateWhileAnimating_=e.updateWhileAnimating!==void 0?e.updateWhileAnimating:!1,this.updateWhileInteracting_=e.updateWhileInteracting!==void 0?e.updateWhileInteracting:!1}getDeclutter(){return this.declutter_}getFeatures(e){return super.getFeatures(e)}getRenderBuffer(){return this.renderBuffer_}getRenderOrder(){return this.get(qo.RENDER_ORDER)}getStyle(){return this.style_}getStyleFunction(){return this.styleFunction_}getUpdateWhileAnimating(){return this.updateWhileAnimating_}getUpdateWhileInteracting(){return this.updateWhileInteracting_}renderDeclutter(e,t){const n=this.getDeclutter();n in e.declutter||(e.declutter[n]=new zr(9)),this.getRenderer().renderDeclutter(e,t)}setRenderOrder(e){this.set(qo.RENDER_ORDER,e)}setStyle(e){this.style_=e===void 0?qr:e;const t=ou(e);this.styleFunction_=e===null?void 0:Jh(t),this.changed()}setDeclutter(e){this.declutter_=e?String(e):void 0,this.changed()}}function ou(a){if(a===void 0)return qr;if(!a)return null;if(typeof a=="function"||a instanceof kt)return a;if(!Array.isArray(a))return Fo([a]);if(a.length===0)return[];const e=a.length,t=a[0];if(t instanceof kt){const i=new Array(e);for(let l=0;l<e;++l){const o=a[l];if(!(o instanceof kt))throw new Error("Expected a list of style instances");i[l]=o}return i}if("style"in t){const i=new Array(e);for(let l=0;l<e;++l){const o=a[l];if(!("style"in o))throw new Error("Expected a list of rules with a style property");i[l]=o}return Pc(i)}return Fo(a)}class jo extends cs{constructor(e){super(e)}createRenderer(){return new hc(this)}}const J={IDLE:0,LOADING:1,LOADED:2,ERROR:3,EMPTY:4};class Hl extends oi{constructor(e,t,n){super(),n=n||{},this.tileCoord=e,this.state=t,this.key="",this.transition_=n.transition===void 0?250:n.transition,this.transitionStarts_={},this.interpolate=!!n.interpolate}changed(){this.dispatchEvent(z.CHANGE)}release(){this.setState(J.EMPTY)}getKey(){return this.key+"/"+this.tileCoord}getTileCoord(){return this.tileCoord}getState(){return this.state}setState(e){if(this.state!==J.EMPTY){if(this.state!==J.ERROR&&this.state>e)throw new Error("Tile load sequence violation");this.state=e,this.changed()}}load(){te()}getAlpha(e,t){if(!this.transition_)return 1;let n=this.transitionStarts_[e];if(!n)n=t,this.transitionStarts_[e]=n;else if(n===-1)return 1;const i=t-n+1e3/60;return i>=this.transition_?1:ss(i/this.transition_)}inTransition(e){return this.transition_?this.transitionStarts_[e]!==-1:!1}endTransition(e){this.transition_&&(this.transitionStarts_[e]=-1)}disposeInternal(){this.release(),super.disposeInternal()}}class us extends Hl{constructor(e,t,n,i,l,o){super(e,t,o),this.crossOrigin_=i,this.src_=n,this.key=n,this.image_=new Image,i!==null&&(this.image_.crossOrigin=i),this.unlisten_=null,this.tileLoadFunction_=l}getImage(){return this.image_}setImage(e){this.image_=e,this.state=J.LOADED,this.unlistenImage_(),this.changed()}handleImageError_(){this.state=J.ERROR,this.unlistenImage_(),this.image_=ru(),this.changed()}handleImageLoad_(){const e=this.image_;e.naturalWidth&&e.naturalHeight?this.state=J.LOADED:this.state=J.EMPTY,this.unlistenImage_(),this.changed()}load(){this.state==J.ERROR&&(this.state=J.IDLE,this.image_=new Image,this.crossOrigin_!==null&&(this.image_.crossOrigin=this.crossOrigin_)),this.state==J.IDLE&&(this.state=J.LOADING,this.changed(),this.tileLoadFunction_(this,this.src_),this.unlisten_=rh(this.image_,this.handleImageLoad_.bind(this),this.handleImageError_.bind(this)))}unlistenImage_(){this.unlisten_&&(this.unlisten_(),this.unlisten_=null)}disposeInternal(){this.unlistenImage_(),this.image_=null,super.disposeInternal()}}function ru(){const a=pe(1,1);return a.fillStyle="rgba(0,0,0,0)",a.fillRect(0,0,1,1),a.canvas}class su{constructor(e,t,n){this.decay_=e,this.minVelocity_=t,this.delay_=n,this.points_=[],this.angle_=0,this.initialVelocity_=0}begin(){this.points_.length=0,this.angle_=0,this.initialVelocity_=0}update(e,t){this.points_.push(e,t,Date.now())}end(){if(this.points_.length<6)return!1;const e=Date.now()-this.delay_,t=this.points_.length-3;if(this.points_[t+2]<e)return!1;let n=t-3;for(;n>0&&this.points_[n+2]>e;)n-=3;const i=this.points_[t+2]-this.points_[n+2];if(i<1e3/60)return!1;const l=this.points_[t]-this.points_[n],o=this.points_[t+1]-this.points_[n+1];return this.angle_=Math.atan2(o,l),this.initialVelocity_=Math.sqrt(l*l+o*o)/i,this.initialVelocity_>this.minVelocity_}getDistance(){return(this.minVelocity_-this.initialVelocity_)/this.decay_}getAngle(){return this.angle_}}class En extends Pt{constructor(e,t,n){super(e),this.map=t,this.frameState=n!==void 0?n:null}}class Ft extends En{constructor(e,t,n,i,l,o){super(e,t,l),this.originalEvent=n,this.pixel_=null,this.coordinate_=null,this.dragging=i!==void 0?i:!1,this.activePointers=o}get pixel(){return this.pixel_||(this.pixel_=this.map.getEventPixel(this.originalEvent)),this.pixel_}set pixel(e){this.pixel_=e}get coordinate(){return this.coordinate_||(this.coordinate_=this.map.getCoordinateFromPixel(this.pixel)),this.coordinate_}set coordinate(e){this.coordinate_=e}preventDefault(){super.preventDefault(),"preventDefault"in this.originalEvent&&this.originalEvent.preventDefault()}stopPropagation(){super.stopPropagation(),"stopPropagation"in this.originalEvent&&this.originalEvent.stopPropagation()}}const ke={SINGLECLICK:"singleclick",CLICK:z.CLICK,DBLCLICK:z.DBLCLICK,POINTERDRAG:"pointerdrag",POINTERMOVE:"pointermove",POINTERDOWN:"pointerdown",POINTERUP:"pointerup",POINTEROVER:"pointerover",POINTEROUT:"pointerout",POINTERENTER:"pointerenter",POINTERLEAVE:"pointerleave",POINTERCANCEL:"pointercancel"},cl={POINTERMOVE:"pointermove",POINTERDOWN:"pointerdown"};class hu extends oi{constructor(e,t){super(e),this.map_=e,this.clickTimeoutId_,this.emulateClicks_=!1,this.dragging_=!1,this.dragListenerKeys_=[],this.moveTolerance_=t===void 0?1:t,this.down_=null;const n=this.map_.getViewport();this.activePointers_=[],this.trackedTouches_={},this.element_=n,this.pointerdownListenerKey_=$(n,cl.POINTERDOWN,this.handlePointerDown_,this),this.originalPointerMoveEvent_,this.relayedListenerKey_=$(n,cl.POINTERMOVE,this.relayMoveEvent_,this),this.boundHandleTouchMove_=this.handleTouchMove_.bind(this),this.element_.addEventListener(z.TOUCHMOVE,this.boundHandleTouchMove_,Dr?{passive:!1}:!1)}emulateClick_(e){let t=new Ft(ke.CLICK,this.map_,e);this.dispatchEvent(t),this.clickTimeoutId_!==void 0?(clearTimeout(this.clickTimeoutId_),this.clickTimeoutId_=void 0,t=new Ft(ke.DBLCLICK,this.map_,e),this.dispatchEvent(t)):this.clickTimeoutId_=setTimeout(()=>{this.clickTimeoutId_=void 0;const n=new Ft(ke.SINGLECLICK,this.map_,e);this.dispatchEvent(n)},250)}updateActivePointers_(e){const t=e,n=t.pointerId;if(t.type==ke.POINTERUP||t.type==ke.POINTERCANCEL){delete this.trackedTouches_[n];for(const i in this.trackedTouches_)if(this.trackedTouches_[i].target!==t.target){delete this.trackedTouches_[i];break}}else(t.type==ke.POINTERDOWN||t.type==ke.POINTERMOVE)&&(this.trackedTouches_[n]=t);this.activePointers_=Object.values(this.trackedTouches_)}handlePointerUp_(e){this.updateActivePointers_(e);const t=new Ft(ke.POINTERUP,this.map_,e,void 0,void 0,this.activePointers_);this.dispatchEvent(t),this.emulateClicks_&&!t.defaultPrevented&&!this.dragging_&&this.isMouseActionButton_(e)&&this.emulateClick_(this.down_),this.activePointers_.length===0&&(this.dragListenerKeys_.forEach(de),this.dragListenerKeys_.length=0,this.dragging_=!1,this.down_=null)}isMouseActionButton_(e){return e.button===0}handlePointerDown_(e){this.emulateClicks_=this.activePointers_.length===0,this.updateActivePointers_(e);const t=new Ft(ke.POINTERDOWN,this.map_,e,void 0,void 0,this.activePointers_);if(this.dispatchEvent(t),this.down_=new PointerEvent(e.type,e),Object.defineProperty(this.down_,"target",{writable:!1,value:e.target}),this.dragListenerKeys_.length===0){const n=this.map_.getOwnerDocument();this.dragListenerKeys_.push($(n,ke.POINTERMOVE,this.handlePointerMove_,this),$(n,ke.POINTERUP,this.handlePointerUp_,this),$(this.element_,ke.POINTERCANCEL,this.handlePointerUp_,this)),this.element_.getRootNode&&this.element_.getRootNode()!==n&&this.dragListenerKeys_.push($(this.element_.getRootNode(),ke.POINTERUP,this.handlePointerUp_,this))}}handlePointerMove_(e){if(this.isMoving_(e)){this.updateActivePointers_(e),this.dragging_=!0;const t=new Ft(ke.POINTERDRAG,this.map_,e,this.dragging_,void 0,this.activePointers_);this.dispatchEvent(t)}}relayMoveEvent_(e){this.originalPointerMoveEvent_=e;const t=!!(this.down_&&this.isMoving_(e));this.dispatchEvent(new Ft(ke.POINTERMOVE,this.map_,e,t))}handleTouchMove_(e){const t=this.originalPointerMoveEvent_;(!t||t.defaultPrevented)&&(typeof e.cancelable!="boolean"||e.cancelable===!0)&&e.preventDefault()}isMoving_(e){return this.dragging_||Math.abs(e.clientX-this.down_.clientX)>this.moveTolerance_||Math.abs(e.clientY-this.down_.clientY)>this.moveTolerance_}disposeInternal(){this.relayedListenerKey_&&(de(this.relayedListenerKey_),this.relayedListenerKey_=null),this.element_.removeEventListener(z.TOUCHMOVE,this.boundHandleTouchMove_),this.pointerdownListenerKey_&&(de(this.pointerdownListenerKey_),this.pointerdownListenerKey_=null),this.dragListenerKeys_.forEach(de),this.dragListenerKeys_.length=0,this.element_=null,super.disposeInternal()}}const Et={POSTRENDER:"postrender",MOVESTART:"movestart",MOVEEND:"moveend",LOADSTART:"loadstart",LOADEND:"loadend"},we={LAYERGROUP:"layergroup",SIZE:"size",TARGET:"target",VIEW:"view"},ni=1/0;class cu{constructor(e,t){this.priorityFunction_=e,this.keyFunction_=t,this.elements_=[],this.priorities_=[],this.queuedElements_={}}clear(){this.elements_.length=0,this.priorities_.length=0,_a(this.queuedElements_)}dequeue(){const e=this.elements_,t=this.priorities_,n=e[0];e.length==1?(e.length=0,t.length=0):(e[0]=e.pop(),t[0]=t.pop(),this.siftUp_(0));const i=this.keyFunction_(n);return delete this.queuedElements_[i],n}enqueue(e){oe(!(this.keyFunction_(e)in this.queuedElements_),"Tried to enqueue an `element` that was already added to the queue");const t=this.priorityFunction_(e);return t!=ni?(this.elements_.push(e),this.priorities_.push(t),this.queuedElements_[this.keyFunction_(e)]=!0,this.siftDown_(0,this.elements_.length-1),!0):!1}getCount(){return this.elements_.length}getLeftChildIndex_(e){return e*2+1}getRightChildIndex_(e){return e*2+2}getParentIndex_(e){return e-1>>1}heapify_(){let e;for(e=(this.elements_.length>>1)-1;e>=0;e--)this.siftUp_(e)}isEmpty(){return this.elements_.length===0}isKeyQueued(e){return e in this.queuedElements_}isQueued(e){return this.isKeyQueued(this.keyFunction_(e))}siftUp_(e){const t=this.elements_,n=this.priorities_,i=t.length,l=t[e],o=n[e],r=e;for(;e<i>>1;){const s=this.getLeftChildIndex_(e),h=this.getRightChildIndex_(e),c=h<i&&n[h]<n[s]?h:s;t[e]=t[c],n[e]=n[c],e=c}t[e]=l,n[e]=o,this.siftDown_(r,e)}siftDown_(e,t){const n=this.elements_,i=this.priorities_,l=n[t],o=i[t];for(;t>e;){const r=this.getParentIndex_(t);if(i[r]>o)n[t]=n[r],i[t]=i[r],t=r;else break}n[t]=l,i[t]=o}reprioritize(){const e=this.priorityFunction_,t=this.elements_,n=this.priorities_;let i=0;const l=t.length;let o,r,s;for(r=0;r<l;++r)o=t[r],s=e(o),s==ni?delete this.queuedElements_[this.keyFunction_(o)]:(n[i]=s,t[i++]=o);t.length=i,n.length=i,this.heapify_()}}class uu extends cu{constructor(e,t){super(n=>e.apply(null,n),n=>n[0].getKey()),this.boundHandleTileChange_=this.handleTileChange.bind(this),this.tileChangeCallback_=t,this.tilesLoading_=0,this.tilesLoadingKeys_={}}enqueue(e){const t=super.enqueue(e);return t&&e[0].addEventListener(z.CHANGE,this.boundHandleTileChange_),t}getTilesLoading(){return this.tilesLoading_}handleTileChange(e){const t=e.target,n=t.getState();if(n===J.LOADED||n===J.ERROR||n===J.EMPTY){n!==J.ERROR&&t.removeEventListener(z.CHANGE,this.boundHandleTileChange_);const i=t.getKey();i in this.tilesLoadingKeys_&&(delete this.tilesLoadingKeys_[i],--this.tilesLoading_),this.tileChangeCallback_()}}loadMoreTiles(e,t){let n=0;for(;this.tilesLoading_<e&&n<t&&this.getCount()>0;){const i=this.dequeue()[0],l=i.getKey();i.getState()===J.IDLE&&!(l in this.tilesLoadingKeys_)&&(this.tilesLoadingKeys_[l]=!0,++this.tilesLoading_,++n,i.load())}}}function du(a,e,t,n,i){if(!a||!(t in a.wantedTiles)||!a.wantedTiles[t][e.getKey()])return ni;const l=a.viewState.center,o=n[0]-l[0],r=n[1]-l[1];return 65536*Math.log(i)+Math.sqrt(o*o+r*r)/i}class Ai extends st{constructor(e){super();const t=e.element;t&&!e.target&&!t.style.pointerEvents&&(t.style.pointerEvents="auto"),this.element=t||null,this.target_=null,this.map_=null,this.listenerKeys=[],e.render&&(this.render=e.render),e.target&&this.setTarget(e.target)}disposeInternal(){var e;(e=this.element)==null||e.remove(),super.disposeInternal()}getMap(){return this.map_}setMap(e){var t;this.map_&&((t=this.element)==null||t.remove());for(let n=0,i=this.listenerKeys.length;n<i;++n)de(this.listenerKeys[n]);if(this.listenerKeys.length=0,this.map_=e,e){const n=this.target_??e.getOverlayContainerStopEvent();this.element&&n.appendChild(this.element),this.render!==ca&&this.listenerKeys.push($(e,Et.POSTRENDER,this.render,this)),e.render()}}render(e){}setTarget(e){this.target_=typeof e=="string"?document.getElementById(e):e}}class mu extends Ai{constructor(e){e=e||{},super({element:document.createElement("div"),render:e.render,target:e.target}),this.ulElement_=document.createElement("ul"),this.collapsed_=e.collapsed!==void 0?e.collapsed:!0,this.userCollapsed_=this.collapsed_,this.overrideCollapsible_=e.collapsible!==void 0,this.collapsible_=e.collapsible!==void 0?e.collapsible:!0,this.collapsible_||(this.collapsed_=!1),this.attributions_=e.attributions;const t=e.className!==void 0?e.className:"ol-attribution",n=e.tipLabel!==void 0?e.tipLabel:"Attributions",i=e.expandClassName!==void 0?e.expandClassName:t+"-expand",l=e.collapseLabel!==void 0?e.collapseLabel:"›",o=e.collapseClassName!==void 0?e.collapseClassName:t+"-collapse";typeof l=="string"?(this.collapseLabel_=document.createElement("span"),this.collapseLabel_.textContent=l,this.collapseLabel_.className=o):this.collapseLabel_=l;const r=e.label!==void 0?e.label:"i";typeof r=="string"?(this.label_=document.createElement("span"),this.label_.textContent=r,this.label_.className=i):this.label_=r;const s=this.collapsible_&&!this.collapsed_?this.collapseLabel_:this.label_;this.toggleButton_=document.createElement("button"),this.toggleButton_.setAttribute("type","button"),this.toggleButton_.setAttribute("aria-expanded",String(!this.collapsed_)),this.toggleButton_.title=n,this.toggleButton_.appendChild(s),this.toggleButton_.addEventListener(z.CLICK,this.handleClick_.bind(this),!1);const h=t+" "+fi+" "+Bl+(this.collapsed_&&this.collapsible_?" "+po:"")+(this.collapsible_?"":" ol-uncollapsible"),c=this.element;c.className=h,c.appendChild(this.toggleButton_),c.appendChild(this.ulElement_),this.renderedAttributions_=[],this.renderedVisible_=!0}collectSourceAttributions_(e){const t=this.getMap().getAllLayers(),n=new Set(t.flatMap(i=>i.getAttributions(e)));if(this.attributions_!==void 0&&(Array.isArray(this.attributions_)?this.attributions_.forEach(i=>n.add(i)):n.add(this.attributions_)),!this.overrideCollapsible_){const i=!t.some(l=>{var o;return((o=l.getSource())==null?void 0:o.getAttributionsCollapsible())===!1});this.setCollapsible(i)}return Array.from(n)}async updateElement_(e){if(!e){this.renderedVisible_&&(this.element.style.display="none",this.renderedVisible_=!1);return}const t=await Promise.all(this.collectSourceAttributions_(e).map(i=>Is(()=>i))),n=t.length>0;if(this.renderedVisible_!=n&&(this.element.style.display=n?"":"none",this.renderedVisible_=n),!qt(t,this.renderedAttributions_)){Or(this.ulElement_);for(let i=0,l=t.length;i<l;++i){const o=document.createElement("li");o.innerHTML=t[i],this.ulElement_.appendChild(o)}this.renderedAttributions_=t}}handleClick_(e){e.preventDefault(),this.handleToggle_(),this.userCollapsed_=this.collapsed_}handleToggle_(){this.element.classList.toggle(po),this.collapsed_?Co(this.collapseLabel_,this.label_):Co(this.label_,this.collapseLabel_),this.collapsed_=!this.collapsed_,this.toggleButton_.setAttribute("aria-expanded",String(!this.collapsed_))}getCollapsible(){return this.collapsible_}setCollapsible(e){this.collapsible_!==e&&(this.collapsible_=e,this.element.classList.toggle("ol-uncollapsible"),this.userCollapsed_&&this.handleToggle_())}setCollapsed(e){this.userCollapsed_=e,!(!this.collapsible_||this.collapsed_===e)&&this.handleToggle_()}getCollapsed(){return this.collapsed_}render(e){this.updateElement_(e.frameState)}}class yu extends Ai{constructor(e){e=e||{},super({element:document.createElement("div"),render:e.render,target:e.target});const t=e.className!==void 0?e.className:"ol-rotate",n=e.label!==void 0?e.label:"⇧",i=e.compassClassName!==void 0?e.compassClassName:"ol-compass";this.label_=null,typeof n=="string"?(this.label_=document.createElement("span"),this.label_.className=i,this.label_.textContent=n):(this.label_=n,this.label_.classList.add(i));const l=e.tipLabel?e.tipLabel:"Reset rotation",o=document.createElement("button");o.className=t+"-reset",o.setAttribute("type","button"),o.title=l,o.appendChild(this.label_),o.addEventListener(z.CLICK,this.handleClick_.bind(this),!1);const r=t+" "+fi+" "+Bl,s=this.element;s.className=r,s.appendChild(o),this.callResetNorth_=e.resetNorth?e.resetNorth:void 0,this.duration_=e.duration!==void 0?e.duration:250,this.autoHide_=e.autoHide!==void 0?e.autoHide:!0,this.rotation_=void 0,this.autoHide_&&this.element.classList.add(Oa)}handleClick_(e){e.preventDefault(),this.callResetNorth_!==void 0?this.callResetNorth_():this.resetNorth_()}resetNorth_(){const t=this.getMap().getView();if(!t)return;const n=t.getRotation();n!==void 0&&(this.duration_>0&&n%(2*Math.PI)!==0?t.animate({rotation:0,duration:this.duration_,easing:Xn}):t.setRotation(0))}render(e){const t=e.frameState;if(!t)return;const n=t.viewState.rotation;if(n!=this.rotation_){const i="rotate("+n+"rad)";if(this.autoHide_){const l=this.element.classList.contains(Oa);!l&&n===0?this.element.classList.add(Oa):l&&n!==0&&this.element.classList.remove(Oa)}this.label_.style.transform=i}this.rotation_=n}}class Su extends Ai{constructor(e){e=e||{},super({element:document.createElement("div"),target:e.target});const t=e.className!==void 0?e.className:"ol-zoom",n=e.delta!==void 0?e.delta:1,i=e.zoomInClassName!==void 0?e.zoomInClassName:t+"-in",l=e.zoomOutClassName!==void 0?e.zoomOutClassName:t+"-out",o=e.zoomInLabel!==void 0?e.zoomInLabel:"+",r=e.zoomOutLabel!==void 0?e.zoomOutLabel:"–",s=e.zoomInTipLabel!==void 0?e.zoomInTipLabel:"Zoom in",h=e.zoomOutTipLabel!==void 0?e.zoomOutTipLabel:"Zoom out",c=document.createElement("button");c.className=i,c.setAttribute("type","button"),c.title=s,c.appendChild(typeof o=="string"?document.createTextNode(o):o),c.addEventListener(z.CLICK,this.handleClick_.bind(this,n),!1);const u=document.createElement("button");u.className=l,u.setAttribute("type","button"),u.title=h,u.appendChild(typeof r=="string"?document.createTextNode(r):r),u.addEventListener(z.CLICK,this.handleClick_.bind(this,-n),!1);const d=t+" "+fi+" "+Bl,m=this.element;m.className=d,m.appendChild(c),m.appendChild(u),this.duration_=e.duration!==void 0?e.duration:250}handleClick_(e,t){t.preventDefault(),this.zoomByDelta_(e)}zoomByDelta_(e){const n=this.getMap().getView();if(!n)return;const i=n.getZoom();if(i!==void 0){const l=n.getConstrainedZoom(i+e);this.duration_>0?(n.getAnimating()&&n.cancelAnimations(),n.animate({zoom:l,duration:this.duration_,easing:Xn})):n.setZoom(l)}}}function ds(a){a=a||{};const e=new yt;return(a.zoom!==void 0?a.zoom:!0)&&e.push(new Su(a.zoomOptions)),(a.rotate!==void 0?a.rotate:!0)&&e.push(new yu(a.rotateOptions)),(a.attribution!==void 0?a.attribution:!0)&&e.push(new mu(a.attributionOptions)),e}const Qo={ACTIVE:"active"};class Ta extends st{constructor(e){super(),this.on,this.once,this.un,e&&e.handleEvent&&(this.handleEvent=e.handleEvent),this.map_=null,this.setActive(!0)}getActive(){return this.get(Qo.ACTIVE)}getMap(){return this.map_}handleEvent(e){return!0}setActive(e){this.set(Qo.ACTIVE,e)}setMap(e){this.map_=e}}function ku(a,e,t){const n=a.getCenterInternal();if(n){const i=[n[0]+e[0],n[1]+e[1]];a.animateInternal({duration:t!==void 0?t:250,easing:qc,center:a.getConstrainedCenter(i)})}}function Jl(a,e,t,n){const i=a.getZoom();if(i===void 0)return;const l=a.getConstrainedZoom(i+e),o=a.getResolutionForZoom(l);a.getAnimating()&&a.cancelAnimations(),a.animate({resolution:o,anchor:t,duration:n!==void 0?n:250,easing:Xn})}class fu extends Ta{constructor(e){super(),e=e||{},this.delta_=e.delta?e.delta:1,this.duration_=e.duration!==void 0?e.duration:250}handleEvent(e){let t=!1;if(e.type==ke.DBLCLICK){const n=e.originalEvent,i=e.map,l=e.coordinate,o=n.shiftKey?-this.delta_:this.delta_,r=i.getView();Jl(r,o,l,this.duration_),n.preventDefault(),t=!0}return!t}}function ul(a){const e=arguments;return function(t){let n=!0;for(let i=0,l=e.length;i<l&&(n=n&&e[i](t),!!n);++i);return n}}const gu=function(a){const e=a.originalEvent;return e.altKey&&!(e.metaKey||e.ctrlKey)&&e.shiftKey},Cu=function(a){const e=a.map.getTargetElement(),t=e.getRootNode(),n=a.map.getOwnerDocument().activeElement;return t instanceof ShadowRoot?t.host.contains(n):e.contains(n)},ms=function(a){const e=a.map.getTargetElement(),t=e.getRootNode();return(t instanceof ShadowRoot?t.host:e).hasAttribute("tabindex")?Cu(a):!0},Uu=ha,ys=function(a){const e=a.originalEvent;return e instanceof PointerEvent&&e.button==0&&!(X1&&Br&&e.ctrlKey)},Ss=function(a){const e=a.originalEvent;return!e.altKey&&!(e.metaKey||e.ctrlKey)&&!e.shiftKey},pu=function(a){const e=a.originalEvent;return Br?e.metaKey:e.ctrlKey},_u=function(a){const e=a.originalEvent;return!e.altKey&&!(e.metaKey||e.ctrlKey)&&e.shiftKey},ks=function(a){const e=a.originalEvent,t=e.target.tagName;return t!=="INPUT"&&t!=="SELECT"&&t!=="TEXTAREA"&&!e.target.isContentEditable},Yi=function(a){const e=a.originalEvent;return e instanceof PointerEvent&&e.pointerType=="mouse"},Mu=function(a){const e=a.originalEvent;return e instanceof PointerEvent&&e.isPrimary&&e.button===0};class wa extends Ta{constructor(e){e=e||{},super(e),e.handleDownEvent&&(this.handleDownEvent=e.handleDownEvent),e.handleDragEvent&&(this.handleDragEvent=e.handleDragEvent),e.handleMoveEvent&&(this.handleMoveEvent=e.handleMoveEvent),e.handleUpEvent&&(this.handleUpEvent=e.handleUpEvent),e.stopDown&&(this.stopDown=e.stopDown),this.handlingDownUpSequence=!1,this.targetPointers=[]}getPointerCount(){return this.targetPointers.length}handleDownEvent(e){return!1}handleDragEvent(e){}handleEvent(e){if(!e.originalEvent)return!0;let t=!1;if(this.updateTrackedPointers_(e),this.handlingDownUpSequence){if(e.type==ke.POINTERDRAG)this.handleDragEvent(e),e.originalEvent.preventDefault();else if(e.type==ke.POINTERUP){const n=this.handleUpEvent(e);this.handlingDownUpSequence=n&&this.targetPointers.length>0}}else if(e.type==ke.POINTERDOWN){const n=this.handleDownEvent(e);this.handlingDownUpSequence=n,t=this.stopDown(n)}else e.type==ke.POINTERMOVE&&this.handleMoveEvent(e);return!t}handleMoveEvent(e){}handleUpEvent(e){return!1}stopDown(e){return e}updateTrackedPointers_(e){e.activePointers&&(this.targetPointers=e.activePointers)}}function Fl(a){const e=a.length;let t=0,n=0;for(let i=0;i<e;i++)t+=a[i].clientX,n+=a[i].clientY;return{clientX:t/e,clientY:n/e}}class Lu extends wa{constructor(e){super({stopDown:li}),e=e||{},this.kinetic_=e.kinetic,this.lastCentroid=null,this.lastPointersCount_,this.panning_=!1;const t=e.condition?e.condition:ul(Ss,Mu);this.condition_=e.onFocusOnly?ul(ms,t):t,this.noKinetic_=!1}handleDragEvent(e){const t=e.map;this.panning_||(this.panning_=!0,t.getView().beginInteraction());const n=this.targetPointers,i=t.getEventPixel(Fl(n));if(n.length==this.lastPointersCount_){if(this.kinetic_&&this.kinetic_.update(i[0],i[1]),this.lastCentroid){const l=[this.lastCentroid[0]-i[0],i[1]-this.lastCentroid[1]],r=e.map.getView();Ks(l,r.getResolution()),fl(l,r.getRotation()),r.adjustCenterInternal(l)}}else this.kinetic_&&this.kinetic_.begin();this.lastCentroid=i,this.lastPointersCount_=n.length,e.originalEvent.preventDefault()}handleUpEvent(e){const t=e.map,n=t.getView();if(this.targetPointers.length===0){if(!this.noKinetic_&&this.kinetic_&&this.kinetic_.end()){const i=this.kinetic_.getDistance(),l=this.kinetic_.getAngle(),o=n.getCenterInternal(),r=t.getPixelFromCoordinateInternal(o),s=t.getCoordinateFromPixelInternal([r[0]-i*Math.cos(l),r[1]-i*Math.sin(l)]);n.animateInternal({center:n.getConstrainedCenter(s),duration:500,easing:Xn})}return this.panning_&&(this.panning_=!1,n.endInteraction()),!1}return this.kinetic_&&this.kinetic_.begin(),this.lastCentroid=null,!0}handleDownEvent(e){if(this.targetPointers.length>0&&this.condition_(e)){const n=e.map.getView();return this.lastCentroid=null,n.getAnimating()&&n.cancelAnimations(),this.kinetic_&&this.kinetic_.begin(),this.noKinetic_=this.targetPointers.length>1,!0}return!1}}class Au extends wa{constructor(e){e=e||{},super({stopDown:li}),this.condition_=e.condition?e.condition:gu,this.lastAngle_=void 0,this.duration_=e.duration!==void 0?e.duration:250}handleDragEvent(e){if(!Yi(e))return;const t=e.map,n=t.getView();if(n.getConstraints().rotation===xl)return;const i=t.getSize(),l=e.pixel,o=Math.atan2(i[1]/2-l[1],l[0]-i[0]/2);if(this.lastAngle_!==void 0){const r=o-this.lastAngle_;n.adjustRotationInternal(-r)}this.lastAngle_=o}handleUpEvent(e){return Yi(e)?(e.map.getView().endInteraction(this.duration_),!1):!0}handleDownEvent(e){return Yi(e)&&ys(e)&&this.condition_(e)?(e.map.getView().beginInteraction(),this.lastAngle_=void 0,!0):!1}}class Wu extends ii{constructor(e){super(),this.geometry_=null,this.element_=document.createElement("div"),this.element_.style.position="absolute",this.element_.style.pointerEvents="auto",this.element_.className="ol-box "+e,this.map_=null,this.startPixel_=null,this.endPixel_=null}disposeInternal(){this.setMap(null)}render_(){const e=this.startPixel_,t=this.endPixel_,n="px",i=this.element_.style;i.left=Math.min(e[0],t[0])+n,i.top=Math.min(e[1],t[1])+n,i.width=Math.abs(t[0]-e[0])+n,i.height=Math.abs(t[1]-e[1])+n}setMap(e){if(this.map_){this.map_.getOverlayContainer().removeChild(this.element_);const t=this.element_.style;t.left="inherit",t.top="inherit",t.width="inherit",t.height="inherit"}this.map_=e,this.map_&&this.map_.getOverlayContainer().appendChild(this.element_)}setPixels(e,t){this.startPixel_=e,this.endPixel_=t,this.createOrUpdateGeometry(),this.render_()}createOrUpdateGeometry(){if(!this.map_)return;const e=this.startPixel_,t=this.endPixel_,i=[e,[e[0],t[1]],t,[t[0],e[1]]].map(this.map_.getCoordinateFromPixelInternal,this.map_);i[4]=i[0].slice(),this.geometry_?this.geometry_.setCoordinates([i]):this.geometry_=new Sa([i])}getGeometry(){return this.geometry_}}const Mn={BOXSTART:"boxstart",BOXDRAG:"boxdrag",BOXEND:"boxend",BOXCANCEL:"boxcancel"};class $n extends Pt{constructor(e,t,n){super(e),this.coordinate=t,this.mapBrowserEvent=n}}class Tu extends wa{constructor(e){super(),this.on,this.once,this.un,e=e??{},this.box_=new Wu(e.className||"ol-dragbox"),this.minArea_=e.minArea??64,e.onBoxEnd&&(this.onBoxEnd=e.onBoxEnd),this.startPixel_=null,this.condition_=e.condition??ys,this.boxEndCondition_=e.boxEndCondition??this.defaultBoxEndCondition}defaultBoxEndCondition(e,t,n){const i=n[0]-t[0],l=n[1]-t[1];return i*i+l*l>=this.minArea_}getGeometry(){return this.box_.getGeometry()}handleDragEvent(e){this.startPixel_&&(this.box_.setPixels(this.startPixel_,e.pixel),this.dispatchEvent(new $n(Mn.BOXDRAG,e.coordinate,e)))}handleUpEvent(e){if(!this.startPixel_)return!1;const t=this.boxEndCondition_(e,this.startPixel_,e.pixel);return t&&this.onBoxEnd(e),this.dispatchEvent(new $n(t?Mn.BOXEND:Mn.BOXCANCEL,e.coordinate,e)),this.box_.setMap(null),this.startPixel_=null,!1}handleDownEvent(e){return this.condition_(e)?(this.startPixel_=e.pixel,this.box_.setMap(e.map),this.box_.setPixels(this.startPixel_,this.startPixel_),this.dispatchEvent(new $n(Mn.BOXSTART,e.coordinate,e)),!0):!1}onBoxEnd(e){}setActive(e){e||(this.box_.setMap(null),this.startPixel_&&(this.dispatchEvent(new $n(Mn.BOXCANCEL,this.startPixel_,null)),this.startPixel_=null)),super.setActive(e)}setMap(e){this.getMap()&&(this.box_.setMap(null),this.startPixel_&&(this.dispatchEvent(new $n(Mn.BOXCANCEL,this.startPixel_,null)),this.startPixel_=null)),super.setMap(e)}}class wu extends Tu{constructor(e){e=e||{};const t=e.condition?e.condition:_u;super({condition:t,className:e.className||"ol-dragzoom",minArea:e.minArea}),this.duration_=e.duration!==void 0?e.duration:200,this.out_=e.out!==void 0?e.out:!1}onBoxEnd(e){const n=this.getMap().getView();let i=this.getGeometry();if(this.out_){const l=n.rotatedExtentForGeometry(i),o=n.getResolutionForExtentInternal(l),r=n.getResolution()/o;i=i.clone(),i.scale(r*r)}n.fitInternal(i,{duration:this.duration_,easing:Xn})}}const nn={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",DOWN:"ArrowDown"};class Eu extends Ta{constructor(e){super(),e=e||{},this.defaultCondition_=function(t){return Ss(t)&&ks(t)},this.condition_=e.condition!==void 0?e.condition:this.defaultCondition_,this.duration_=e.duration!==void 0?e.duration:100,this.pixelDelta_=e.pixelDelta!==void 0?e.pixelDelta:128}handleEvent(e){let t=!1;if(e.type==z.KEYDOWN){const n=e.originalEvent,i=n.key;if(this.condition_(e)&&(i==nn.DOWN||i==nn.LEFT||i==nn.RIGHT||i==nn.UP)){const o=e.map.getView(),r=o.getResolution()*this.pixelDelta_;let s=0,h=0;i==nn.DOWN?h=-r:i==nn.LEFT?s=-r:i==nn.RIGHT?s=r:h=r;const c=[s,h];fl(c,o.getRotation()),ku(o,c,this.duration_),n.preventDefault(),t=!0}}return!t}}class Ru extends Ta{constructor(e){super(),e=e||{},this.condition_=e.condition?e.condition:function(t){return!pu(t)&&ks(t)},this.delta_=e.delta?e.delta:1,this.duration_=e.duration!==void 0?e.duration:100}handleEvent(e){let t=!1;if(e.type==z.KEYDOWN||e.type==z.KEYPRESS){const n=e.originalEvent,i=n.key;if(this.condition_(e)&&(i==="+"||i==="-")){const l=e.map,o=i==="+"?this.delta_:-this.delta_,r=l.getView();Jl(r,o,void 0,this.duration_),n.preventDefault(),t=!0}}return!t}}class Iu extends Ta{constructor(e){e=e||{},super(e),this.totalDelta_=0,this.lastDelta_=0,this.maxDelta_=e.maxDelta!==void 0?e.maxDelta:1,this.duration_=e.duration!==void 0?e.duration:250,this.timeout_=e.timeout!==void 0?e.timeout:80,this.useAnchor_=e.useAnchor!==void 0?e.useAnchor:!0,this.constrainResolution_=e.constrainResolution!==void 0?e.constrainResolution:!1;const t=e.condition?e.condition:Uu;this.condition_=e.onFocusOnly?ul(ms,t):t,this.lastAnchor_=null,this.startTime_=void 0,this.timeoutId_,this.mode_=void 0,this.trackpadEventGap_=400,this.trackpadTimeoutId_,this.deltaPerZoom_=300}endInteraction_(){this.trackpadTimeoutId_=void 0;const e=this.getMap();if(!e)return;e.getView().endInteraction(void 0,this.lastDelta_?this.lastDelta_>0?1:-1:0,this.lastAnchor_?e.getCoordinateFromPixel(this.lastAnchor_):null)}handleEvent(e){if(!this.condition_(e)||e.type!==z.WHEEL)return!0;const n=e.map,i=e.originalEvent;i.preventDefault(),this.useAnchor_&&(this.lastAnchor_=e.pixel);let l;if(e.type==z.WHEEL&&(l=i.deltaY,i.deltaMode===WheelEvent.DOM_DELTA_LINE&&(l*=40)),l===0)return!1;this.lastDelta_=l;const o=Date.now();this.startTime_===void 0&&(this.startTime_=o),(!this.mode_||o-this.startTime_>this.trackpadEventGap_)&&(this.mode_=Math.abs(l)<4?"trackpad":"wheel");const r=n.getView();if(this.mode_==="trackpad"&&!(r.getConstrainResolution()||this.constrainResolution_))return this.trackpadTimeoutId_?clearTimeout(this.trackpadTimeoutId_):(r.getAnimating()&&r.cancelAnimations(),r.beginInteraction()),this.trackpadTimeoutId_=setTimeout(this.endInteraction_.bind(this),this.timeout_),r.adjustZoom(-l/this.deltaPerZoom_,this.lastAnchor_?n.getCoordinateFromPixel(this.lastAnchor_):null),this.startTime_=o,!1;this.totalDelta_+=l;const s=Math.max(this.timeout_-(o-this.startTime_),0);return clearTimeout(this.timeoutId_),this.timeoutId_=setTimeout(this.handleWheelZoom_.bind(this,n),s),!1}handleWheelZoom_(e){const t=e.getView();t.getAnimating()&&t.cancelAnimations();let n=-ye(this.totalDelta_,-this.maxDelta_*this.deltaPerZoom_,this.maxDelta_*this.deltaPerZoom_)/this.deltaPerZoom_;(t.getConstrainResolution()||this.constrainResolution_)&&(n=n?n>0?1:-1:0),Jl(t,n,this.lastAnchor_?e.getCoordinateFromPixel(this.lastAnchor_):null,this.duration_),this.mode_=void 0,this.totalDelta_=0,this.lastAnchor_=null,this.startTime_=void 0,this.timeoutId_=void 0}setMouseAnchor(e){this.useAnchor_=e,e||(this.lastAnchor_=null)}}class Gu extends wa{constructor(e){e=e||{};const t=e;t.stopDown||(t.stopDown=li),super(t),this.anchor_=null,this.lastAngle_=void 0,this.rotating_=!1,this.rotationDelta_=0,this.threshold_=e.threshold!==void 0?e.threshold:.3,this.duration_=e.duration!==void 0?e.duration:250}handleDragEvent(e){let t=0;const n=this.targetPointers[0],i=this.targetPointers[1],l=Math.atan2(i.clientY-n.clientY,i.clientX-n.clientX);if(this.lastAngle_!==void 0){const s=l-this.lastAngle_;this.rotationDelta_+=s,!this.rotating_&&Math.abs(this.rotationDelta_)>this.threshold_&&(this.rotating_=!0),t=s}this.lastAngle_=l;const o=e.map,r=o.getView();r.getConstraints().rotation!==xl&&(this.anchor_=o.getCoordinateFromPixelInternal(o.getEventPixel(Fl(this.targetPointers))),this.rotating_&&(o.render(),r.adjustRotationInternal(t,this.anchor_)))}handleUpEvent(e){return this.targetPointers.length<2?(e.map.getView().endInteraction(this.duration_),!1):!0}handleDownEvent(e){if(this.targetPointers.length>=2){const t=e.map;return this.anchor_=null,this.lastAngle_=void 0,this.rotating_=!1,this.rotationDelta_=0,this.handlingDownUpSequence||t.getView().beginInteraction(),!0}return!1}}class Bu extends wa{constructor(e){e=e||{};const t=e;t.stopDown||(t.stopDown=li),super(t),this.anchor_=null,this.duration_=e.duration!==void 0?e.duration:400,this.lastDistance_=void 0,this.lastScaleDelta_=1}handleDragEvent(e){let t=1;const n=this.targetPointers[0],i=this.targetPointers[1],l=n.clientX-i.clientX,o=n.clientY-i.clientY,r=Math.sqrt(l*l+o*o);this.lastDistance_!==void 0&&(t=this.lastDistance_/r),this.lastDistance_=r;const s=e.map,h=s.getView();t!=1&&(this.lastScaleDelta_=t),this.anchor_=s.getCoordinateFromPixelInternal(s.getEventPixel(Fl(this.targetPointers))),s.render(),h.adjustResolutionInternal(t,this.anchor_)}handleUpEvent(e){if(this.targetPointers.length<2){const n=e.map.getView(),i=this.lastScaleDelta_>1?1:-1;return n.endInteraction(this.duration_,i),!1}return!0}handleDownEvent(e){if(this.targetPointers.length>=2){const t=e.map;return this.anchor_=null,this.lastDistance_=void 0,this.lastScaleDelta_=1,this.handlingDownUpSequence||t.getView().beginInteraction(),!0}return!1}}function bu(a){a=a||{};const e=new yt,t=new su(-.005,.05,100);return(a.altShiftDragRotate!==void 0?a.altShiftDragRotate:!0)&&e.push(new Au),(a.doubleClickZoom!==void 0?a.doubleClickZoom:!0)&&e.push(new fu({delta:a.zoomDelta,duration:a.zoomDuration})),(a.dragPan!==void 0?a.dragPan:!0)&&e.push(new Lu({onFocusOnly:a.onFocusOnly,kinetic:t})),(a.pinchRotate!==void 0?a.pinchRotate:!0)&&e.push(new Gu),(a.pinchZoom!==void 0?a.pinchZoom:!0)&&e.push(new Bu({duration:a.zoomDuration})),(a.keyboard!==void 0?a.keyboard:!0)&&(e.push(new Eu),e.push(new Ru({delta:a.zoomDelta,duration:a.zoomDuration}))),(a.mouseWheelZoom!==void 0?a.mouseWheelZoom:!0)&&e.push(new Iu({onFocusOnly:a.onFocusOnly,duration:a.zoomDuration})),(a.shiftDragZoom!==void 0?a.shiftDragZoom:!0)&&e.push(new wu({duration:a.zoomDuration})),e}class Kt extends Pt{constructor(e,t){super(e),this.layer=t}}const Vi={LAYERS:"layers"};class zn extends hs{constructor(e){e=e||{};const t=Object.assign({},e);delete t.layers;let n=e.layers;super(t),this.on,this.once,this.un,this.layersListenerKeys_=[],this.listenerKeys_={},this.addChangeListener(Vi.LAYERS,this.handleLayersChanged_),n?Array.isArray(n)?n=new yt(n.slice(),{unique:!0}):oe(typeof n.getArray=="function","Expected `layers` to be an array or a `Collection`"):n=new yt(void 0,{unique:!0}),this.setLayers(n)}handleLayerChange_(){this.changed()}handleLayersChanged_(){this.layersListenerKeys_.forEach(de),this.layersListenerKeys_.length=0;const e=this.getLayers();this.layersListenerKeys_.push($(e,De.ADD,this.handleLayersAdd_,this),$(e,De.REMOVE,this.handleLayersRemove_,this));for(const n in this.listenerKeys_)this.listenerKeys_[n].forEach(de);_a(this.listenerKeys_);const t=e.getArray();for(let n=0,i=t.length;n<i;n++){const l=t[n];this.registerLayerListeners_(l),this.dispatchEvent(new Kt("addlayer",l))}this.changed()}registerLayerListeners_(e){const t=[$(e,xn.PROPERTYCHANGE,this.handleLayerChange_,this),$(e,z.CHANGE,this.handleLayerChange_,this)];e instanceof zn&&t.push($(e,"addlayer",this.handleLayerGroupAdd_,this),$(e,"removelayer",this.handleLayerGroupRemove_,this)),this.listenerKeys_[ae(e)]=t}handleLayerGroupAdd_(e){this.dispatchEvent(new Kt("addlayer",e.layer))}handleLayerGroupRemove_(e){this.dispatchEvent(new Kt("removelayer",e.layer))}handleLayersAdd_(e){const t=e.element;this.registerLayerListeners_(t),this.dispatchEvent(new Kt("addlayer",t)),this.changed()}handleLayersRemove_(e){const t=e.element,n=ae(t);this.listenerKeys_[n].forEach(de),delete this.listenerKeys_[n],this.dispatchEvent(new Kt("removelayer",t)),this.changed()}getLayers(){return this.get(Vi.LAYERS)}setLayers(e){const t=this.getLayers();if(t){const n=t.getArray();for(let i=0,l=n.length;i<l;++i)this.dispatchEvent(new Kt("removelayer",n[i]))}this.set(Vi.LAYERS,e)}getLayersArray(e){return e=e!==void 0?e:[],this.getLayers().forEach(function(t){t.getLayersArray(e)}),e}getLayerStatesArray(e){const t=e!==void 0?e:[],n=t.length;this.getLayers().forEach(function(o){o.getLayerStatesArray(t)});const i=this.getLayerState();let l=i.zIndex;!e&&i.zIndex===void 0&&(l=0);for(let o=n,r=t.length;o<r;o++){const s=t[o];s.opacity*=i.opacity,s.visible=s.visible&&i.visible,s.maxResolution=Math.min(s.maxResolution,i.maxResolution),s.minResolution=Math.max(s.minResolution,i.minResolution),s.minZoom=Math.max(s.minZoom,i.minZoom),s.maxZoom=Math.min(s.maxZoom,i.maxZoom),i.extent!==void 0&&(s.extent!==void 0?s.extent=hn(s.extent,i.extent):s.extent=i.extent),s.zIndex===void 0&&(s.zIndex=l)}return t}getSourceState(){return"ready"}}class Pu extends ii{constructor(e){super(),this.map_=e}dispatchRenderEvent(e,t){te()}calculateMatrices2D(e){const t=e.viewState,n=e.coordinateToPixelTransform,i=e.pixelToCoordinateTransform;bt(n,e.size[0]/2,e.size[1]/2,1/t.resolution,-1/t.resolution,-t.rotation,-t.center[0],-t.center[1]),Mr(i,n)}forEachFeatureAtCoordinate(e,t,n,i,l,o,r,s){let h;const c=t.viewState;function u(C,U,L,w){return l.call(o,U,C?L:null,w)}const d=c.projection,m=Sr(e.slice(),d),y=[[0,0]];if(d.canWrapX()&&i){const C=d.getExtent(),U=se(C);y.push([-U,0],[U,0])}const k=t.layerStatesArray,S=k.length,g=[],f=[];for(let C=0;C<y.length;C++)for(let U=S-1;U>=0;--U){const L=k[U],w=L.layer;if(w.hasRenderer()&&Nl(L,c)&&r.call(s,w)){const M=w.getRenderer(),E=w.getSource();if(M&&E){const G=E.getWrapX()?m:e,P=u.bind(null,L.managed);f[0]=G[0]+y[C][0],f[1]=G[1]+y[C][1],h=M.forEachFeatureAtCoordinate(f,t,n,P,g)}if(h)return h}}if(g.length===0)return;const p=1/g.length;return g.forEach((C,U)=>C.distanceSq+=U*p),g.sort((C,U)=>C.distanceSq-U.distanceSq),g.some(C=>h=C.callback(C.feature,C.layer,C.geometry)),h}hasFeatureAtCoordinate(e,t,n,i,l,o){return this.forEachFeatureAtCoordinate(e,t,n,i,ha,this,l,o)!==void 0}getMap(){return this.map_}renderFrame(e){te()}scheduleExpireIconCache(e){et.canExpireCache()&&e.postRenderFunctions.push(Du)}}function Du(a,e){et.expire()}class Ou extends Pu{constructor(e){super(e),this.fontChangeListenerKey_=$(wt,xn.PROPERTYCHANGE,e.redrawText,e),this.element_=document.createElement("div");const t=this.element_.style;t.position="absolute",t.width="100%",t.height="100%",t.zIndex="0",this.element_.className=fi+" ol-layers";const n=e.getViewport();n.insertBefore(this.element_,n.firstChild||null),this.children_=[],this.renderedVisible_=!0}dispatchRenderEvent(e,t){const n=this.getMap();if(n.hasListener(e)){const i=new $r(e,void 0,t);n.dispatchEvent(i)}}disposeInternal(){de(this.fontChangeListenerKey_),this.element_.remove(),super.disposeInternal()}renderFrame(e){if(!e){this.renderedVisible_&&(this.element_.style.display="none",this.renderedVisible_=!1);return}this.calculateMatrices2D(e),this.dispatchRenderEvent($e.PRECOMPOSE,e);const t=e.layerStatesArray.sort((r,s)=>r.zIndex-s.zIndex);t.some(r=>r.layer instanceof cs&&r.layer.getDeclutter())&&(e.declutter={});const i=e.viewState;this.children_.length=0;const l=[];let o=null;for(let r=0,s=t.length;r<s;++r){const h=t[r];e.layerIndex=r;const c=h.layer,u=c.getSourceState();if(!Nl(h,i)||u!="ready"&&u!="undefined"){c.unrender();continue}const d=c.render(e,o);d&&(d!==o&&(this.children_.push(d),o=d),l.push(h))}this.declutter(e,l),j1(this.element_,this.children_),this.dispatchRenderEvent($e.POSTCOMPOSE,e),this.renderedVisible_||(this.element_.style.display="",this.renderedVisible_=!0),this.scheduleExpireIconCache(e)}declutter(e,t){if(e.declutter){for(let n=t.length-1;n>=0;--n){const i=t[n],l=i.layer;l.getDeclutter()&&l.renderDeclutter(e,i)}t.forEach(n=>n.layer.renderDeferred(e))}}}function fs(a){if(a instanceof Li){a.setMapInternal(null);return}a instanceof zn&&a.getLayers().forEach(fs)}function gs(a,e){if(a instanceof Li){a.setMapInternal(e);return}if(a instanceof zn){const t=a.getLayers().getArray();for(let n=0,i=t.length;n<i;++n)gs(t[n],e)}}class xu extends st{constructor(e){super(),e=e||{},this.on,this.once,this.un;const t=vu(e);this.renderComplete_=!1,this.loaded_=!0,this.boundHandleBrowserEvent_=this.handleBrowserEvent.bind(this),this.maxTilesLoading_=e.maxTilesLoading!==void 0?e.maxTilesLoading:16,this.pixelRatio_=e.pixelRatio!==void 0?e.pixelRatio:z1,this.postRenderTimeoutHandle_,this.animationDelayKey_,this.animationDelay_=this.animationDelay_.bind(this),this.coordinateToPixelTransform_=ot(),this.pixelToCoordinateTransform_=ot(),this.frameIndex_=0,this.frameState_=null,this.previousExtent_=null,this.viewPropertyListenerKey_=null,this.viewChangeListenerKey_=null,this.layerGroupPropertyListenerKeys_=null,this.viewport_=document.createElement("div"),this.viewport_.className="ol-viewport"+("ontouchstart"in window?" ol-touch":""),this.viewport_.style.position="relative",this.viewport_.style.overflow="hidden",this.viewport_.style.width="100%",this.viewport_.style.height="100%",this.overlayContainer_=document.createElement("div"),this.overlayContainer_.style.position="absolute",this.overlayContainer_.style.zIndex="0",this.overlayContainer_.style.width="100%",this.overlayContainer_.style.height="100%",this.overlayContainer_.style.pointerEvents="none",this.overlayContainer_.className="ol-overlaycontainer",this.viewport_.appendChild(this.overlayContainer_),this.overlayContainerStopEvent_=document.createElement("div"),this.overlayContainerStopEvent_.style.position="absolute",this.overlayContainerStopEvent_.style.zIndex="0",this.overlayContainerStopEvent_.style.width="100%",this.overlayContainerStopEvent_.style.height="100%",this.overlayContainerStopEvent_.style.pointerEvents="none",this.overlayContainerStopEvent_.className="ol-overlaycontainer-stopevent",this.viewport_.appendChild(this.overlayContainerStopEvent_),this.mapBrowserEventHandler_=null,this.moveTolerance_=e.moveTolerance,this.keyboardEventTarget_=t.keyboardEventTarget,this.targetChangeHandlerKeys_=null,this.targetElement_=null,this.resizeObserver_=new ResizeObserver(()=>this.updateSize()),this.controls=t.controls||ds(),this.interactions=t.interactions||bu({onFocusOnly:!0}),this.overlays_=t.overlays,this.overlayIdIndex_={},this.renderer_=null,this.postRenderFunctions_=[],this.tileQueue_=new uu(this.getTilePriority.bind(this),this.handleTileChange_.bind(this)),this.addChangeListener(we.LAYERGROUP,this.handleLayerGroupChanged_),this.addChangeListener(we.VIEW,this.handleViewChanged_),this.addChangeListener(we.SIZE,this.handleSizeChanged_),this.addChangeListener(we.TARGET,this.handleTargetChanged_),this.setProperties(t.values);const n=this;e.view&&!(e.view instanceof mt)&&e.view.then(function(i){n.setView(new mt(i))}),this.controls.addEventListener(De.ADD,i=>{i.element.setMap(this)}),this.controls.addEventListener(De.REMOVE,i=>{i.element.setMap(null)}),this.interactions.addEventListener(De.ADD,i=>{i.element.setMap(this)}),this.interactions.addEventListener(De.REMOVE,i=>{i.element.setMap(null)}),this.overlays_.addEventListener(De.ADD,i=>{this.addOverlayInternal_(i.element)}),this.overlays_.addEventListener(De.REMOVE,i=>{const l=i.element.getId();l!==void 0&&delete this.overlayIdIndex_[l.toString()],i.element.setMap(null)}),this.controls.forEach(i=>{i.setMap(this)}),this.interactions.forEach(i=>{i.setMap(this)}),this.overlays_.forEach(this.addOverlayInternal_.bind(this))}addControl(e){this.getControls().push(e)}addInteraction(e){this.getInteractions().push(e)}addLayer(e){this.getLayerGroup().getLayers().push(e)}handleLayerAdd_(e){gs(e.layer,this)}addOverlay(e){this.getOverlays().push(e)}addOverlayInternal_(e){const t=e.getId();t!==void 0&&(this.overlayIdIndex_[t.toString()]=e),e.setMap(this)}disposeInternal(){this.controls.clear(),this.interactions.clear(),this.overlays_.clear(),this.resizeObserver_.disconnect(),this.setTarget(null),super.disposeInternal()}forEachFeatureAtPixel(e,t,n){if(!this.frameState_||!this.renderer_)return;const i=this.getCoordinateFromPixelInternal(e);n=n!==void 0?n:{};const l=n.hitTolerance!==void 0?n.hitTolerance:0,o=n.layerFilter!==void 0?n.layerFilter:ha,r=n.checkWrapped!==!1;return this.renderer_.forEachFeatureAtCoordinate(i,this.frameState_,l,r,t,null,o,null)}getFeaturesAtPixel(e,t){const n=[];return this.forEachFeatureAtPixel(e,function(i){n.push(i)},t),n}getAllLayers(){const e=[];function t(n){n.forEach(function(i){i instanceof zn?t(i.getLayers()):e.push(i)})}return t(this.getLayers()),e}hasFeatureAtPixel(e,t){if(!this.frameState_||!this.renderer_)return!1;const n=this.getCoordinateFromPixelInternal(e);t=t!==void 0?t:{};const i=t.layerFilter!==void 0?t.layerFilter:ha,l=t.hitTolerance!==void 0?t.hitTolerance:0,o=t.checkWrapped!==!1;return this.renderer_.hasFeatureAtCoordinate(n,this.frameState_,l,o,i,null)}getEventCoordinate(e){return this.getCoordinateFromPixel(this.getEventPixel(e))}getEventCoordinateInternal(e){return this.getCoordinateFromPixelInternal(this.getEventPixel(e))}getEventPixel(e){const n=this.viewport_.getBoundingClientRect(),i=this.getSize(),l=n.width/i[0],o=n.height/i[1],r="changedTouches"in e?e.changedTouches[0]:e;return[(r.clientX-n.left)/l,(r.clientY-n.top)/o]}getTarget(){return this.get(we.TARGET)}getTargetElement(){return this.targetElement_}getCoordinateFromPixel(e){return ll(this.getCoordinateFromPixelInternal(e),this.getView().getProjection())}getCoordinateFromPixelInternal(e){const t=this.frameState_;return t?Le(t.pixelToCoordinateTransform,e.slice()):null}getControls(){return this.controls}getOverlays(){return this.overlays_}getOverlayById(e){const t=this.overlayIdIndex_[e.toString()];return t!==void 0?t:null}getInteractions(){return this.interactions}getLayerGroup(){return this.get(we.LAYERGROUP)}setLayers(e){const t=this.getLayerGroup();if(e instanceof yt){t.setLayers(e);return}const n=t.getLayers();n.clear(),n.extend(e)}getLayers(){return this.getLayerGroup().getLayers()}getLoadingOrNotReady(){const e=this.getLayerGroup().getLayerStatesArray();for(let t=0,n=e.length;t<n;++t){const i=e[t];if(!i.visible)continue;const l=i.layer.getRenderer();if(l&&!l.ready)return!0;const o=i.layer.getSource();if(o&&o.loading)return!0}return!1}getPixelFromCoordinate(e){const t=Tt(e,this.getView().getProjection());return this.getPixelFromCoordinateInternal(t)}getPixelFromCoordinateInternal(e){const t=this.frameState_;return t?Le(t.coordinateToPixelTransform,e.slice(0,2)):null}getRenderer(){return this.renderer_}getSize(){return this.get(we.SIZE)}getView(){return this.get(we.VIEW)}getViewport(){return this.viewport_}getOverlayContainer(){return this.overlayContainer_}getOverlayContainerStopEvent(){return this.overlayContainerStopEvent_}getOwnerDocument(){const e=this.getTargetElement();return e?e.ownerDocument:document}getTilePriority(e,t,n,i){return du(this.frameState_,e,t,n,i)}handleBrowserEvent(e,t){t=t||e.type;const n=new Ft(t,this,e);this.handleMapBrowserEvent(n)}handleMapBrowserEvent(e){if(!this.frameState_)return;const t=e.originalEvent,n=t.type;if(n===cl.POINTERDOWN||n===z.WHEEL||n===z.KEYDOWN){const i=this.getOwnerDocument(),l=this.viewport_.getRootNode?this.viewport_.getRootNode():i,o=t.target,r=l instanceof ShadowRoot?l.host===o?l.host.ownerDocument:l:l===i?i.documentElement:l;if(this.overlayContainerStopEvent_.contains(o)||!r.contains(o))return}if(e.frameState=this.frameState_,this.dispatchEvent(e)!==!1){const i=this.getInteractions().getArray().slice();for(let l=i.length-1;l>=0;l--){const o=i[l];if(o.getMap()!==this||!o.getActive()||!this.getTargetElement())continue;if(!o.handleEvent(e)||e.propagationStopped)break}}}handlePostRender(){const e=this.frameState_,t=this.tileQueue_;if(!t.isEmpty()){let i=this.maxTilesLoading_,l=i;if(e){const o=e.viewHints;if(o[Ee.ANIMATING]||o[Ee.INTERACTING]){const r=Date.now()-e.time>8;i=r?0:8,l=r?0:2}}t.getTilesLoading()<i&&(t.reprioritize(),t.loadMoreTiles(i,l))}e&&this.renderer_&&!e.animate&&(this.renderComplete_?(this.hasListener($e.RENDERCOMPLETE)&&this.renderer_.dispatchRenderEvent($e.RENDERCOMPLETE,e),this.loaded_===!1&&(this.loaded_=!0,this.dispatchEvent(new En(Et.LOADEND,this,e)))):this.loaded_===!0&&(this.loaded_=!1,this.dispatchEvent(new En(Et.LOADSTART,this,e))));const n=this.postRenderFunctions_;if(e)for(let i=0,l=n.length;i<l;++i)n[i](this,e);n.length=0}handleSizeChanged_(){this.getView()&&!this.getView().getAnimating()&&this.getView().resolveConstraints(0),this.render()}handleTargetChanged_(){if(this.mapBrowserEventHandler_){for(let n=0,i=this.targetChangeHandlerKeys_.length;n<i;++n)de(this.targetChangeHandlerKeys_[n]);this.targetChangeHandlerKeys_=null,this.viewport_.removeEventListener(z.CONTEXTMENU,this.boundHandleBrowserEvent_),this.viewport_.removeEventListener(z.WHEEL,this.boundHandleBrowserEvent_),this.mapBrowserEventHandler_.dispose(),this.mapBrowserEventHandler_=null,this.viewport_.remove()}if(this.targetElement_){this.resizeObserver_.unobserve(this.targetElement_);const n=this.targetElement_.getRootNode();n instanceof ShadowRoot&&this.resizeObserver_.unobserve(n.host),this.setSize(void 0)}const e=this.getTarget(),t=typeof e=="string"?document.getElementById(e):e;if(this.targetElement_=t,!t)this.renderer_&&(clearTimeout(this.postRenderTimeoutHandle_),this.postRenderTimeoutHandle_=void 0,this.postRenderFunctions_.length=0,this.renderer_.dispose(),this.renderer_=null),this.animationDelayKey_&&(cancelAnimationFrame(this.animationDelayKey_),this.animationDelayKey_=void 0);else{t.appendChild(this.viewport_),this.renderer_||(this.renderer_=new Ou(this)),this.mapBrowserEventHandler_=new hu(this,this.moveTolerance_);for(const l in ke)this.mapBrowserEventHandler_.addEventListener(ke[l],this.handleMapBrowserEvent.bind(this));this.viewport_.addEventListener(z.CONTEXTMENU,this.boundHandleBrowserEvent_,!1),this.viewport_.addEventListener(z.WHEEL,this.boundHandleBrowserEvent_,Dr?{passive:!1}:!1);let n;if(this.keyboardEventTarget_)n=this.keyboardEventTarget_;else{const l=t.getRootNode();n=l instanceof ShadowRoot?l.host:t}this.targetChangeHandlerKeys_=[$(n,z.KEYDOWN,this.handleBrowserEvent,this),$(n,z.KEYPRESS,this.handleBrowserEvent,this)];const i=t.getRootNode();i instanceof ShadowRoot&&this.resizeObserver_.observe(i.host),this.resizeObserver_.observe(t)}this.updateSize()}handleTileChange_(){this.render()}handleViewPropertyChanged_(){this.render()}handleViewChanged_(){this.viewPropertyListenerKey_&&(de(this.viewPropertyListenerKey_),this.viewPropertyListenerKey_=null),this.viewChangeListenerKey_&&(de(this.viewChangeListenerKey_),this.viewChangeListenerKey_=null);const e=this.getView();e&&(this.updateViewportSize_(this.getSize()),this.viewPropertyListenerKey_=$(e,xn.PROPERTYCHANGE,this.handleViewPropertyChanged_,this),this.viewChangeListenerKey_=$(e,z.CHANGE,this.handleViewPropertyChanged_,this),e.resolveConstraints(0)),this.render()}handleLayerGroupChanged_(){this.layerGroupPropertyListenerKeys_&&(this.layerGroupPropertyListenerKeys_.forEach(de),this.layerGroupPropertyListenerKeys_=null);const e=this.getLayerGroup();e&&(this.handleLayerAdd_(new Kt("addlayer",e)),this.layerGroupPropertyListenerKeys_=[$(e,xn.PROPERTYCHANGE,this.render,this),$(e,z.CHANGE,this.render,this),$(e,"addlayer",this.handleLayerAdd_,this),$(e,"removelayer",this.handleLayerRemove_,this)]),this.render()}isRendered(){return!!this.frameState_}animationDelay_(){this.animationDelayKey_=void 0,this.renderFrame_(Date.now())}renderSync(){this.animationDelayKey_&&cancelAnimationFrame(this.animationDelayKey_),this.animationDelay_()}redrawText(){const e=this.getLayerGroup().getLayerStatesArray();for(let t=0,n=e.length;t<n;++t){const i=e[t].layer;i.hasRenderer()&&i.getRenderer().handleFontsChanged()}}render(){this.renderer_&&this.animationDelayKey_===void 0&&(this.animationDelayKey_=requestAnimationFrame(this.animationDelay_))}removeControl(e){return this.getControls().remove(e)}removeInteraction(e){return this.getInteractions().remove(e)}removeLayer(e){return this.getLayerGroup().getLayers().remove(e)}handleLayerRemove_(e){fs(e.layer)}removeOverlay(e){return this.getOverlays().remove(e)}renderFrame_(e){const t=this.getSize(),n=this.getView(),i=this.frameState_;let l=null;if(t!==void 0&&Go(t)&&n&&n.isDef()){const o=n.getHints(this.frameState_?this.frameState_.viewHints:void 0),r=n.getState();if(l={animate:!1,coordinateToPixelTransform:this.coordinateToPixelTransform_,declutter:null,extent:el(r.center,r.resolution,r.rotation,t),index:this.frameIndex_++,layerIndex:0,layerStatesArray:this.getLayerGroup().getLayerStatesArray(),pixelRatio:this.pixelRatio_,pixelToCoordinateTransform:this.pixelToCoordinateTransform_,postRenderFunctions:[],size:t,tileQueue:this.tileQueue_,time:e,usedTiles:{},viewState:r,viewHints:o,wantedTiles:{},mapId:ae(this),renderTargets:{}},r.nextCenter&&r.nextResolution){const s=isNaN(r.nextRotation)?r.rotation:r.nextRotation;l.nextExtent=el(r.nextCenter,r.nextResolution,s,t)}}this.frameState_=l,this.renderer_.renderFrame(l),l&&(l.animate&&this.render(),Array.prototype.push.apply(this.postRenderFunctions_,l.postRenderFunctions),i&&(!this.previousExtent_||!ui(this.previousExtent_)&&!ua(l.extent,this.previousExtent_))&&(this.dispatchEvent(new En(Et.MOVESTART,this,i)),this.previousExtent_=ri(this.previousExtent_)),this.previousExtent_&&!l.viewHints[Ee.ANIMATING]&&!l.viewHints[Ee.INTERACTING]&&!ua(l.extent,this.previousExtent_)&&(this.dispatchEvent(new En(Et.MOVEEND,this,l)),lr(l.extent,this.previousExtent_))),this.dispatchEvent(new En(Et.POSTRENDER,this,l)),this.renderComplete_=(this.hasListener(Et.LOADSTART)||this.hasListener(Et.LOADEND)||this.hasListener($e.RENDERCOMPLETE))&&!this.tileQueue_.getTilesLoading()&&!this.tileQueue_.getCount()&&!this.getLoadingOrNotReady(),this.postRenderTimeoutHandle_||(this.postRenderTimeoutHandle_=setTimeout(()=>{this.postRenderTimeoutHandle_=void 0,this.handlePostRender()},0))}setLayerGroup(e){const t=this.getLayerGroup();t&&this.handleLayerRemove_(new Kt("removelayer",t)),this.set(we.LAYERGROUP,e)}setSize(e){this.set(we.SIZE,e)}setTarget(e){this.set(we.TARGET,e)}setView(e){if(!e||e instanceof mt){this.set(we.VIEW,e);return}this.set(we.VIEW,new mt);const t=this;e.then(function(n){t.setView(new mt(n))})}updateSize(){const e=this.getTargetElement();let t;if(e){const i=getComputedStyle(e),l=e.offsetWidth-parseFloat(i.borderLeftWidth)-parseFloat(i.paddingLeft)-parseFloat(i.paddingRight)-parseFloat(i.borderRightWidth),o=e.offsetHeight-parseFloat(i.borderTopWidth)-parseFloat(i.paddingTop)-parseFloat(i.paddingBottom)-parseFloat(i.borderBottomWidth);!isNaN(l)&&!isNaN(o)&&(t=[Math.max(0,l),Math.max(0,o)],!Go(t)&&(e.offsetWidth||e.offsetHeight||e.getClientRects().length)&&yr("No map visible because the map container's width or height are 0."))}const n=this.getSize();t&&(!n||!qt(t,n))&&(this.setSize(t),this.updateViewportSize_(t))}updateViewportSize_(e){const t=this.getView();t&&t.setViewportSize(e)}}function vu(a){let e=null;a.keyboardEventTarget!==void 0&&(e=typeof a.keyboardEventTarget=="string"?document.getElementById(a.keyboardEventTarget):a.keyboardEventTarget);const t={},n=a.layers&&typeof a.layers.getLayers=="function"?a.layers:new zn({layers:a.layers});t[we.LAYERGROUP]=n,t[we.TARGET]=a.target,t[we.VIEW]=a.view instanceof mt?a.view:new mt;let i;a.controls!==void 0&&(Array.isArray(a.controls)?i=new yt(a.controls.slice()):(oe(typeof a.controls.getArray=="function","Expected `controls` to be an array or an `ol/Collection.js`"),i=a.controls));let l;a.interactions!==void 0&&(Array.isArray(a.interactions)?l=new yt(a.interactions.slice()):(oe(typeof a.interactions.getArray=="function","Expected `interactions` to be an array or an `ol/Collection.js`"),l=a.interactions));let o;return a.overlays!==void 0?Array.isArray(a.overlays)?o=new yt(a.overlays.slice()):(oe(typeof a.overlays.getArray=="function","Expected `overlays` to be an array or an `ol/Collection.js`"),o=a.overlays):o=new yt,{controls:i,interactions:l,keyboardEventTarget:e,overlays:o,values:t}}const Te={ELEMENT:"element",MAP:"map",OFFSET:"offset",POSITION:"position",POSITIONING:"positioning"};class Nu extends st{constructor(e){super(),this.on,this.once,this.un,this.options=e,this.id=e.id,this.insertFirst=e.insertFirst!==void 0?e.insertFirst:!0,this.stopEvent=e.stopEvent!==void 0?e.stopEvent:!0,this.element=document.createElement("div"),this.element.className=e.className!==void 0?e.className:"ol-overlay-container "+dh,this.element.style.position="absolute",this.element.style.pointerEvents="auto",this.autoPan=e.autoPan===!0?{}:e.autoPan||void 0,this.rendered={transform_:"",visible:!0},this.mapPostrenderListenerKey=null,this.addChangeListener(Te.ELEMENT,this.handleElementChanged),this.addChangeListener(Te.MAP,this.handleMapChanged),this.addChangeListener(Te.OFFSET,this.handleOffsetChanged),this.addChangeListener(Te.POSITION,this.handlePositionChanged),this.addChangeListener(Te.POSITIONING,this.handlePositioningChanged),e.element!==void 0&&this.setElement(e.element),this.setOffset(e.offset!==void 0?e.offset:[0,0]),this.setPositioning(e.positioning||"top-left"),e.position!==void 0&&this.setPosition(e.position)}getElement(){return this.get(Te.ELEMENT)}getId(){return this.id}getMap(){return this.get(Te.MAP)||null}getOffset(){return this.get(Te.OFFSET)}getPosition(){return this.get(Te.POSITION)}getPositioning(){return this.get(Te.POSITIONING)}handleElementChanged(){Or(this.element);const e=this.getElement();e&&this.element.appendChild(e)}handleMapChanged(){var t;this.mapPostrenderListenerKey&&((t=this.element)==null||t.remove(),de(this.mapPostrenderListenerKey),this.mapPostrenderListenerKey=null);const e=this.getMap();if(e){this.mapPostrenderListenerKey=$(e,Et.POSTRENDER,this.render,this),this.updatePixelPosition();const n=this.stopEvent?e.getOverlayContainerStopEvent():e.getOverlayContainer();this.insertFirst?n.insertBefore(this.element,n.childNodes[0]||null):n.appendChild(this.element),this.performAutoPan()}}render(){this.updatePixelPosition()}handleOffsetChanged(){this.updatePixelPosition()}handlePositionChanged(){this.updatePixelPosition(),this.performAutoPan()}handlePositioningChanged(){this.updatePixelPosition()}setElement(e){this.set(Te.ELEMENT,e)}setMap(e){this.set(Te.MAP,e)}setOffset(e){this.set(Te.OFFSET,e)}setPosition(e){this.set(Te.POSITION,e)}performAutoPan(){this.autoPan&&this.panIntoView(this.autoPan)}panIntoView(e){const t=this.getMap();if(!t||!t.getTargetElement()||!this.get(Te.POSITION))return;const n=this.getRect(t.getTargetElement(),t.getSize()),i=this.getElement(),l=this.getRect(i,[Z1(i),q1(i)]);e=e||{};const o=e.margin===void 0?20:e.margin;if(!Rn(n,l)){const r=l[0]-n[0],s=n[2]-l[2],h=l[1]-n[1],c=n[3]-l[3],u=[0,0];if(r<0?u[0]=r-o:s<0&&(u[0]=Math.abs(s)+o),h<0?u[1]=h-o:c<0&&(u[1]=Math.abs(c)+o),u[0]!==0||u[1]!==0){const d=t.getView().getCenterInternal(),m=t.getPixelFromCoordinateInternal(d);if(!m)return;const y=[m[0]+u[0],m[1]+u[1]],k=e.animation||{};t.getView().animateInternal({center:t.getCoordinateFromPixelInternal(y),duration:k.duration,easing:k.easing})}}}getRect(e,t){const n=e.getBoundingClientRect(),i=n.left+window.pageXOffset,l=n.top+window.pageYOffset;return[i,l,i+t[0],l+t[1]]}setPositioning(e){this.set(Te.POSITIONING,e)}setVisible(e){this.rendered.visible!==e&&(this.element.style.display=e?"":"none",this.rendered.visible=e)}updatePixelPosition(){const e=this.getMap(),t=this.getPosition();if(!e||!e.isRendered()||!t){this.setVisible(!1);return}const n=e.getPixelFromCoordinate(t),i=e.getSize();this.updateRenderedPosition(n,i)}updateRenderedPosition(e,t){const n=this.element.style,i=this.getOffset(),l=this.getPositioning();this.setVisible(!0);const o=Math.round(e[0]+i[0])+"px",r=Math.round(e[1]+i[1])+"px";let s="0%",h="0%";l=="bottom-right"||l=="center-right"||l=="top-right"?s="-100%":(l=="bottom-center"||l=="center-center"||l=="top-center")&&(s="-50%"),l=="bottom-left"||l=="bottom-center"||l=="bottom-right"?h="-100%":(l=="center-left"||l=="center-center"||l=="center-right")&&(h="-50%");const c=`translate(${s}, ${h}) translate(${o}, ${r})`;this.rendered.transform_!=c&&(this.rendered.transform_=c,n.transform=c)}getOptions(){return this.options}}class Kl{constructor(e,t,n,i){this.minX=e,this.maxX=t,this.minY=n,this.maxY=i}contains(e){return this.containsXY(e[1],e[2])}containsTileRange(e){return this.minX<=e.minX&&e.maxX<=this.maxX&&this.minY<=e.minY&&e.maxY<=this.maxY}containsXY(e,t){return this.minX<=e&&e<=this.maxX&&this.minY<=t&&t<=this.maxY}equals(e){return this.minX==e.minX&&this.minY==e.minY&&this.maxX==e.maxX&&this.maxY==e.maxY}extend(e){e.minX<this.minX&&(this.minX=e.minX),e.maxX>this.maxX&&(this.maxX=e.maxX),e.minY<this.minY&&(this.minY=e.minY),e.maxY>this.maxY&&(this.maxY=e.maxY)}getHeight(){return this.maxY-this.minY+1}getSize(){return[this.getWidth(),this.getHeight()]}getWidth(){return this.maxX-this.minX+1}intersects(e){return this.minX<=e.maxX&&this.maxX>=e.minX&&this.minY<=e.maxY&&this.maxY>=e.minY}}function Ln(a,e,t,n,i){return i!==void 0?(i.minX=a,i.maxX=e,i.minY=t,i.maxY=n,i):new Kl(a,e,t,n)}function dl(a){return a instanceof Image||a instanceof HTMLCanvasElement||a instanceof HTMLVideoElement||a instanceof ImageBitmap?a:null}const Hu=new Error("disposed"),Ju=[256,256];class $o extends Hl{constructor(e){const t=J.IDLE;super(e.tileCoord,t,{transition:e.transition,interpolate:e.interpolate}),this.loader_=e.loader,this.data_=null,this.error_=null,this.size_=e.size||null,this.controller_=e.controller||null}getSize(){if(this.size_)return this.size_;const e=dl(this.data_);return e?[e.width,e.height]:Ju}getData(){return this.data_}getError(){return this.error_}load(){if(this.state!==J.IDLE&&this.state!==J.ERROR)return;this.state=J.LOADING,this.changed();const e=this;this.loader_().then(function(t){e.data_=t,e.state=J.LOADED,e.changed()}).catch(function(t){e.error_=t,e.state=J.ERROR,e.changed()})}disposeInternal(){this.controller_&&(this.controller_.abort(Hu),this.controller_=null),super.disposeInternal()}}let Xi;const On=[];function er(a,e,t,n,i){a.beginPath(),a.moveTo(0,0),a.lineTo(e,t),a.lineTo(n,i),a.closePath(),a.save(),a.clip(),a.fillRect(0,0,Math.max(e,n)+1,Math.max(t,i)),a.restore()}function zi(a,e){return Math.abs(a[e*4]-210)>2||Math.abs(a[e*4+3]-.75*255)>2}function Fu(){if(Xi===void 0){const a=pe(6,6,On);a.globalCompositeOperation="lighter",a.fillStyle="rgba(210, 0, 0, 0.75)",er(a,4,5,4,0),er(a,4,5,0,5);const e=a.getImageData(0,0,3,3).data;Xi=zi(e,0)||zi(e,4)||zi(e,8),ki(a),On.push(a.canvas)}return Xi}function tr(a,e,t,n){const i=Si(t,e,a);let l=ro(e,n,t);const o=e.getMetersPerUnit();o!==void 0&&(l*=o);const r=a.getMetersPerUnit();r!==void 0&&(l/=r);const s=a.getExtent();if(!s||Nn(s,i)){const h=ro(a,l,i)/l;isFinite(h)&&h>0&&(l/=h)}return l}function Ku(a,e,t,n){const i=un(t);let l=tr(a,e,i,n);return(!isFinite(l)||l<=0)&&cr(t,function(o){return l=tr(a,e,o,n),isFinite(l)&&l>0}),l}function Yu(a,e,t,n,i,l,o,r,s,h,c,u,d,m){const y=pe(Math.round(t*a),Math.round(t*e),On);if(u||(y.imageSmoothingEnabled=!1),s.length===0)return y.canvas;y.scale(t,t);function k(U){return Math.round(U*t)/t}y.globalCompositeOperation="lighter";const S=nt();s.forEach(function(U,L,w){Ps(S,U.extent)});let g;const f=t/n,p=(u?1:1+Math.pow(2,-24))/f;g=pe(Math.round(se(S)*f),Math.round(be(S)*f),On),u||(g.imageSmoothingEnabled=!1),s.forEach(function(U,L,w){if(U.image.width>0&&U.image.height>0){if(U.clipExtent){g.save();const D=(U.clipExtent[0]-S[0])*f,b=-(U.clipExtent[3]-S[3])*f,O=se(U.clipExtent)*f,F=be(U.clipExtent)*f;g.rect(u?D:Math.round(D),u?b:Math.round(b),u?O:Math.round(D+O)-Math.round(D),u?F:Math.round(b+F)-Math.round(b)),g.clip()}const M=(U.extent[0]-S[0])*f,E=-(U.extent[3]-S[3])*f,G=se(U.extent)*f,P=be(U.extent)*f;g.drawImage(U.image,h,h,U.image.width-2*h,U.image.height-2*h,u?M:Math.round(M),u?E:Math.round(E),u?G:Math.round(M+G)-Math.round(M),u?P:Math.round(E+P)-Math.round(E)),U.clipExtent&&g.restore()}});const C=Sn(o);return r.getTriangles().forEach(function(U,L,w){const M=U.source,E=U.target;let G=M[0][0],P=M[0][1],D=M[1][0],b=M[1][1],O=M[2][0],F=M[2][1];const N=k((E[0][0]-C[0])/l),V=k(-(E[0][1]-C[1])/l),v=k((E[1][0]-C[0])/l),K=k(-(E[1][1]-C[1])/l),Z=k((E[2][0]-C[0])/l),ee=k(-(E[2][1]-C[1])/l),I=G,fe=P;G=0,P=0,D-=I,b-=fe,O-=I,F-=fe;const me=[[D,b,0,0,v-N],[O,F,0,0,Z-N],[0,0,D,b,K-V],[0,0,O,F,ee-V]],he=Hs(me);if(!he)return;if(y.save(),y.beginPath(),Fu()||!u){y.moveTo(v,K);const ge=4,Re=N-v,We=V-K;for(let _e=0;_e<ge;_e++)y.lineTo(v+k((_e+1)*Re/ge),K+k(_e*We/(ge-1))),_e!=ge-1&&y.lineTo(v+k((_e+1)*Re/ge),K+k((_e+1)*We/(ge-1)));y.lineTo(Z,ee)}else y.moveTo(v,K),y.lineTo(N,V),y.lineTo(Z,ee);y.clip(),y.transform(he[0],he[2],he[1],he[3],N,V),y.translate(S[0]-I,S[3]-fe);let Ce;if(g)Ce=g.canvas,y.scale(p,-p);else{const ge=s[0],Re=ge.extent;Ce=ge.image,y.scale(se(Re)/Ce.width,-be(Re)/Ce.height)}y.drawImage(Ce,0,0),y.restore()}),g&&(ki(g),On.push(g.canvas)),c&&(y.save(),y.globalCompositeOperation="source-over",y.strokeStyle="black",y.lineWidth=1,r.getTriangles().forEach(function(U,L,w){const M=U.target,E=(M[0][0]-C[0])/l,G=-(M[0][1]-C[1])/l,P=(M[1][0]-C[0])/l,D=-(M[1][1]-C[1])/l,b=(M[2][0]-C[0])/l,O=-(M[2][1]-C[1])/l;y.beginPath(),y.moveTo(P,D),y.lineTo(E,G),y.lineTo(b,O),y.closePath(),y.stroke()}),y.restore()),y.canvas}const Vu=10,nr=.25;class Xu{constructor(e,t,n,i,l,o,r){this.sourceProj_=e,this.targetProj_=t;let s={};const h=r?g1(p=>Le(r,Si(p,this.targetProj_,this.sourceProj_))):za(this.targetProj_,this.sourceProj_);this.transformInv_=function(p){const C=p[0]+"/"+p[1];return s[C]||(s[C]=h(p)),s[C]},this.maxSourceExtent_=i,this.errorThresholdSquared_=l*l,this.triangles_=[],this.wrapsXInSource_=!1,this.canWrapXInSource_=this.sourceProj_.canWrapX()&&!!i&&!!this.sourceProj_.getExtent()&&se(i)>=se(this.sourceProj_.getExtent()),this.sourceWorldWidth_=this.sourceProj_.getExtent()?se(this.sourceProj_.getExtent()):null,this.targetWorldWidth_=this.targetProj_.getExtent()?se(this.targetProj_.getExtent()):null;const c=Sn(n),u=ci(n),d=hi(n),m=si(n),y=this.transformInv_(c),k=this.transformInv_(u),S=this.transformInv_(d),g=this.transformInv_(m),f=Vu+(o?Math.max(0,Math.ceil(Math.log2($i(n)/(o*o*256*256)))):0);if(this.addQuad_(c,u,d,m,y,k,S,g,f),this.wrapsXInSource_){let p=1/0;this.triangles_.forEach(function(C,U,L){p=Math.min(p,C.source[0][0],C.source[1][0],C.source[2][0])}),this.triangles_.forEach(C=>{if(Math.max(C.source[0][0],C.source[1][0],C.source[2][0])-p>this.sourceWorldWidth_/2){const U=[[C.source[0][0],C.source[0][1]],[C.source[1][0],C.source[1][1]],[C.source[2][0],C.source[2][1]]];U[0][0]-p>this.sourceWorldWidth_/2&&(U[0][0]-=this.sourceWorldWidth_),U[1][0]-p>this.sourceWorldWidth_/2&&(U[1][0]-=this.sourceWorldWidth_),U[2][0]-p>this.sourceWorldWidth_/2&&(U[2][0]-=this.sourceWorldWidth_);const L=Math.min(U[0][0],U[1][0],U[2][0]);Math.max(U[0][0],U[1][0],U[2][0])-L<this.sourceWorldWidth_/2&&(C.source=U)}})}s={}}addTriangle_(e,t,n,i,l,o){this.triangles_.push({source:[i,l,o],target:[e,t,n]})}addQuad_(e,t,n,i,l,o,r,s,h){const c=jl([l,o,r,s]),u=this.sourceWorldWidth_?se(c)/this.sourceWorldWidth_:null,d=this.sourceWorldWidth_,m=this.sourceProj_.canWrapX()&&u>.5&&u<1;let y=!1;if(h>0){if(this.targetProj_.isGlobal()&&this.targetWorldWidth_){const S=jl([e,t,n,i]);y=se(S)/this.targetWorldWidth_>nr||y}!m&&this.sourceProj_.isGlobal()&&u&&(y=u>nr||y)}if(!y&&this.maxSourceExtent_&&isFinite(c[0])&&isFinite(c[1])&&isFinite(c[2])&&isFinite(c[3])&&!ve(c,this.maxSourceExtent_))return;let k=0;if(!y&&(!isFinite(l[0])||!isFinite(l[1])||!isFinite(o[0])||!isFinite(o[1])||!isFinite(r[0])||!isFinite(r[1])||!isFinite(s[0])||!isFinite(s[1]))){if(h>0)y=!0;else if(k=(!isFinite(l[0])||!isFinite(l[1])?8:0)+(!isFinite(o[0])||!isFinite(o[1])?4:0)+(!isFinite(r[0])||!isFinite(r[1])?2:0)+(!isFinite(s[0])||!isFinite(s[1])?1:0),k!=1&&k!=2&&k!=4&&k!=8)return}if(h>0){if(!y){const S=[(e[0]+n[0])/2,(e[1]+n[1])/2],g=this.transformInv_(S);let f;m?f=(cn(l[0],d)+cn(r[0],d))/2-cn(g[0],d):f=(l[0]+r[0])/2-g[0];const p=(l[1]+r[1])/2-g[1];y=f*f+p*p>this.errorThresholdSquared_}if(y){if(Math.abs(e[0]-n[0])<=Math.abs(e[1]-n[1])){const S=[(t[0]+n[0])/2,(t[1]+n[1])/2],g=this.transformInv_(S),f=[(i[0]+e[0])/2,(i[1]+e[1])/2],p=this.transformInv_(f);this.addQuad_(e,t,S,f,l,o,g,p,h-1),this.addQuad_(f,S,n,i,p,g,r,s,h-1)}else{const S=[(e[0]+t[0])/2,(e[1]+t[1])/2],g=this.transformInv_(S),f=[(n[0]+i[0])/2,(n[1]+i[1])/2],p=this.transformInv_(f);this.addQuad_(e,S,f,i,l,g,p,s,h-1),this.addQuad_(S,t,n,f,g,o,r,p,h-1)}return}}if(m){if(!this.canWrapXInSource_)return;this.wrapsXInSource_=!0}(k&11)==0&&this.addTriangle_(e,n,i,l,r,s),(k&14)==0&&this.addTriangle_(e,n,t,l,r,o),k&&((k&13)==0&&this.addTriangle_(t,i,e,o,s,l),(k&7)==0&&this.addTriangle_(t,i,n,o,s,r))}calculateSourceExtent(){const e=nt();return this.triangles_.forEach(function(t,n,i){const l=t.source;ra(e,l[0]),ra(e,l[1]),ra(e,l[2])}),e}getTriangles(){return this.triangles_}}const zu=.5;class Cs extends Hl{constructor(e,t,n,i,l,o,r,s,h,c,u,d){super(l,J.IDLE,d),this.renderEdges_=u!==void 0?u:!1,this.pixelRatio_=r,this.gutter_=s,this.canvas_=null,this.sourceTileGrid_=t,this.targetTileGrid_=i,this.wrappedTileCoord_=o||l,this.sourceTiles_=[],this.sourcesListenerKeys_=null,this.sourceZ_=0,this.clipExtent_=e.canWrapX()?e.getExtent():void 0;const m=i.getTileCoordExtent(this.wrappedTileCoord_),y=this.targetTileGrid_.getExtent();let k=this.sourceTileGrid_.getExtent();const S=y?hn(m,y):m;if($i(S)===0){this.state=J.EMPTY;return}const g=e.getExtent();g&&(k?k=hn(k,g):k=g);const f=i.getResolution(this.wrappedTileCoord_[0]),p=Ku(e,n,S,f);if(!isFinite(p)||p<=0){this.state=J.EMPTY;return}const C=c!==void 0?c:zu;if(this.triangulation_=new Xu(e,n,S,k,p*C,f),this.triangulation_.getTriangles().length===0){this.state=J.EMPTY;return}this.sourceZ_=t.getZForResolution(p);let U=this.triangulation_.calculateSourceExtent();if(k&&(e.canWrapX()?(U[1]=ye(U[1],k[1],k[3]),U[3]=ye(U[3],k[1],k[3])):U=hn(U,k)),!$i(U))this.state=J.EMPTY;else{let L=0,w=0;e.canWrapX()&&(L=se(g),w=Math.floor((U[0]-g[0])/L)),mr(U.slice(),e,!0).forEach(E=>{const G=t.getTileRangeForExtentAndZ(E,this.sourceZ_);for(let P=G.minX;P<=G.maxX;P++)for(let D=G.minY;D<=G.maxY;D++){const b=h(this.sourceZ_,P,D,r);if(b){const O=w*L;this.sourceTiles_.push({tile:b,offset:O})}}++w}),this.sourceTiles_.length===0&&(this.state=J.EMPTY)}}getImage(){return this.canvas_}reproject_(){const e=[];if(this.sourceTiles_.forEach(t=>{var i;const n=t.tile;if(n&&n.getState()==J.LOADED){const l=this.sourceTileGrid_.getTileCoordExtent(n.tileCoord);l[0]+=t.offset,l[2]+=t.offset;const o=(i=this.clipExtent_)==null?void 0:i.slice();o&&(o[0]+=t.offset,o[2]+=t.offset),e.push({extent:l,clipExtent:o,image:n.getImage()})}}),this.sourceTiles_.length=0,e.length===0)this.state=J.ERROR;else{const t=this.wrappedTileCoord_[0],n=this.targetTileGrid_.getTileSize(t),i=typeof n=="number"?n:n[0],l=typeof n=="number"?n:n[1],o=this.targetTileGrid_.getResolution(t),r=this.sourceTileGrid_.getResolution(this.sourceZ_),s=this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);this.canvas_=Yu(i,l,this.pixelRatio_,r,this.sourceTileGrid_.getExtent(),o,s,this.triangulation_,e,this.gutter_,this.renderEdges_,this.interpolate),this.state=J.LOADED}this.changed()}load(){if(this.state==J.IDLE){this.state=J.LOADING,this.changed();let e=0;this.sourcesListenerKeys_=[],this.sourceTiles_.forEach(({tile:t})=>{const n=t.getState();if(n==J.IDLE||n==J.LOADING){e++;const i=$(t,z.CHANGE,l=>{const o=t.getState();(o==J.LOADED||o==J.ERROR||o==J.EMPTY)&&(de(i),e--,e===0&&(this.unlistenSources_(),this.reproject_()))});this.sourcesListenerKeys_.push(i)}}),e===0?setTimeout(this.reproject_.bind(this),0):this.sourceTiles_.forEach(function({tile:t},n,i){t.getState()==J.IDLE&&t.load()})}}unlistenSources_(){this.sourcesListenerKeys_.forEach(de),this.sourcesListenerKeys_=null}release(){this.canvas_&&(ki(this.canvas_.getContext("2d")),On.push(this.canvas_),this.canvas_=null),super.release()}}class Zu{constructor(e){this.highWaterMark=e!==void 0?e:2048,this.count_=0,this.entries_={},this.oldest_=null,this.newest_=null}deleteOldest(){const e=this.pop();e instanceof ii&&e.dispose()}canExpireCache(){return this.highWaterMark>0&&this.getCount()>this.highWaterMark}expireCache(e){for(;this.canExpireCache();)this.deleteOldest()}clear(){for(;this.oldest_;)this.deleteOldest()}containsKey(e){return this.entries_.hasOwnProperty(e)}forEach(e){let t=this.oldest_;for(;t;)e(t.value_,t.key_,this),t=t.newer}get(e,t){const n=this.entries_[e];return oe(n!==void 0,"Tried to get a value for a key that does not exist in the cache"),n===this.newest_||(n===this.oldest_?(this.oldest_=this.oldest_.newer,this.oldest_.older=null):(n.newer.older=n.older,n.older.newer=n.newer),n.newer=null,n.older=this.newest_,this.newest_.newer=n,this.newest_=n),n.value_}remove(e){const t=this.entries_[e];return oe(t!==void 0,"Tried to get a value for a key that does not exist in the cache"),t===this.newest_?(this.newest_=t.older,this.newest_&&(this.newest_.newer=null)):t===this.oldest_?(this.oldest_=t.newer,this.oldest_&&(this.oldest_.older=null)):(t.newer.older=t.older,t.older.newer=t.newer),delete this.entries_[e],--this.count_,t.value_}getCount(){return this.count_}getKeys(){const e=new Array(this.count_);let t=0,n;for(n=this.newest_;n;n=n.older)e[t++]=n.key_;return e}getValues(){const e=new Array(this.count_);let t=0,n;for(n=this.newest_;n;n=n.older)e[t++]=n.value_;return e}peekLast(){return this.oldest_.value_}peekLastKey(){return this.oldest_.key_}peekFirstKey(){return this.newest_.key_}peek(e){var t;return(t=this.entries_[e])==null?void 0:t.value_}pop(){const e=this.oldest_;return delete this.entries_[e.key_],e.newer&&(e.newer.older=null),this.oldest_=e.newer,this.oldest_||(this.newest_=null),--this.count_,e.value_}replace(e,t){this.get(e),this.entries_[e].value_=t}set(e,t){oe(!(e in this.entries_),"Tried to set a value for a key that is used already");const n={key_:e,newer:null,older:this.newest_,value_:t};this.newest_?this.newest_.newer=n:this.oldest_=n,this.newest_=n,this.entries_[e]=n,++this.count_}setSize(e){this.highWaterMark=e}}function ai(a,e,t,n){return n!==void 0?(n[0]=a,n[1]=e,n[2]=t,n):[a,e,t]}function qu(a,e,t){return a+"/"+e+"/"+t}function ju(a){return Qu(a[0],a[1],a[2])}function Qu(a,e,t){return(e<<a)+t}function $u(a,e){const t=a[0],n=a[1],i=a[2];if(e.getMinZoom()>t||t>e.getMaxZoom())return!1;const l=e.getFullTileRange(t);return l?l.containsXY(n,i):!0}function Zi(a,e,t,n){return`${a},${qu(e,t,n)}`}function qi(a,e,t){if(!(t in a))return a[t]=new Set([e]),!0;const n=a[t],i=n.has(e);return i||n.add(e),!i}function e0(a,e,t){const n=a[t];return n?n.delete(e):!1}function ar(a,e){const t=a.layerStatesArray[a.layerIndex];t.extent&&(e=hn(e,Yt(t.extent,a.viewState.projection)));const n=t.layer.getRenderSource();if(!n.getWrapX()){const i=n.getTileGridForProjection(a.viewState.projection).getExtent();i&&(e=hn(e,i))}return e}class t0 extends es{constructor(e,t){super(e),t=t||{},this.extentChanged=!0,this.renderComplete=!1,this.renderedExtent_=null,this.renderedPixelRatio,this.renderedProjection=null,this.renderedRevision_,this.renderedTiles=[],this.renderedSourceKey_,this.renderedSourceRevision_,this.tempExtent=nt(),this.tempTileRange_=new Kl(0,0,0,0),this.tempTileCoord_=ai(0,0,0);const n=t.cacheSize!==void 0?t.cacheSize:512;this.tileCache_=new Zu(n),this.maxStaleKeys=n*.5}getTileCache(){return this.tileCache_}getOrCreateTile(e,t,n,i){const l=this.tileCache_,r=this.getLayer().getSource(),s=Zi(r.getKey(),e,t,n);let h;if(l.containsKey(s))h=l.get(s);else{if(h=r.getTile(e,t,n,i.pixelRatio,i.viewState.projection),!h)return null;l.set(s,h)}return h}getTile(e,t,n,i){const l=this.getOrCreateTile(e,t,n,i);return l||null}getData(e){const t=this.frameState;if(!t)return null;const n=this.getLayer(),i=Le(t.pixelToCoordinateTransform,e.slice()),l=n.getExtent();if(l&&!Nn(l,i))return null;const o=t.viewState,r=n.getRenderSource(),s=r.getTileGridForProjection(o.projection),h=r.getTilePixelRatio(t.pixelRatio);for(let c=s.getZForResolution(o.resolution);c>=s.getMinZoom();--c){const u=s.getTileCoordForCoordAndZ(i,c),d=this.getTile(c,u[1],u[2],t);if(!d||d.getState()!==J.LOADED)continue;const m=s.getOrigin(c),y=He(s.getTileSize(c)),k=s.getResolution(c);let S;if(d instanceof us||d instanceof Cs)S=d.getImage();else if(d instanceof $o){if(S=dl(d.getData()),!S)continue}else continue;const g=Math.floor(h*((i[0]-m[0])/k-u[1]*y[0])),f=Math.floor(h*((m[1]-i[1])/k-u[2]*y[1])),p=Math.round(h*r.getGutterForProjection(o.projection));return this.getImageData(S,g+p,f+p)}return null}prepareFrame(e){this.renderedProjection?e.viewState.projection!==this.renderedProjection&&(this.tileCache_.clear(),this.renderedProjection=e.viewState.projection):this.renderedProjection=e.viewState.projection;const t=this.getLayer().getSource();if(!t)return!1;const n=t.getRevision();return this.renderedRevision_?this.renderedRevision_!==n&&(this.renderedRevision_=n,this.renderedSourceKey_===t.getKey()&&this.tileCache_.clear()):this.renderedRevision_=n,!0}enqueueTiles(e,t,n,i,l){const o=e.viewState,r=this.getLayer(),s=r.getRenderSource(),h=s.getTileGridForProjection(o.projection),c=ae(s);c in e.wantedTiles||(e.wantedTiles[c]={});const u=e.wantedTiles[c],d=r.getMapInternal(),m=Math.max(n-l,h.getMinZoom(),h.getZForResolution(Math.min(r.getMaxResolution(),d?d.getView().getResolutionForZoom(Math.max(r.getMinZoom(),0)):h.getResolution(0)),s.zDirection)),y=o.rotation,k=y?ur(o.center,o.resolution,y,e.size):void 0;for(let S=n;S>=m;--S){const g=h.getTileRangeForExtentAndZ(t,S,this.tempTileRange_),f=h.getResolution(S);for(let p=g.minX;p<=g.maxX;++p)for(let C=g.minY;C<=g.maxY;++C){if(y&&!h.tileCoordIntersectsViewport([S,p,C],k))continue;const U=this.getTile(S,p,C,e);if(!U||!qi(i,U,S))continue;const w=U.getKey();if(u[w]=!0,U.getState()===J.IDLE&&!e.tileQueue.isKeyQueued(w)){const M=ai(S,p,C,this.tempTileCoord_);e.tileQueue.enqueue([U,c,h.getTileCoordCenter(M),f])}}}}findStaleTile_(e,t){const n=this.tileCache_,i=e[0],l=e[1],o=e[2],r=this.getStaleKeys();for(let s=0;s<r.length;++s){const h=Zi(r[s],i,l,o);if(n.containsKey(h)){const c=n.peek(h);if(c.getState()===J.LOADED)return c.endTransition(ae(this)),qi(t,c,i),!0}}return!1}findAltTiles_(e,t,n,i){const l=e.getTileRangeForTileCoordAndZ(t,n,this.tempTileRange_);if(!l)return!1;let o=!0;const r=this.tileCache_,h=this.getLayer().getRenderSource().getKey();for(let c=l.minX;c<=l.maxX;++c)for(let u=l.minY;u<=l.maxY;++u){const d=Zi(h,n,c,u);let m=!1;if(r.containsKey(d)){const y=r.peek(d);y.getState()===J.LOADED&&(qi(i,y,n),m=!0)}m||(o=!1)}return o}renderFrame(e,t){this.renderComplete=!0;const n=e.layerStatesArray[e.layerIndex],i=e.viewState,l=i.projection,o=i.resolution,r=i.center,s=e.pixelRatio,h=this.getLayer(),c=h.getSource(),u=c.getTileGridForProjection(l),d=u.getZForResolution(o,c.zDirection),m=u.getResolution(d),y=c.getKey();this.renderedSourceKey_?this.renderedSourceKey_!==y&&(this.prependStaleKey(this.renderedSourceKey_),this.renderedSourceKey_=y):this.renderedSourceKey_=y;let k=e.extent;const S=c.getTilePixelRatio(s);this.prepareContainer(e,t);const g=this.context.canvas.width,f=this.context.canvas.height,p=n.extent&&Yt(n.extent);p&&(k=hn(k,Yt(n.extent)));const C=m*g/2/S,U=m*f/2/S,L=[r[0]-C,r[1]-U,r[0]+C,r[1]+U],w={};this.renderedTiles.length=0;const M=h.getPreload();if(e.nextExtent){const v=u.getZForResolution(i.nextResolution,c.zDirection),K=ar(e,e.nextExtent);this.enqueueTiles(e,K,v,w,M)}const E=ar(e,k);if(this.enqueueTiles(e,E,d,w,0),M>0&&setTimeout(()=>{this.enqueueTiles(e,E,d-1,w,M-1)},0),!(d in w))return this.container;const G=ae(this),P=e.time;for(const v of w[d]){const K=v.getState();if(K===J.EMPTY)continue;const Z=v.tileCoord;if(K===J.LOADED&&v.getAlpha(G,P)===1){v.endTransition(G);continue}if(K!==J.ERROR&&(this.renderComplete=!1),this.findStaleTile_(Z,w)){e0(w,v,d),e.animate=!0;continue}if(this.findAltTiles_(u,Z,d+1,w))continue;const fe=u.getMinZoom();for(let me=d-1;me>=fe&&!this.findAltTiles_(u,Z,me,w);--me);}const D=m/o*s/S,b=this.getRenderContext(e);bt(this.tempTransform,g/2,f/2,D,D,0,-g/2,-f/2),n.extent&&this.clipUnrotated(b,e,p),c.getInterpolate()||(b.imageSmoothingEnabled=!1),this.preRender(b,e);const O=Object.keys(w).map(Number);O.sort(It);let F;const N=[],V=[];for(let v=O.length-1;v>=0;--v){const K=O[v],Z=c.getTilePixelSize(K,s,l),I=u.getResolution(K)/m,fe=Z[0]*I*D,me=Z[1]*I*D,he=u.getTileCoordForCoordAndZ(Sn(L),K),Ce=u.getTileCoordExtent(he),ge=Le(this.tempTransform,[S*(Ce[0]-L[0])/m,S*(L[3]-Ce[3])/m]),Re=S*c.getGutterForProjection(l);for(const We of w[K]){if(We.getState()!==J.LOADED)continue;const _e=We.tileCoord,_=he[1]-_e[1],W=Math.round(ge[0]-(_-1)*fe),T=he[2]-_e[2],R=Math.round(ge[1]-(T-1)*me),x=Math.round(ge[0]-_*fe),X=Math.round(ge[1]-T*me),ie=W-x,B=R-X,le=O.length===1;let ce=!1;F=[x,X,x+ie,X,x+ie,X+B,x,X+B];for(let Ye=0,Fe=N.length;Ye<Fe;++Ye)if(!le&&K<V[Ye]){const ue=N[Ye];ve([x,X,x+ie,X+B],[ue[0],ue[3],ue[4],ue[7]])&&(ce||(b.save(),ce=!0),b.beginPath(),b.moveTo(F[0],F[1]),b.lineTo(F[2],F[3]),b.lineTo(F[4],F[5]),b.lineTo(F[6],F[7]),b.moveTo(ue[6],ue[7]),b.lineTo(ue[4],ue[5]),b.lineTo(ue[2],ue[3]),b.lineTo(ue[0],ue[1]),b.clip())}N.push(F),V.push(K),this.drawTile(We,e,x,X,ie,B,Re,le),ce&&b.restore(),this.renderedTiles.unshift(We),this.updateUsedTiles(e.usedTiles,c,We)}}if(this.renderedResolution=m,this.extentChanged=!this.renderedExtent_||!ua(this.renderedExtent_,L),this.renderedExtent_=L,this.renderedPixelRatio=s,this.postRender(this.context,e),n.extent&&b.restore(),b.imageSmoothingEnabled=!0,this.renderComplete){const v=(K,Z)=>{const ee=ae(c),I=Z.wantedTiles[ee],fe=I?Object.keys(I).length:0;this.updateCacheSize(fe),this.tileCache_.expireCache()};e.postRenderFunctions.push(v)}return this.container}updateCacheSize(e){this.tileCache_.highWaterMark=Math.max(this.tileCache_.highWaterMark,e*2)}drawTile(e,t,n,i,l,o,r,s){let h;if(e instanceof $o){if(h=dl(e.getData()),!h)throw new Error("Rendering array data is not yet supported")}else h=this.getTileImage(e);if(!h)return;const c=this.getRenderContext(t),u=ae(this),d=t.layerStatesArray[t.layerIndex],m=d.opacity*(s?e.getAlpha(u,t.time):1),y=m!==c.globalAlpha;y&&(c.save(),c.globalAlpha=m),c.drawImage(h,r,r,h.width-2*r,h.height-2*r,n,i,l,o),y&&c.restore(),m!==d.opacity?t.animate=!0:s&&e.endTransition(u)}getImage(){const e=this.context;return e?e.canvas:null}getTileImage(e){return e.getImage()}updateUsedTiles(e,t,n){const i=ae(t);i in e||(e[i]={}),e[i][n.getKey()]=!0}}const Fa={PRELOAD:"preload",USE_INTERIM_TILES_ON_ERROR:"useInterimTilesOnError"};class n0 extends Li{constructor(e){e=e||{};const t=Object.assign({},e),n=e.cacheSize;delete e.cacheSize,delete t.preload,delete t.useInterimTilesOnError,super(t),this.on,this.once,this.un,this.cacheSize_=n,this.setPreload(e.preload!==void 0?e.preload:0),this.setUseInterimTilesOnError(e.useInterimTilesOnError!==void 0?e.useInterimTilesOnError:!0)}getCacheSize(){return this.cacheSize_}getPreload(){return this.get(Fa.PRELOAD)}setPreload(e){this.set(Fa.PRELOAD,e)}getUseInterimTilesOnError(){return this.get(Fa.USE_INTERIM_TILES_ON_ERROR)}setUseInterimTilesOnError(e){this.set(Fa.USE_INTERIM_TILES_ON_ERROR,e)}getData(e){return super.getData(e)}}class a0 extends n0{constructor(e){super(e)}createRenderer(){return new t0(this,{cacheSize:this.getCacheSize()})}}const An=[0,0,0],Jt=5;class Us{constructor(e){this.minZoom=e.minZoom!==void 0?e.minZoom:0,this.resolutions_=e.resolutions,oe(Rs(this.resolutions_,(i,l)=>l-i),"`resolutions` must be sorted in descending order");let t;if(!e.origins){for(let i=0,l=this.resolutions_.length-1;i<l;++i)if(!t)t=this.resolutions_[i]/this.resolutions_[i+1];else if(this.resolutions_[i]/this.resolutions_[i+1]!==t){t=void 0;break}}this.zoomFactor_=t,this.maxZoom=this.resolutions_.length-1,this.origin_=e.origin!==void 0?e.origin:null,this.origins_=null,e.origins!==void 0&&(this.origins_=e.origins,oe(this.origins_.length==this.resolutions_.length,"Number of `origins` and `resolutions` must be equal"));const n=e.extent;n!==void 0&&!this.origin_&&!this.origins_&&(this.origin_=Sn(n)),oe(!this.origin_&&this.origins_||this.origin_&&!this.origins_,"Either `origin` or `origins` must be configured, never both"),this.tileSizes_=null,e.tileSizes!==void 0&&(this.tileSizes_=e.tileSizes,oe(this.tileSizes_.length==this.resolutions_.length,"Number of `tileSizes` and `resolutions` must be equal")),this.tileSize_=e.tileSize!==void 0?e.tileSize:this.tileSizes_?null:vl,oe(!this.tileSize_&&this.tileSizes_||this.tileSize_&&!this.tileSizes_,"Either `tileSize` or `tileSizes` must be configured, never both"),this.extent_=n!==void 0?n:null,this.fullTileRanges_=null,this.tmpSize_=[0,0],this.tmpExtent_=[0,0,0,0],e.sizes!==void 0?this.fullTileRanges_=e.sizes.map((i,l)=>{const o=new Kl(Math.min(0,i[0]),Math.max(i[0]-1,-1),Math.min(0,i[1]),Math.max(i[1]-1,-1));if(n){const r=this.getTileRangeForExtentAndZ(n,l);o.minX=Math.max(r.minX,o.minX),o.maxX=Math.min(r.maxX,o.maxX),o.minY=Math.max(r.minY,o.minY),o.maxY=Math.min(r.maxY,o.maxY)}return o}):n&&this.calculateTileRanges_(n)}forEachTileCoord(e,t,n){const i=this.getTileRangeForExtentAndZ(e,t);for(let l=i.minX,o=i.maxX;l<=o;++l)for(let r=i.minY,s=i.maxY;r<=s;++r)n([t,l,r])}forEachTileCoordParentTileRange(e,t,n,i){let l,o,r,s=null,h=e[0]-1;for(this.zoomFactor_===2?(o=e[1],r=e[2]):s=this.getTileCoordExtent(e,i);h>=this.minZoom;){if(o!==void 0&&r!==void 0?(o=Math.floor(o/2),r=Math.floor(r/2),l=Ln(o,o,r,r,n)):l=this.getTileRangeForExtentAndZ(s,h,n),t(h,l))return!0;--h}return!1}getExtent(){return this.extent_}getMaxZoom(){return this.maxZoom}getMinZoom(){return this.minZoom}getOrigin(e){return this.origin_?this.origin_:this.origins_[e]}getResolution(e){return this.resolutions_[e]}getResolutions(){return this.resolutions_}getTileCoordChildTileRange(e,t,n){if(e[0]<this.maxZoom){if(this.zoomFactor_===2){const l=e[1]*2,o=e[2]*2;return Ln(l,l+1,o,o+1,t)}const i=this.getTileCoordExtent(e,n||this.tmpExtent_);return this.getTileRangeForExtentAndZ(i,e[0]+1,t)}return null}getTileRangeForTileCoordAndZ(e,t,n){if(t>this.maxZoom||t<this.minZoom)return null;const i=e[0],l=e[1],o=e[2];if(t===i)return Ln(l,o,l,o,n);if(this.zoomFactor_){const s=Math.pow(this.zoomFactor_,t-i),h=Math.floor(l*s),c=Math.floor(o*s);if(t<i)return Ln(h,h,c,c,n);const u=Math.floor(s*(l+1))-1,d=Math.floor(s*(o+1))-1;return Ln(h,u,c,d,n)}const r=this.getTileCoordExtent(e,this.tmpExtent_);return this.getTileRangeForExtentAndZ(r,t,n)}getTileRangeForExtentAndZ(e,t,n){this.getTileCoordForXYAndZ_(e[0],e[3],t,!1,An);const i=An[1],l=An[2];this.getTileCoordForXYAndZ_(e[2],e[1],t,!0,An);const o=An[1],r=An[2];return Ln(i,o,l,r,n)}getTileCoordCenter(e){const t=this.getOrigin(e[0]),n=this.getResolution(e[0]),i=He(this.getTileSize(e[0]),this.tmpSize_);return[t[0]+(e[1]+.5)*i[0]*n,t[1]-(e[2]+.5)*i[1]*n]}getTileCoordExtent(e,t){const n=this.getOrigin(e[0]),i=this.getResolution(e[0]),l=He(this.getTileSize(e[0]),this.tmpSize_),o=n[0]+e[1]*l[0]*i,r=n[1]-(e[2]+1)*l[1]*i,s=o+l[0]*i,h=r+l[1]*i;return Zt(o,r,s,h,t)}getTileCoordForCoordAndResolution(e,t,n){return this.getTileCoordForXYAndResolution_(e[0],e[1],t,!1,n)}getTileCoordForXYAndResolution_(e,t,n,i,l){const o=this.getZForResolution(n),r=n/this.getResolution(o),s=this.getOrigin(o),h=He(this.getTileSize(o),this.tmpSize_);let c=r*(e-s[0])/n/h[0],u=r*(s[1]-t)/n/h[1];return i?(c=Ba(c,Jt)-1,u=Ba(u,Jt)-1):(c=Ga(c,Jt),u=Ga(u,Jt)),ai(o,c,u,l)}getTileCoordForXYAndZ_(e,t,n,i,l){const o=this.getOrigin(n),r=this.getResolution(n),s=He(this.getTileSize(n),this.tmpSize_);let h=(e-o[0])/r/s[0],c=(o[1]-t)/r/s[1];return i?(h=Ba(h,Jt)-1,c=Ba(c,Jt)-1):(h=Ga(h,Jt),c=Ga(c,Jt)),ai(n,h,c,l)}getTileCoordForCoordAndZ(e,t,n){return this.getTileCoordForXYAndZ_(e[0],e[1],t,!1,n)}getTileCoordResolution(e){return this.resolutions_[e[0]]}getTileSize(e){return this.tileSize_?this.tileSize_:this.tileSizes_[e]}getFullTileRange(e){return this.fullTileRanges_?this.fullTileRanges_[e]:this.extent_?this.getTileRangeForExtentAndZ(this.extent_,e):null}getZForResolution(e,t){const n=ml(this.resolutions_,e,t||0);return ye(n,this.minZoom,this.maxZoom)}tileCoordIntersectsViewport(e,t){return Gr(t,0,t.length,2,this.getTileCoordExtent(e))}calculateTileRanges_(e){const t=this.resolutions_.length,n=new Array(t);for(let i=this.minZoom;i<t;++i)n[i]=this.getTileRangeForExtentAndZ(e,i);this.fullTileRanges_=n}}function ps(a){let e=a.getDefaultTileGrid();return e||(e=r0(a),a.setDefaultTileGrid(e)),e}function i0(a,e,t){const n=e[0],i=a.getTileCoordCenter(e),l=Yl(t);if(!Nn(l,i)){const o=se(l),r=Math.ceil((l[0]-i[0])/o);return i[0]+=o*r,a.getTileCoordForCoordAndZ(i,n)}return e}function l0(a,e,t,n){n=n!==void 0?n:"top-left";const i=_s(a,e,t);return new Us({extent:a,origin:Os(a,n),resolutions:i,tileSize:t})}function o0(a){const e=a||{},t=e.extent||Je("EPSG:3857").getExtent(),n={extent:t,minZoom:e.minZoom,tileSize:e.tileSize,resolutions:_s(t,e.maxZoom,e.tileSize,e.maxResolution)};return new Us(n)}function _s(a,e,t,n){e=e!==void 0?e:tu,t=He(t!==void 0?t:vl);const i=be(a),l=se(a);n=n>0?n:Math.max(l/t[0],i/t[1]);const o=e+1,r=new Array(o);for(let s=0;s<o;++s)r[s]=n/Math.pow(2,s);return r}function r0(a,e,t,n){const i=Yl(a);return l0(i,e,t,n)}function Yl(a){a=Je(a);let e=a.getExtent();if(!e){const t=180*gl.degrees/a.getMetersPerUnit();e=Zt(-t,-t,t,t)}return e}const s0=/\{z\}/g,h0=/\{x\}/g,c0=/\{y\}/g,u0=/\{-y\}/g;function d0(a,e,t,n,i){return a.replace(s0,e.toString()).replace(h0,t.toString()).replace(c0,n.toString()).replace(u0,function(){if(i===void 0)throw new Error("If the URL template has a {-y} placeholder, the grid extent must be known");return(i-n).toString()})}function m0(a){const e=[];let t=/\{([a-z])-([a-z])\}/.exec(a);if(t){const n=t[1].charCodeAt(0),i=t[2].charCodeAt(0);let l;for(l=n;l<=i;++l)e.push(a.replace(t[0],String.fromCharCode(l)));return e}if(t=/\{(\d+)-(\d+)\}/.exec(a),t){const n=parseInt(t[2],10);for(let i=parseInt(t[1],10);i<=n;i++)e.push(a.replace(t[0],i.toString()));return e}return e.push(a),e}function y0(a,e){return function(t,n,i){if(!t)return;let l;const o=t[0];if(e){const r=e.getFullTileRange(o);r&&(l=r.getHeight()-1)}return d0(a,o,t[1],t[2],l)}}function S0(a,e){const t=a.length,n=new Array(t);for(let i=0;i<t;++i)n[i]=y0(a[i],e);return k0(n)}function k0(a){return a.length===1?a[0]:function(e,t,n){if(!e)return;const i=ju(e),l=cn(i,a.length);return a[l](e,t,n)}}class f0 extends Zr{constructor(e){super({attributions:e.attributions,attributionsCollapsible:e.attributionsCollapsible,projection:e.projection,state:e.state,wrapX:e.wrapX,interpolate:e.interpolate}),this.on,this.once,this.un,this.tilePixelRatio_=e.tilePixelRatio!==void 0?e.tilePixelRatio:1,this.tileGrid=e.tileGrid!==void 0?e.tileGrid:null;const t=[256,256];this.tileGrid&&He(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()),t),this.tmpSize=[0,0],this.key_=e.key||ae(this),this.tileOptions={transition:e.transition,interpolate:e.interpolate},this.zDirection=e.zDirection?e.zDirection:0}getGutterForProjection(e){return 0}getKey(){return this.key_}setKey(e){this.key_!==e&&(this.key_=e,this.changed())}getResolutions(e){const t=e?this.getTileGridForProjection(e):this.tileGrid;return t?t.getResolutions():null}getTile(e,t,n,i,l){return te()}getTileGrid(){return this.tileGrid}getTileGridForProjection(e){return this.tileGrid?this.tileGrid:ps(e)}getTilePixelRatio(e){return this.tilePixelRatio_}getTilePixelSize(e,t,n){const i=this.getTileGridForProjection(n),l=this.getTilePixelRatio(t),o=He(i.getTileSize(e),this.tmpSize);return l==1?o:Hh(o,l,this.tmpSize)}getTileCoordForTileUrlFunction(e,t){const n=t!==void 0?t:this.getProjection(),i=t!==void 0?this.getTileGridForProjection(n):this.tileGrid||this.getTileGridForProjection(n);return this.getWrapX()&&n.isGlobal()&&(e=i0(i,e,n)),$u(e,i)?e:null}clear(){}refresh(){this.clear(),super.refresh()}}class g0 extends Pt{constructor(e,t){super(e),this.tile=t}}const ji={TILELOADSTART:"tileloadstart",TILELOADEND:"tileloadend",TILELOADERROR:"tileloaderror"};class Vl extends f0{constructor(e){super({attributions:e.attributions,cacheSize:e.cacheSize,projection:e.projection,state:e.state,tileGrid:e.tileGrid,tilePixelRatio:e.tilePixelRatio,wrapX:e.wrapX,transition:e.transition,interpolate:e.interpolate,key:e.key,attributionsCollapsible:e.attributionsCollapsible,zDirection:e.zDirection}),this.generateTileUrlFunction_=this.tileUrlFunction===Vl.prototype.tileUrlFunction,this.tileLoadFunction=e.tileLoadFunction,e.tileUrlFunction&&(this.tileUrlFunction=e.tileUrlFunction),this.urls=null,e.urls?this.setUrls(e.urls):e.url&&this.setUrl(e.url),this.tileLoadingKeys_={}}getTileLoadFunction(){return this.tileLoadFunction}getTileUrlFunction(){return Object.getPrototypeOf(this).tileUrlFunction===this.tileUrlFunction?this.tileUrlFunction.bind(this):this.tileUrlFunction}getUrls(){return this.urls}handleTileChange(e){const t=e.target,n=ae(t),i=t.getState();let l;i==J.LOADING?(this.tileLoadingKeys_[n]=!0,l=ji.TILELOADSTART):n in this.tileLoadingKeys_&&(delete this.tileLoadingKeys_[n],l=i==J.ERROR?ji.TILELOADERROR:i==J.LOADED?ji.TILELOADEND:void 0),l!=null&&this.dispatchEvent(new g0(l,t))}setTileLoadFunction(e){this.tileLoadFunction=e,this.changed()}setTileUrlFunction(e,t){this.tileUrlFunction=e,typeof t<"u"?this.setKey(t):this.changed()}setUrl(e){const t=m0(e);this.urls=t,this.setUrls(t)}setUrls(e){this.urls=e;const t=e.join(`
`);this.generateTileUrlFunction_?this.setTileUrlFunction(S0(e,this.tileGrid),t):this.setKey(t)}tileUrlFunction(e,t,n){}}class C0 extends Vl{constructor(e){super({attributions:e.attributions,cacheSize:e.cacheSize,projection:e.projection,state:e.state,tileGrid:e.tileGrid,tileLoadFunction:e.tileLoadFunction?e.tileLoadFunction:U0,tilePixelRatio:e.tilePixelRatio,tileUrlFunction:e.tileUrlFunction,url:e.url,urls:e.urls,wrapX:e.wrapX,transition:e.transition,interpolate:e.interpolate!==void 0?e.interpolate:!0,key:e.key,attributionsCollapsible:e.attributionsCollapsible,zDirection:e.zDirection}),this.crossOrigin=e.crossOrigin!==void 0?e.crossOrigin:null,this.tileClass=e.tileClass!==void 0?e.tileClass:us,this.tileGridForProjection={},this.reprojectionErrorThreshold_=e.reprojectionErrorThreshold,this.renderReprojectionEdges_=!1}getGutterForProjection(e){return this.getProjection()&&e&&!Ti(this.getProjection(),e)?0:this.getGutter()}getGutter(){return 0}getKey(){let e=super.getKey();return this.getInterpolate()||(e+=":disable-interpolation"),e}getTileGridForProjection(e){const t=this.getProjection();if(this.tileGrid&&(!t||Ti(t,e)))return this.tileGrid;const n=ae(e);return n in this.tileGridForProjection||(this.tileGridForProjection[n]=ps(e)),this.tileGridForProjection[n]}createTile_(e,t,n,i,l,o){const r=[e,t,n],s=this.getTileCoordForTileUrlFunction(r,l),h=s?this.tileUrlFunction(s,i,l):void 0,c=new this.tileClass(r,h!==void 0?J.IDLE:J.EMPTY,h!==void 0?h:"",this.crossOrigin,this.tileLoadFunction,this.tileOptions);return c.key=o,c.addEventListener(z.CHANGE,this.handleTileChange.bind(this)),c}getTile(e,t,n,i,l){const o=this.getProjection();if(!o||!l||Ti(o,l))return this.getTileInternal(e,t,n,i,o||l);const r=[e,t,n],s=this.getKey(),h=this.getTileGridForProjection(o),c=this.getTileGridForProjection(l),u=this.getTileCoordForTileUrlFunction(r,l),d=new Cs(o,h,l,c,r,u,this.getTilePixelRatio(i),this.getGutter(),(m,y,k,S)=>this.getTileInternal(m,y,k,S,o),this.reprojectionErrorThreshold_,this.renderReprojectionEdges_,this.tileOptions);return d.key=s,d}getTileInternal(e,t,n,i,l){const o=this.getKey();return this.createTile_(e,t,n,i,l,o)}setRenderReprojectionEdges(e){this.renderReprojectionEdges_!=e&&(this.renderReprojectionEdges_=e,this.changed())}setTileGridForProjection(e,t){const n=Je(e);if(n){const i=ae(n);i in this.tileGridForProjection||(this.tileGridForProjection[i]=t)}}}function U0(a,e){a.getImage().src=e}class p0 extends C0{constructor(e){e=e||{};const t=e.projection!==void 0?e.projection:"EPSG:3857",n=e.tileGrid!==void 0?e.tileGrid:o0({extent:Yl(t),maxResolution:e.maxResolution,maxZoom:e.maxZoom,minZoom:e.minZoom,tileSize:e.tileSize});super({attributions:e.attributions,cacheSize:e.cacheSize,crossOrigin:e.crossOrigin,interpolate:e.interpolate,projection:t,reprojectionErrorThreshold:e.reprojectionErrorThreshold,tileGrid:n,tileLoadFunction:e.tileLoadFunction,tilePixelRatio:e.tilePixelRatio,tileUrlFunction:e.tileUrlFunction,url:e.url,urls:e.urls,wrapX:e.wrapX!==void 0?e.wrapX:!0,transition:e.transition,attributionsCollapsible:e.attributionsCollapsible,zDirection:e.zDirection}),this.gutter_=e.gutter!==void 0?e.gutter:0}getGutter(){return this.gutter_}}const _0='&#169; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> contributors.';class M0 extends p0{constructor(e){e=e||{};let t;e.attributions!==void 0?t=e.attributions:t=[_0];const n=e.crossOrigin!==void 0?e.crossOrigin:"anonymous",i=e.url!==void 0?e.url:"https://tile.openstreetmap.org/{z}/{x}/{y}.png";super({attributions:t,attributionsCollapsible:!1,cacheSize:e.cacheSize,crossOrigin:n,interpolate:e.interpolate,maxZoom:e.maxZoom!==void 0?e.maxZoom:19,reprojectionErrorThreshold:e.reprojectionErrorThreshold,tileLoadFunction:e.tileLoadFunction,transition:e.transition,url:i,wrapX:e.wrapX,zDirection:e.zDirection})}}/*! $Id: skipsMapApi.js 95 2025-05-24 02:55:23Z skip $
 * Copyright (c) 2015 by Skip Russell
 */function L0(a,e){if(console.log("skipsMapInitialize"),document.skipsMap)return;document.skipsMap={};var t=document.skipsMap;t.geocodeLatLngHandler=e,t.geocodeCountyHandler=null;//!!?? countyHandler;
var n=document.getElementById("popup"),i=document.getElementById("popup-content"),l=document.getElementById("popup-closer");l.onclick=function(){return document.skipsMap.overlay.setPosition(void 0),l.blur(),!1};var o=r(a);o||(o=S()),o?s(o):(console.log("no location.  Starting asynch initialization..."),u());function r(f){if(f){var p=f.split("%2C");if(p.length!=2&&(p=f.split(",")),p.length==2)return[p[1]*1,p[0]*1];alert('unable to parse latLng "'+f+'"')}return null}function s(f){console.log("initializeMap: starting at "+JSON.stringify(f,null,null));var p=Pa(f),C=new mt({center:p,zoom:9,rotation:0}),U=new a0({source:new M0});t.position=c();var L=new jo({source:new Io({features:[t.position.accuracyFeature,t.position.positionFeature]})});t.markers=h();var w=new jo({source:new Io({features:[]})});t.markers.markersLayer=w,t.overlay=new Nu({element:n});class M extends Ai{constructor(G={}){const P=document.createElement("button");P.innerHTML="⌖";const D=document.createElement("div");D.className="ol-currentlocation ol-unselectable ol-control",D.appendChild(P),super({element:D,target:G.target}),P.addEventListener("click",u,!1)}}t.map=new xu({layers:[U,L,w],overlays:[t.overlay],target:"skipsMapPanel",controls:ds().extend([new M({})]),view:C}),t.position.setCurrentPosition(p),t.map.on("click",t.markers.onMapClick),document.skipsMap=t,console.log("initializeMap: map is initialized")}function h(){var f=function(L){var w=L.coordinate;console.log("onMapClick: "+JSON.stringify(w,null,null));var M=[];if(document.skipsMap.map.forEachFeatureAtPixel(L.pixel,function(b,O){if(console.log("onMapClick (forEachFeature): feature="+b+", layer="+O),document.skipsMap.markers.markersLayer==O){var F=b.getProperties();M.push(F.contents)}}),M.length>0){var E;if(M.length<2)E=M[0];else{var G=5;E="<ul>";for(var P=0;P<M.length;P++){if(P>=G){E+="<li>...("+(M.length-G)+" more)";break}E+="<li>"+M[P]}E+="</ul>"}i.innerHTML=E,document.skipsMap.overlay.setPosition(w)}else if(document.skipsMap.overlay.getPosition())l.onclick();else{var D=ho(w);g(D),document.skipsMap.position.moveCurrentPosition(w)}},p=function(L,w,M){var E=[L.lng,L.lat],G=Pa(E),P=new oa;P.setStyle(C(w,"red")),P.setGeometry(new ya(G));var D={title:w,contents:M};P.setProperties(D);var b=document.skipsMap.markers.markersLayer.getSource();b.addFeature(P);let O=document.skipsMap.map.getView(),F=O.getZoom();O.fit(b.getExtent(),{maxZoom:F})};function C(L,w){var M=[];return M.push(new kt({text:new Ui({text:L,font:"Normal 10px Arial",fill:new mn({color:w})})})),M.push(new kt({image:new Vn({radius:10,stroke:new Yn({color:w,width:2})})})),M}var U={onMapClick:f,addMarker:p};return U}function c(){var f=function(M){p(M);var E=ho(M),G=E[0],P=E[1];if(t.geocodeLatLngHandler&&t.geocodeLatLngHandler(P,G),t.geocodeCountyHandler){var D=F(P,G),b=D.adm1.name,O=D.adm2.name;t.geocodeCountyHandler(b,O)}function F(N,V){var v=Number.MAX_VALUE,K={},Z=window.top.completeListOfCounties;for(var ee in Z){var I=Z[ee],fe=I.counties;for(var me in fe){var he=fe[me],Ce=he.lat,ge=he.lon,Re=V-ge,We=N-Ce,_e=Re*Re+We*We;v>_e&&(v=_e,K.adm1=I,K.adm2=he)}}return console.log("lookUpCounty: state="+K.adm1.name+", county="+K.adm2.name),K}},p=function(M){var E=document.skipsMap.position.positionFeature;document.skipsMap.map.getView().setCenter(M),E.setGeometry(new ya(M))},C=new oa,U=new oa;U.setStyle(w());var L={setCurrentPosition:p,moveCurrentPosition:f,accuracyFeature:C,positionFeature:U};return L;function w(){var M=new kt({image:new Vn({radius:6,fill:new mn({color:"#3399CC"}),stroke:new Yn({color:"#fff",width:2})})});return M}}function u(){console.log("getCurrentLocation: getCurrentPosition..."),navigator.geolocation.getCurrentPosition(d,m)}function d(f){var p=f.coords.latitude,C=f.coords.longitude;console.log("found current position: "+p+", "+C);var U=[C,p];if(document.skipsMap.map){const L=Pa(U);g(U),document.skipsMap.position.moveCurrentPosition(L)}else s(U)}function m(f){console.log("geolocation error: code "+f.code+" : "+f.message),console.log("using default map location");var p=43.8,C=-117.929;if(o=[C,p],document.skipsMap.map){const U=Pa(o);document.skipsMap.map.getView().animate({center:U,zoom:10})}else s(o)}function y(f,p,C){var U=new Date;U.setTime(U.getTime()+C*24*60*60*1e3);var L="expires="+U.toUTCString();document.cookie=f+"="+p+";"+L+";path=/"}function k(f){for(var p=f+"=",C=document.cookie.split(";"),U=0;U<C.length;U++){for(var L=C[U];L.charAt(0)==" ";)L=L.substring(1);if(L.indexOf(p)==0)return L.substring(p.length,L.length)}return""}function S(){var f=k("loc");return r(f)}function g(f){f&&f.length==2&&(a=parseFloat(f[1])+","+parseFloat(f[0]),y("loc",a,365))}}const A0={"US-OR-001":0,"US-OR-003":1,"US-OR-005":2,"US-OR-007":3,"US-OR-009":4,"US-OR-011":5,"US-OR-013":6,"US-OR-015":7,"US-OR-017":8,"US-OR-019":9,"US-OR-021":10,"US-OR-023":11,"US-OR-025":12,"US-OR-027":13,"US-OR-029":14,"US-OR-031":15,"US-OR-033":16,"US-OR-035":17,"US-OR-037":18,"US-OR-039":19,"US-OR-041":20,"US-OR-043":21,"US-OR-045":22,"US-OR-047":23,"US-OR-049":24,"US-OR-051":25,"US-OR-053":26,"US-OR-055":27,"US-OR-057":28,"US-OR-059":29,"US-OR-061":30,"US-OR-063":31,"US-OR-065":32,"US-OR-067":33,"US-OR-069":34,"US-OR-071":35,"US-WA-011":36},W0={"Emperor Goose":"BBCC1CCCDDGGHHJJJKLLLLMMM1PS1UUWW1WYC","Snow Goose":"B1C11CCCDDGG1HJJJ1111LM111PST1UWW1WY1","Ross's Goose":"BBCCCCCCDDGG1HJJJ1LLLLMMMMPSTUUWWWWY1","Greater White-fronted Goose":"BB111CCCDDGG1HJJJ11111M1M11S1UUWW1WY1","Tundra Bean-Goose":"BBCCCCCCDDGGHHJJJKLLLLMMMMPS1UUWWWWYC",Brant:"BBCC11CCDDGGHHJJJKL11LMMMMPS1UUWWWWYC","Cackling Goose":"B11111CCD1GGHHJJJKL11LM1M11S1UUWW1W11","Canada Goose":"B1111111111G1111111111M11111111111W11","Mute Swan":"BBCCCCCCDDGGHHJJJKLLLLMMMMPSTUU1WWWY1","Black Swan":"BBCCCCCCDDGGHHJJJKLLLLMMMMPSTUUWW1WYC","Trumpeter Swan":"BBCC1CCCDDGG1HJJJK1LLLMMM1PSTUUWW1WY1","Tundra Swan":"BBCC1111DDGGHHJJJKLLL1M1M1PST1UWW1WY1","Wood Duck":"B1111CCC11GG1H1J111111M1111S111111W11","Baikal Teal":"BBCCCCCCDDGGHHJJJKLLLLMMM1PSTUUWWWWYC","Blue-winged Teal":"BB1C1C1C1DG1H1JJJK11LLM1111STUU1W1WY1","Cinnamon Teal":"BB111C1C11G1111JJ111L1M1111STU1W11WY1","Northern Shoveler":"B111111C11GG11JJJ11111M1111S111111W11",Gadwall:"B111111C1DGG11JJJ11111M1111S111W11W11","Eurasian Wigeon":"BB1CC11C1DGGHHJJJKLL1LMMM1PSTUUWW1WY1","American Wigeon":"B111111C11GG11JJJ11111M11111111111W11",Mallard:"B111111111111111111111M11111111111W11","American Black Duck":"BBCCCCCCDDGGH1JJJKLLLLMMMMPSTUUWWWWYC","Northern Pintail":"B111111C1DGG1HJJJ1111LM1111111U111WY1","Green-winged Teal":"B111111C11GG11JJJ11111M11111111111W11",Canvasback:"B1C11C1CDDGG1HJJJ1111LM1M1PS11UWW1WY1",Redhead:"BBCC1C1C1DGG1HJJJ111LLMM11PST111W1WYC","Ring-necked Duck":"B1111111111G11JJJ11111M111111111W1W11","Tufted Duck":"BBC1CCCC1DGGHHJJJKLLLLM1MMPSTUUWWWWY1","Greater Scaup":"B1C111CC1DGG11JJJ1LL1LM111P111UWW1WY1","Lesser Scaup":"B111111C11GG11JJJ11LLLM11111111111W11","Steller's Eider":"BBC1CCCCDDGGHHJJJKLLLLMMMMPSTUUWWWWYC","King Eider":"BBCCC1CCDDGGHHJJJKLL1LMMMMPSTUUWWWWYC","Harlequin Duck":"BBC1C1CCDDGGH1JJJKLL1LMMM1PS1UUWWWWYC","Surf Scoter":"BBC1C1C1D1GGHHJJJKLL1LMMM1PS1UUWWWWYC","White-winged Scoter":"BBC1C1CCD1GGHHJJJKLL1LMMM1PS1UUWWWWYC","Common Scoter":"BBCCCCCCDDGGHHJJJKLL1LMMMMPSTUUWWWWYC","Black Scoter":"BBC1CCCCDDGGHHJJJKLL1LMMM1PSTUUWWWWYC","Long-tailed Duck":"BBCCCCCCDDGGHHJJJKLL1LMMM1PSTUUWWWWYC",Bufflehead:"B111111111GG11J1J11111M1111111U111W11","Common Goldeneye":"BB11111C1D1G11J1JK1L1LMM11P111U1W1WY1","Barrow's Goldeneye":"BBCCCC1C1D1GHHJ1J1LL11MMM1P11UU1WWWYC","Hooded Merganser":"BB111CC1D1GGH1JJJKL111M1M1P1TUU111W11","Common Merganser":"BB111C1111GGH111111111M111111U1111W11","Red-breasted Merganser":"BBC1C1CCDDGGHHJJJKL11LMMM1PS1UUWW1WYC","Ruddy Duck":"B111111C1DGG11JJJ11111M1111S111W11W11","Mountain Quail":"BB1CCCCCDDGGHH1JJKLL1LM1M1PSTUUWW1WYC","California Quail":"1B1C1CCC1DG11H111111LL111111T11111W1C","Wild Turkey":"B1CCCCC111GGHH1J1KL1L1MMMM11TUUW1WWYC","Ruffed Grouse":"BBC1CCCCDDGGHHJJJKLLLLMMMMPSTU1WW1WYC","Greater Sage-Grouse":"BBCCCCCC1DGG1HJJJKLLLLMMMMPSTUUWWWWYC","Dusky Grouse":"BBCCCCCCDDGGHHJJJKLLLLMMMMPSTUU1WWWYC","Sooty Grouse":"BB11CCCCDDGGHHJJJ111L1MMMMPSTUUWW1WYC","Gray Partridge":"BBCCCCCCDDGGHHJJJKLLLLMMMMPSTUU1WWWYC","Ring-necked Pheasant":"BB1C1C1CDD1G1H1JJK11L1M11M11T11111WY1",Chukar:"BBCCCCCCDD1G1HJJJK1LLLMMMMP1TUU1WWWYC","Rock Pigeon":"BB11C111111111J11K1111M11111111111W11","Band-tailed Pigeon":"B111C1C1D1GGHHJJ1KL11LM1M11S1UUWW1W11","Eurasian Collared-Dove":"B111111111GG1111111111M11111111111W11","Common Ground Dove":"BBCCCCCCDDGGHHJJJKLL1LMMMMPSTUUWWWWYC","White-winged Dove":"BBCCCCCCDDGGHHJJJKLL1LMMMMPSTUUWWWWYC","Mourning Dove":"B11C1C111D111111111111111111111111111","Common Nighthawk":"1B1CC1C11D111H11111L1LMMM1PST111WW11C","Common Poorwill":"BBCCCCCCDDGG1HJJJ1LLLLMMM1PSTUUWWWWYC","Black Swift":"BBCCCCCCDDGGHHJJJKL1LLMMMMPSTUUWWWWYC","Vaux's Swift":"B11111C111G11111111111M1M111111111111","White-throated Swift":"BBCCCCCC1D1G1HJ1JK1LLLMMMMP1TUUWWWWYC","Black-chinned Hummingbird":"BBCCCCCCDDGG1HJJJK1LLLMMMMPST1UW1WWYC","Anna's Hummingbird":"B11111C111GGH1JJ1KL111M1M11S1UUW11W11","Costa's Hummingbird":"BBCCCCCCDDGGHHJJ1KL1LLMMMMPSTUUWW1WYC","Calliope Hummingbird":"BBCCCCCC1DG1H1JJJ11LL1MMM1PSTU111WWYC","Rufous Hummingbird":"B11111C11DG1H1J1111L11M1M11S111W11W11","Allen's Hummingbird":"BBCCCCC1DDGGHHJJJKLLLLMMMMPSTUUWWWWYC","Virginia Rail":"BB11C111DDGG1H1JJ11111M1M11S1U1WW1WY1","Giant Wood-Rail":"BBCCCCCCDDGGHHJJJKLLLLMMMMPSTUUWWWWY1",Sora:"BB1C1C1CDDGG1H1JJK11L1M1M11ST11WW1WY1","American Coot":"B1111111111G11JJ111111M11111111111W11","Yellow Rail":"BBCCCCCCDDGGHHJJJ1LLLLMMMMPSTUUWWWWYC","Sandhill Crane":"BBCC1CCC1DG11H1JJ11LLLM1M1PSTU1WW1WY1","Black-necked Stilt":"BBCCCCCCDDGG11JJJ111LLMM111ST1UWW1WYC","American Avocet":"BBCCCCCCDDGG1HJJJ111LLMM1MPS1UU1W1WYC","Black Oystercatcher":"BBC1C1C1DDGGHHJJJKLL1LMMMMPS1UUWWWWYC","Black-bellied Plover":"BBC111C1D1GGHHJJJK111LMMMMPS1UUWWWWYC","American Golden-Plover":"BBC1CCCCDDGGHHJJJKL1LLM1MMPS1UUWWWWY1","Pacific Golden-Plover":"BBCCC1CCDDGGHHJJJKLLLLMMMM1S1UUWWWWYC",Killdeer:"BB11111111G11111111111M11111111111W11","Semipalmated Plover":"BBC111C11DGGHHJJJK111LMMM1PS1UUWW1WYC","Mountain Plover":"BBCCCCCCD1GGHHJJJKLL1LMMMMPSTUUWWWWYC","Snowy Plover":"BBCCCCCCDDGG1HJJJK111LMMMMPSTUUWWWWYC","Upland Sandpiper":"BBCCCCCCDDG1HHJJJKLLLLMMMMPSTUUWWWWYC",Whimbrel:"BBC1C1CCDDGGHHJJJKL11LMMMM1S1UUWWWWYC","Long-billed Curlew":"BBCCCCCCDDG11HJJJK1LL1MM1MPSTUU11WWYC","Bar-tailed Godwit":"BBCCCCCCDDGGHHJJJKLL1LMMMMPS1UUWWWWYC","Hudsonian Godwit":"BBCCCCCCDDGGHHJJJKLLLLM1MMPSTUUWWWWYC","Marbled Godwit":"BBC1C1CCDDGGH1JJJK111LMMMMPS1UUWWWWYC","Short-billed Dowitcher":"BBC111CCD1GGHHJJJKL11LMMMMPS1UUWW1WYC","Long-billed Dowitcher":"BBCC1CCC11GG1HJJJK11LLM1M11S11UWW1WY1","Wilson's Snipe":"1B11111CDDG11H1JJ11111M1M11S111111WY1","Wilson's Phalarope":"BBCCCC1C1DG11HJJJ111LLM1111STU1WW1WYC","Red Phalarope":"BBC1C1C1D1GGHHJJJKL11LMMMMPS1UUWWWWYC","Red-necked Phalarope":"BBC111CCD1GGHHJJJK111LMM11PS1UUWW1WY1","Spotted Sandpiper":"BB11C11111G1111J111111M11111111111W11","Solitary Sandpiper":"BBCCCCCC11GGHHJJJKL11LMMMMPSTUUWW1WY1","Wandering Tattler":"BBC1CCCCDDGGHHJJJKLL1LMMMMPSTUUWWWWYC","Lesser Yellowlegs":"BBCC1CCC11GGHHJJJKL1LLM1M11S1UUWW1WY1",Willet:"BBCCCCCC1DG11HJJJK1L1LMMMMPSTUUWWWWYC","Greater Yellowlegs":"BBC111C111GG1H1JJ11111M1M11S11UWW1WY1","Ruddy Turnstone":"BBC1C1CCDDGGHHJJJKLL1LMM1MPSTUUWW1WYC","Black Turnstone":"BBC1C1C1DDGGHHJJJKLL1LMMMMPS1UUWWWWYC","Red Knot":"BBC1C1CCDDGGHHJJJKLL1LMMMMPSTUUWWWWYC",Surfbird:"BBC1C1C1DDGGHHJJJKLL1LMMMMPS1UUWWWWYC",Ruff:"BBCCCCCCDDGGHHJJJKLLLLM1MMPSTUUWW1WYC","Sharp-tailed Sandpiper":"BBCCCCCCDDGGHHJJJKL1LLMMM1PSTUUWWWWYC","Stilt Sandpiper":"BBCCCCCCDDGGHHJJJKLLLLM1M1PS1UUWWWWYC","Red-necked Stint":"BBCCCCCCDDGGHHJJJKLLLLMMMMPS1UUWWWWYC","Buff-breasted Sandpiper":"BBCCCCCCDDGGHHJJJKL1LLMMMMPS1UUWWWWYC",Sanderling:"BBC111C1D1GGHHJJJK111LMMM1PS1UUWWWWYC",Dunlin:"BBC1CCC111GGHHJJJK111LM1M11S1UUWW1W11","Rock Sandpiper":"BBC1C1CCDDGGHHJJJKLLLLMMMMPS1UUWWWWYC","Baird's Sandpiper":"BBCC11CCDDGGHHJJJKL1LLMMM1PS1UUWWWWYC","Little Stint":"BBCCCCCCDDGGHHJJJKLLLLMMM1PSTUUWWWWYC","Least Sandpiper":"BBC111C111GG11JJJK1111M1M11S1U1WW1WY1","Pectoral Sandpiper":"BBCC1CC1DDGGHHJJJK111LM1M1PS1UUWW1WYC","Western Sandpiper":"BBC111C11DGG1HJJJK111LM1M1PS11UWW1WY1","Semipalmated Sandpiper":"BBCCCCCCDDGGHHJJJKL1LLMMM1PS1U1WW1WYC","Long-tailed Jaeger":"BBC1CCC1D1GGHHJJJKL11LMMMMPSTUUWW1WYC","Parasitic Jaeger":"BBC1C1C1D1GGHHJJJKL11LMMMMPS1UUWWWWYC","Pomarine Jaeger":"BBCCC1C1D1GGHHJJJKL11LMMMMPS1UUWWWWYC","South Polar Skua":"BBCCC1C1D1GGHHJJJKL11LMMMMPS1UUWWWWYC","Rhinoceros Auklet":"BBC1C1C1D1GGHHJJJKL11LMMMMPS1UUWWWWYC","Tufted Puffin":"BBC1CCC1DDGGHHJJJKLL1LMMMMPSTUUWWWWYC","Cassin's Auklet":"BBC1CCC1DDGGHHJJJKLL1LMMMMPS1UUWWWWYC","Marbled Murrelet":"BBCCC1C1DDGGHHJJJKLL1LMMMMPS1UUWWWWYC","Pigeon Guillemot":"BBC1C1C1DDGGHHJJJKLL1LMMMMPS1UUWWWWYC","Common Murre":"BBC1C1C1D1GGHHJJJKLL1LMMMMPS1UUWWWWYC","Ancient Murrelet":"BBCCCCCCDDGGHHJJJKLL1LMMMMPSTUUWWWWYC","Scripps's Murrelet":"BBCCCCCCDDGGHHJJJKLLLLMMMMPS1UUWWWWYC","Little Gull":"BBCCCCCCDDGGHHJJJK1LLLMMMMPSTUUWWWWYC","Black-legged Kittiwake":"BBC1C1C1D1GGHHJJJKLL1LMMMMPS1UUWWWWYC","Sabine's Gull":"BBC1C1C1D1GGHHJJJKL11LMMM1PS1UUWW1WYC","Bonaparte's Gull":"BBC111CCDDGG11JJJ1111LMMM11S1UUWWWWYC","Black-headed Gull":"BBC1CCCCDDGGHHJJJKLLLLMMMMPSTUUWWWWYC","Franklin's Gull":"BBCCCC1CDDGG1HJJJK1LLLMMM1PSTUUWWWWYC","Heermann's Gull":"BBC1C1C1D1GGHHJJJKLL1LMMMMPS1UUWWWWYC","Short-billed Gull":"BBC111CCDDGGH1JJJKL11LM1M1PS1UUWW1WYC","Ring-billed Gull":"BB1111CCD1GG111JJ1111LM111P111UW11WY1","Western Gull":"BB11C1C1D1GGHHJJJKL11LMMM1P11UUWW1W1C","American Herring Gull":"BB1111C1D1GGHHJJJKL11LM1M1PS1UUWW1W11","Glaucous Gull":"BBCCCCCCDDGGHHJJJKLL1LMMM1PS1UUWWWW1C","Lesser Black-backed Gull":"BBCCCCCCDDGGH1JJJKLLLLMMMMPSTUUWWWWYC","California Gull":"BB1111C1111G11JJJ11111M111P111UW11WY1","Glaucous-winged Gull":"BB1111C1D1GGH1JJJKL111M111P11UUW11W11","Slaty-backed Gull":"BBCCCCCCDDGGHHJJJKLLLLMMM1PSTUUWWWWYC","Iceland Gull":"BB11C1CCDDGGHHJJJKLL1LM1M1PSTUUWWWW11","Caspian Tern":"BBC11CC1DDGG1111JK111LMM11P11UUW1WWY1","Black Tern":"BBCCCCCCDDGG1HJJJ111LLMMMMPSTUUWWWWY1","Forster's Tern":"BBCCCCCCDDGG1HJJJ111LLMM1MPSTUUWWWWYC","Arctic Tern":"BBC1C1C1D1GGHHJJJKL11LMMMMPS1UUWWWWYC","Common Tern":"BBCCCCCCD1GGHHJJJKLLLLMMM1PSTUUWW1WYC","Elegant Tern":"BBC1CCCCDDGGHHJJJKLL1LMMMMPSTUUWWWWYC","Pied-billed Grebe":"BBC111C111GG11JJ111111M111111111W1WY1","Horned Grebe":"BBC1C1CCDD1G11JJJ11L11MMM1PS1UU1W1WY1","Red-necked Grebe":"BBC1C1CCDDGGH1JJJKLL11MMM1PS1UUWW1WY1","Eared Grebe":"B1CCCC1C11GG1HJJJ1111LMM1MPSTUUWWWWYC","Western Grebe":"BB1111C1D1GG11JJJ11111MMM1PS11UW11WY1","Clark's Grebe":"BBC1CCC1DDGG1HJJJ111LLMMM1PSTUUWW1WYC","Red-throated Loon":"BBC1C1C1DDGGHHJJJKLL1LMMM1PS1UUWWWWY1","Pacific Loon":"BBC1C1C1DDGGHHJJJKLL1LMMM1PSTUUWWWWY1","Common Loon":"BBC1C1C1DDGGH1JJJK1111MMM1PS1UUWW1WY1","Yellow-billed Loon":"BBCCCCCCDDGGHHJJJKLLLLMMM1PS1UUWW1WY1","Laysan Albatross":"BBCCC1C1DDGGHHJJJKLLLLMMMMPSTUUWWWWYC","Black-footed Albatross":"BBC1C1C1D1GGHHJJJKL11LMMMMPS1UUWWWWYC","Short-tailed Albatross":"BBCCC1CCDDGGHHJJJKLLLLMMMMPSTUUWWWWYC","Fork-tailed Storm-Petrel":"BBC1C1C1D1GGHHJJJKL11LMMMMPS1UUWWWWYC","Leach's Storm-Petrel":"BBC1CCC1DDGGHHJJJKL1LLMMMMPS1UUWWWWYC","Northern Fulmar":"BBC1C1C1D1GGHHJJJKL11LMMMMPS1UUWWWWYC","Murphy's Petrel":"BBCCCCC1DDGGHHJJJKLLLLMMMMPSTUUWWWWYC","Hawaiian Petrel":"BBCCCCC1DDGGHHJJJKLLLLMMMMPS1UUWWWWYC","Cook's Petrel":"BBCCCCC1DDGGHHJJJKLLLLMMMMPSTUUWWWWYC","Pink-footed Shearwater":"BBC1C1C1D1GGHHJJJKL11LMMMMPS1UUWWWWYC","Buller's Shearwater":"BBC1C1C1D1GGHHJJJKL11LMMMMPS1UUWWWWYC","Sooty Shearwater":"BBC1C1C1D1GGHHJJJKL11LMMMMPS1UUWWWWYC","Short-tailed Shearwater":"BBCCCCCCDDGGHHJJJKLL1LMMMMPSTUUWWWWYC","Cocos Booby":"BBCCC1C1DDGGHHJJJKLL1LMMMMPSTUUWWWWYC","Brandt's Cormorant":"BBC1C1C1D1GGHHJJJKLL1LMMM1PS1UUWWWWYC","Pelagic Cormorant":"BBC1C1C1D1GGHHJJJKLL1LMMMMPS1UUWWWWYC","Double-crested Cormorant":"B1111111D1GG1111J11111M111P1111W11WY1","White-faced Ibis":"BBCCCCCCDDGG1HJJJ11LLLMMMM1STUUWWWWYC","American Bittern":"BBCCCCCCDDGG1H1JJ111L1M1111S1U1WW1WY1","Black-crowned Night Heron":"BBCC1CC1DDGG11JJJK1LLLMM11PSTUUWW1WY1","Snowy Egret":"BBCCCCC1DDGG1HJJJK1LLLMMM1PS1UUWWWWY1","Green Heron":"BBC1CCC1D1GGH11JJKL111M1M1PS1UUWW1WY1","Western Cattle-Egret":"BBCCCCCCDDGGHHJJJKLLLLMMMMPS1UUWWWWYC","Great Egret":"B11111C1DDGG11JJJ11111M1111S1UUWW1WY1","Great Blue Heron":"B111111111G11111J11111M11111111111W11","American White Pelican":"BBC11CCCDD1G1111J111L1MM11PST11W11WY1","Brown Pelican":"BBC1C1C1D1GGHHJJJKL11LMMM1PS1UUWWWWYC","Turkey Vulture":"11111111111G1111111111M11111111111W11",Osprey:"BB111C1111GG1111111111M11111T11111W11","White-tailed Kite":"BBCCC1C1D1GGHH1JJKL1LLMMMMPS1UUWWWWYC","Golden Eagle":"B1CCCC1C1DGG11JJJ11LLL1MM1P1TU111WWYC","Sharp-shinned Hawk":"BB1C11C11DGG11J11KLL1LMMM11S1UU111WY1","Cooper's Hawk":"B1111CC1111G11J11K1111M111PST11W11W11","American Goshawk":"BBCCCCCC1DGGH1JJJK1LLL1MMMP1TUUWWWWYC","Northern Harrier":"B1C11C11D11111JJJ11111M11111111111W11","Bald Eagle":"B1111C1111GG1111111111111111111111W11","Broad-winged Hawk":"BBCCCCCCDDGGHHJJJKLLL1MMMMPSTUUWWWWYC","Red-shouldered Hawk":"BBCC11C1D1GGHHJJ1KL1LLM1M1PS1UUWW1WY1","Swainson's Hawk":"BBCCCC1C1D1G1HJ1JK1LLLMMM1PST1111WWYC","Red-tailed Hawk":"B1111C1111111111111111111111111111W11","Rough-legged Hawk":"B1CCCC1CDD1G1HJ1J1LLL1MM111S1111W1W1C","Ferruginous Hawk":"BBCCCC1C1DGG1HJJJK1LLLMMMMPSTUU1WWWYC","American Barn Owl":"BBCCCC1CDDGGHHJ1J11LLLM1M11STU1WW1WYC","Flammulated Owl":"BBCCCCCCDDGGHH1JJ1LLLLMMMMPSTUUWWWWYC","Western Screech-Owl":"BB1CCCCCDDGGHHJ1JKLL1LMMM1PSTUUWWWWYC","Snowy Owl":"BBC1CCCCDDGGHHJJJKLLLLMMMMPSTUUWWWWYC","Great Horned Owl":"111C1CC11DG11HJ1J11L11MM11PST111W1WY1","Northern Pygmy-Owl":"B1CC1CCC1DGGH1JJJKLL11MMM1PSTU1WWWW1C","Burrowing Owl":"BBCCCCCCDDGG1HJJJK1L1LM11MPSTU1WWWWY1","Spotted Owl":"BBCCCCCCDDGGHHJJJ1LLLLMMMMPSTUUWWWWYC","Barred Owl":"BBCCCCCCDDGGHHJJJKLLLLMMM1PSTUUWWWWYC","Great Gray Owl":"BBCCCCCCDDGGHH1JJKLLLLMMMMPSTU1WWWWYC","Long-eared Owl":"BBCCCCCCDDGGHHJ1JKLLLL1MM1PSTUUWWWWYC","Short-eared Owl":"B1CCC1CCDDGG1HJJJK11LLMMM1PST1U111WY1","Northern Saw-whet Owl":"BBCCCCCCDDGGH1J1JK1LLLMMM1P1TUUWW1WYC","Belted Kingfisher":"B11111C1D11G11JJ11111111M111111111WY1","Williamson's Sapsucker":"BBCCCCCC1DG1HHJJJ11LLLMMMMPSTU1WWWWYC","Yellow-bellied Sapsucker":"BBCCCCCCDDGGHHJJJKLLLLMMMMPSTUUWW1WYC","Red-naped Sapsucker":"BBCCCCCC1DG11HJJJK1LLLMMM1PSTU1WWWWYC","Red-breasted Sapsucker":"B1111CCC1DGGH111111111M1M11STUUWW1W11","Lewis's Woodpecker":"BB1CCCCC1D1G1HJJJK11LLM1MMPSTU1W1WWY1","Acorn Woodpecker":"B11CCCC1DDGGH11J1KL1L1M1M1PSTUUWW1W1C","American Three-toed Woodpecker":"BBCCCCCC1DGGHHJJJ1L1LLMMMMPSTUUWWWWYC","Black-backed Woodpecker":"BBCCCCCC1DGGHHJJJKL1L1MMM1PSTUUWWWWYC","Downy Woodpecker":"B11111C11DGGH111111111M11111111W11W11","Hairy Woodpecker":"BB111CC11DG11111111L11M1M111111111W11","White-headed Woodpecker":"BBCCCCCC1DGGHHJ1J11LLLMMMMPSTUUWWWWYC","Pileated Woodpecker":"B11C1CC1DDGGHH1J11L111M1M11STUU1W1WY1","Northern Flicker":"B111111111G11111111111111111111111111","American Kestrel":"B1111C11111111J1111111111111111111111",Merlin:"B11111C11DGG1HJJJ1L111M111PS1UUWW1W11",Gyrfalcon:"BBC1CCCCDDGGHHJJJKLLL1MMMMPSTUUWWWWYC","Peregrine Falcon":"B1C111C11D1G1HJJJK1111M1M1PS1UUW11WY1","Prairie Falcon":"11CCCCCC1D1G1HJJJK1LLL1MM1P1TUUW1WWYC",Budgerigar:"BBCCCCCCDDGGHHJJJKLLLLMMMMPSTUUWW1WYC","Monk Parakeet":"BBCCCCCCDDGGHHJJJKLLLLMMMMPSTUUWWWWY1","Olive-sided Flycatcher":"B11CCCCC1DGG11JJ111L11MMM11ST11W11W11","Western Wood-Pewee":"111C1CC11DG111111111L111M111T11111W11","Willow Flycatcher":"BB1C1CCCDDGG1HJ1J1L1L1M1M1PST111W1W11","Least Flycatcher":"BBCCCCCCDDGG1HJJJKLLLLMMMMPST1UWWWWYC","Hammond's Flycatcher":"BB11CC1C1DGG1111J1L111M1M1PST111W1WYC","Gray Flycatcher":"BBCCCCCC1DGG1HJ1JK1LLL1MM1P1TUUWWWWYC","Dusky Flycatcher":"BBCCCCCC1DGG1HJJJ11LLLM1M1PSTU1W1WWYC","Western Flycatcher":"BB111CC11DG11H1J111111M1M11S1111W1W11","Black Phoebe":"B11111C1D1GGHH1J1KL1L1M1M11S1UUWW1WY1","Say's Phoebe":"BBC1CCCC1D111HJJJK1LLLMM11P1TUUW1WWY1","Ash-throated Flycatcher":"1BCCCCCCDD1111111K1LLLMMMMP1TUUW1WWYC","Tropical Kingbird":"BBC1CCC1DDGGHHJJJKLL1LMMMMPSTUUWWWWYC","Cassin's Kingbird":"BB1CCCCCDDGGHHJJJKLLLLMMMMPSTUUWWWWYC","Western Kingbird":"BBCCCCCC1DG11111JK11111111P1T11W1WWY1","Eastern Kingbird":"BBCCCCCCDDGG1HJJJKLLLLMM11PST111WWWYC","Scissor-tailed Flycatcher":"BBCCCCCCDDGGHHJJJKLLLLMMM1PSTUUWWWWYC","White-eyed Vireo":"BBCCCCCCDDGGHHJJJKLL1LMMMMPSTUUWWWWYC","Hutton's Vireo":"B1111CCCD1GGHH1J1KLL11M1M1PSTUUWW1WY1","Cassin's Vireo":"11CCC1CC1DGG11111111LLMMM1P1TU1111W11","Plumbeous Vireo":"BBCCCCCCDDGG1HJJJKLLLLMMMMPSTUUWWWWYC","Warbling Vireo":"11111CCC1DG11111J11111M1M111111111W11","Red-eyed Vireo":"BB1CCCCCDDGGHHJJJKLLLLMMM1PST1UWWWW1C","Loggerhead Shrike":"BBCC1CCCDD1111J1JK1LLLMMM1P1TUUWWWWYC","Northern Shrike":"B1C11C1C1D1GHHJ1JKLLLLM1M1PST111W1WYC","Canada Jay":"B111CCCCDDGGH1JJJ1L111MMM1PS1UU1W1WYC","Pinyon Jay":"BBCCCCCC1DGGHHJJJK1LLLMMMMPSTUUWWW1YC","Steller's Jay":"B11111C11DG1H111111111M1M11S1U1111W11","Blue Jay":"BBCCCCCC1DGGHHJJJKLLLLMMMMPSTUUWWWWYC","California Scrub-Jay":"B1111C11111G1111111111M1M11111UW11W11","Black-billed Magpie":"BBCCCC1C1DGG1H11J11LLLMM1MP1T1111WWYC","Clark's Nutcracker":"1B1CCCCC1DGGH1JJJ111LLMMMMPSTU11WWWY1","American Crow":"B1111111111111111KL111M11111111111W11","Common Raven":"B1111C1111111111111111111111111111W11","Black-capped Chickadee":"B11111C1DDGGH11J1KL111M1M111111111W11","Mountain Chickadee":"1BCCCCCC1DG11111J11LLL1MM1PST1111WWYC","Chestnut-backed Chickadee":"B11111C1D1GGH1JJ1KL111M1M11S1111W1W11","Oak Titmouse":"BBCCCCCCDDGGHH1J1KLLLLMMMMPSTUUWWWWYC","Juniper Titmouse":"BBCCCCCCDDGGHHJJJK1LLLMMMMPSTUUWWWWYC","Horned Lark":"BB1CC1CC1D111H11J11L11MM1111T1111WWYC","Bank Swallow":"BBCC1C1C1DGG11JJJK11LLMM11P1TU11111Y1","Tree Swallow":"BB111C1111G11111111111M11111T11111W11","Violet-green Swallow":"B1111C111111111111111111M111111111W11","Purple Martin":"B1C11CC1DDGGH1JJJKL11LMMM11S1UUWW1WY1","Northern Rough-winged Swallow":"BB11CCC11DG11H11JK111L11M1PST11111WY1","Barn Swallow":"B111111111G1111J111111111111111111W11","Cliff Swallow":"B1111C1111111111111111111111111111W11",Bushtit:"B1111111DD1G1H111K111111M1111UUW11W11",Wrentit:"B1C1C1C1D1GGHH1J1KLL1LMMMM1S1UUWWWWYC","Ruby-crowned Kinglet":"B11111C11DGG1HJJJ11111M1M1P1111111WY1","Golden-crowned Kinglet":"B11111111DGG111J111111M1M1P11111W1W11","White-breasted Nuthatch":"111C1CCC1DG1HH111K11L1M1M11STU1WW1W11","Pygmy Nuthatch":"BBCCCCCC1DGGHHJ1J11LLLMMM1PSTU1WWWWYC","Red-breasted Nuthatch":"B11111C11DG111111111L1M1M11ST11111W11","Brown Creeper":"11111CC11DGG111111L111M1M1111U11W1W11","Blue-gray Gnatcatcher":"BBCCCCCCDD1G1HJ11K1LLLMMMMPS1UUWWWWYC","Rock Wren":"BBCCCCCC1D1111JJJK1LLLMMMMP1TU11WW1YC","Canyon Wren":"BBCCCCCC1D1G1HJ1JK1LLLMMM1P1TU1W1WWYC","Northern House Wren":"B11C1CCC1DG11111111LL11MM111T11111W11","Pacific Wren":"BB1111C111GGH1J1JKL111M1M1P11111W1W11","Sedge Wren":"BBCCC1CCDDGGHHJJJKLLLLMMMMPSTUUWWWWYC","Marsh Wren":"BBC1111111GG1HJJJ11111M1111111UWW1WY1","Bewick's Wren":"B11111C1DD1G111J11L111M11111111W11W11","American Dipper":"BBCCCCC11DGGH1J1JKL111M1M1PS1U11WWWYC","European Starling":"B111111111111111111111M11111111111W11","Gray Catbird":"BBCCCCCCDDGG1HJJJKLLLLMMM1PST111WWWYC","Brown Thrasher":"BBCCCCCCDDGGHHJJJKLL1LMMMMPSTUUWWWWYC","Sage Thrasher":"BBCCCCCC1DG11HJJJK1LLL1MMMPSTUUWWWWYC","Northern Mockingbird":"BBCCCCCCDDGG1HJJJKLL1LMMM1PS1UUWW1WYC","Eastern Bluebird":"BBCCCCCCDDGGHHJJJKLLLLMMM1PSTUUWWWWYC","Western Bluebird":"B111CCCC111G11111K1111M1M1P1T11W11W11","Mountain Bluebird":"BB1CCCCC1DG11111J11LL11MM1PST111WWWYC","Townsend's Solitaire":"B1CCCCCC1DGG11J1J11LLLMMM1PST111111Y1","Varied Thrush":"BB11C1C111GGH1JJJKL111MM1111111WW1WYC",Veery:"BBCCCCCCDDGG1HJJJKLLLLMMMMPST111WWWYC","Swainson's Thrush":"BB111CC11DGG111JJ1L111M1M11S1111W1W11","Hermit Thrush":"BB11C1CC11GG111JJ11111M1M1PS111W11W1C","Wood Thrush":"BBCCCCCCDDGGHHJJJKL1LLMMMMPSTUUWWWWYC","American Robin":"1111111111G11111111111M11111111111W11","Bohemian Waxwing":"BBCCCCCCDDGGHHJJJKLLLLMMMMPSTU11WWWYC","Cedar Waxwing":"B11111C111G111JJ111111M1111S111111W11","House Sparrow":"BB11111111111111111L11M11111111111W11","White Wagtail":"BBCCCCCCDDGGHHJJJKLLLLMMMMPS1UUWWWWYC","American Pipit":"B1CC11CC1DGG1HJJJK1111M1M1PS1UUWW1W11",Brambling:"BBCCCCCCDDGGHHJJJKLLLLMMM1PSTUUWWWWYC","Evening Grosbeak":"B11CCCCC1DGG1111J1L111MMM1PSTU1W11W11","Pine Grosbeak":"BBCCCCCCDDGGH1JJJKLLL1MMMMPSTUUWWWWYC","Gray-crowned Rosy-Finch":"B1CCCCCCDDGGHHJJJKLLLLMMM1PSTUUWWWWYC","Black Rosy-Finch":"BBCCCCCCDDGG1HJJJKLLLLMMMMPSTUUWWWWYC","House Finch":"B11111111111111J111111M11111111111111","Purple Finch":"B1111CC11DGGH11J1KL111M1M11S1UUWW1W11","Cassin's Finch":"BB1CCCCC1DG11111J11LLL1MMMPST111WWWYC",Redpoll:"B1CCCCCCDDGGHHJJJKLLLLMMM1PSTUU1WWWYC","Red Crossbill":"1B11C1C11DGGH1J1J11111M1M1PS1U11W1W11","White-winged Crossbill":"BBC1CCCCDDGGHHJJJKLLLLMMMMPSTUUWWWWYC","Pine Siskin":"11111CC11DGG1111J11111M1M1P11U1111WY1","Lesser Goldfinch":"B11C1CC11DGG11111111L1M1M11111UW11W11","American Goldfinch":"11111111111111111K1111111111111111W11","Lapland Longspur":"B1C1CCCCDDGGHHJJJKLL1LMMM1PS1UUWWWWYC","Chestnut-collared Longspur":"BBCCCCCCDDGGHHJJJKLLL1MMM1PSTUUWWWWYC","Snow Bunting":"B1C1CCCCDDGGHHJJJKLLLLMMMMPSTUU1WWWYC","Grasshopper Sparrow":"BBCCCCCCDDGGHHJJJKLLLLMMMM11TU1W1WWYC","Chipping Sparrow":"B111CCCC1DG11111111LL111M111T11111W1C","Clay-colored Sparrow":"BBCC1CCCDDGGHHJJJKLL1LMMMMPSTUUWW1WY1","Black-chinned Sparrow":"BB1CCCCCDDGGHHJJJKLLLLMMMMPSTUUWWWWYC","Field Sparrow":"BBCC1CCCDDGGHHJJJKLLLLMMMM1STUUWWWWYC","Brewer's Sparrow":"1BCCCCCC1DG11HJ1JK1LLLMMMMP1TU11WWWYC","Black-throated Sparrow":"BBCCCCCC1DGG1HJJJK1LLLMMMMPSTUUWWWWYC","Lark Sparrow":"BBCCCCCCDDGG1H1JJKLL1L1M11P1TUUWWWWYC","Lark Bunting":"BBCCCCCCDDGGHH1JJKLLLLMMMMPSTUUWWWWYC","American Tree Sparrow":"BB1C1CCCDDGGHHJJJKLLLLMMMMPSTUU1WWWYC","Fox Sparrow":"B11111C111GG11JJJ11111M1M1PS11UW11W11","Dark-eyed Junco":"B111111111111111111111111111111111W11","White-crowned Sparrow":"B1111111111G11J1J11111M1111111UW11W11","Golden-crowned Sparrow":"B11111C111GGH1111KL111M1M11111UW11W11","Harris's Sparrow":"BBCC1CCCDDGGHHJJJKLLLLMMM1PST1UWWWWYC","White-throated Sparrow":"B1CC11CCDDGG1HJJJKLLL1M1M1PSTUUWW1WYC","Sagebrush Sparrow":"BBCCCCCC1DGG1HJJJK1LLLMMM1PSTUUWWWWYC","Vesper Sparrow":"BBCCCCCC1DG11H11JK1LLL1MMMP1T11111W1C","Savannah Sparrow":"B1111C111111111JJ11111M1M111111111W11","Song Sparrow":"B111111111111111111111M111111111W1W11","Lincoln's Sparrow":"B11111C111GG111JJ11111M1M11S1U1W11WY1","Swamp Sparrow":"BBC111C1DDGGHHJJJKLLLLMMMMPS1UUWW1WYC","California Towhee":"BBCCCCCCDDGGHH1J1KLLLLMMMMPSTUUWWWWYC","Green-tailed Towhee":"BBCCCCCC1DGGHHJ1J11LLL1MMMPSTUUWWWWYC","Spotted Towhee":"B11111C111GG1111111111111111111111W11","Yellow-breasted Chat":"B1CCCCCC1D1G1H1J1KL1L1M1M111T11111W11","Yellow-headed Blackbird":"BBCCCC1C1DG11HJJJ111L1M1111ST11W1WWY1",Bobolink:"BBCCCCCCDDGG1HJJJKLLLLMMMMPST11WWWWYC","Western Meadowlark":"B1C1111111111H11J11111M111111111111Y1","Orchard Oriole":"BBCCCCCCDDGGHHJJJKLLLLMMM1PSTUUWWWWYC","Hooded Oriole":"BBCCCCCCDDGGHHJJJKLL1LMMMMPSTUUWWWWYC","Bullock's Oriole":"B11C1CCC1D111H11111111111111T11111W11","Red-winged Blackbird":"B111111111111111111111111111111111W11","Tricolored Blackbird":"BBCCCCCCDDGGHHJJJKLLLLMMM1PST1UW1WWYC","Brown-headed Cowbird":"B1111C111D111111111111M11111111111W11","Rusty Blackbird":"BBC1CCCCDDGGHHJJJKLLLLMMM1PSTUUWW1WYC","Brewer's Blackbird":"B111111111111111111111111111111111W11","Great-tailed Grackle":"BBCCCCCCDDGG1H1JJKLLLLMMM1PSTUUWWWWYC",Ovenbird:"BBCCCCCCDDGGHHJJJKLLLLMMM1PSTUUWWWWYC","Northern Waterthrush":"BBCCCCCCDDGGHHJJJ1LLLLMMM1PSTUUWWWWYC","Blue-winged Warbler":"BBCCCCCC1DGGHHJJJKLLLLMMMMPSTUUWWWWYC","Black-and-white Warbler":"BB1CCCCCDDGG1HJJJKLLLLMMM1PSTUUWWWWYC","Tennessee Warbler":"BBCCCCCCDDGGHHJJJKL1LLMMMMPSTUUWWWWY1","Orange-crowned Warbler":"B111CCC111GG111111L111M1M111111111W11","Nashville Warbler":"B11CCCCC1DGGH11J11LL11M1M1PST1UW11WYC","Virginia's Warbler":"BBCCCCCCDDGGHHJJJKLLLLMMM1PSTUUWWWWYC","MacGillivray's Warbler":"BB1CCC1C11GG111111L111M1M11ST111W1WY1","Common Yellowthroat":"B1111C1111G11111J11111M1111S111WW1W11","Hooded Warbler":"BBC1CCCCDDGGHHJJJKLLLLMMMMPSTUUWWWWYC","American Redstart":"BBCCCCCC1DGGHHJJJKLLLLMMM1PSTUUWWWWYC","Yellow Warbler":"B1111C1C1D111111111111111111T11111W11","Chestnut-sided Warbler":"BBCCCCCCDDGG1HJJJKLLLLMMMMPSTUUWWWWYC","Blackpoll Warbler":"BBCCCCCCDDGG1HJJJKLLLLMMMMPSTUUWWWWYC","Black-throated Blue Warbler":"BBCCCCCCDDGGHHJJJKLLLLMMM1PSTUUWWWWYC","Palm Warbler":"BBCCC1CCDDGGHHJJJKLLLLMMM1PSTUUWWWWYC","Yellow-rumped Warbler":"B11111C111111111J11111M11111111111W11","Yellow-throated Warbler":"BBCCCCCCDDGGHHJJJKLLLLM1MMPSTUUWW1WYC","Black-throated Gray Warbler":"BB111CCC1DGG111JJK1111M1M11S1UUW11W11","Townsend's Warbler":"B11111CC11GG11J1JK1111MMM1P1111W11WY1","Hermit Warbler":"B11CCCCC1DGGH11JJ11111M1M1PSTUUWW1WY1","Wilson's Warbler":"B1111CC111GG11J1JK1111M1M1111UUW11W11","Summer Tanager":"BBCCCCCCDDGGHHJJJKLLLLMMM1PSTUUWW1WYC","Scarlet Tanager":"BBCCCCCCDDGGHHJJJKLL1LMMMMPSTUUWWWWYC","Western Tanager":"111C1CC11D111111111111M1M111T11111W11","Rose-breasted Grosbeak":"BBCCCCCCDDGGHHJJJKLLLLMMM1PSTUUWWWWYC","Black-headed Grosbeak":"B1111CC11D111111111111M1111S111111W11","Blue Grosbeak":"BBCCCCCCDDGGHHJJJKLLLLMMMMPSTUUWW1WYC","Lazuli Bunting":"BB1CCCC1DD1111111K11LL111111T11111W11",Dickcissel:"BBCCCCCCDDGGHHJJJKLLLLMMMMPS1UUWWWWYC"};/*! $Id: $
 * Copyright (c) 2025 by Skip Russell
 */function T0(){return console.log("skipsTargetFilterInitialize"),{IsExcluded:a};function a(e,t){let n=A0[e];if(!n||n<0)return console.warn(`skipsTargetFilter: county code "${e}" is not in the county filter list`),!1;var i=W0[t];if(!i||i.length<=n)return console.warn(`skipsTargetFilter: species name "${t}" is not in the life list filter data`),!1;var l=i.charAt(n)==="1";return l}}/*! $Id: skipsNav.js 55 2021-05-17 05:41:48Z skip $
 * Copyright (c) 2015 by Skip Russell
 */function w0(){var a=document.getElementById("skipsNavOpen"),e=document.createElement("div");e.className="skipsNavVeg",e.innerHTML="&equiv;",a.innerHTML="",a.appendChild(e),a.onclick=i;var t=document.getElementById("skipsSettingsPanel"),n=document.createElement("a");return n.setAttribute("href","javascript:void(0)"),n.className="navClose",n.onclick=l,n.innerHTML="&times;",t.appendChild(n),{closeNav:l};function i(){t.style.width="100%",t.style.maxWidth="500px",t.style.visibility="visible"}function l(){t.style.width="0",t.style.visibility="hidden"}}/*! $Id: index.js 74 2022-05-24 22:05:36Z skip $
 * Copyright (c) 2015 by Skip Russell
 */E0();function E0(){var a=w0(),e=T0(),t=Ws(e);L0(t.latLng,t.mapClickCallback),a.closeNav()}
//# sourceMappingURL=index-D-PWsXK0.js.map
